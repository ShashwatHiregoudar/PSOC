ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_CSHL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_BaseInit,"ax",%progbits
  20              		.align	2
  21              		.global	CapSense_BaseInit
  22              		.code	16
  23              		.thumb_func
  24              		.type	CapSense_BaseInit, %function
  25              	CapSense_BaseInit:
  26              	.LFB32:
  27              		.file 1 "Generated_Source\\PSoC4\\CapSense_CSHL.c"
   1:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:Generated_Source\PSoC4/CapSense_CSHL.c **** * Version 2.60
   4:Generated_Source\PSoC4/CapSense_CSHL.c **** *
   5:Generated_Source\PSoC4/CapSense_CSHL.c **** * Description:
   6:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CSD component.
   8:Generated_Source\PSoC4/CapSense_CSHL.c **** *
   9:Generated_Source\PSoC4/CapSense_CSHL.c **** * Note:
  10:Generated_Source\PSoC4/CapSense_CSHL.c **** *
  11:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CapSense_CSHL.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  18:Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_PVT.h"
  20:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  21:Generated_Source\PSoC4/CapSense_CSHL.c **** /* SmartSense functions */
  22:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  23:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern void CapSense_UpdateThresholds(uint32 sensor);
  24:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  25:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  26:Generated_Source\PSoC4/CapSense_CSHL.c **** /* Storage of filters data */
  27:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
  28:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) )
  29:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  30:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 2


  31:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  32:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  33:Generated_Source\PSoC4/CapSense_CSHL.c **** #elif ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER))   || \
  34:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER))   || \
  35:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
  36:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))   || \
  37:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)) )
  38:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  39:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  40:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  41:Generated_Source\PSoC4/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  42:Generated_Source\PSoC4/CapSense_CSHL.c ****         */
  43:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  44:Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  45:Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint8 CapSense_sensorEnableMask[CapSense_TOTAL_SENSOR_MASK];
  46:Generated_Source\PSoC4/CapSense_CSHL.c **** extern const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT];
  47:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  48:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
  49:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE];
  50:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
  51:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  52:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  53:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  54:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  55:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[CapSense_TOTAL_SENSOR_MASK] = {0u};
  56:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  57:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  58:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineReset[CapSense_TOTAL_SENSOR_COUNT] = {
  59:Generated_Source\PSoC4/CapSense_CSHL.c ****     30u, 30u, 30u, 30u, 
  60:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  61:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  62:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  63:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  64:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  65:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern CapSense_CONFIG_TYPE_P4_v2_60 CapSense_config;
  66:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  67:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  68:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
  69:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
  70:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
  71:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  72:Generated_Source\PSoC4/CapSense_CSHL.c **** /* Generated by Customizer */
  73:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[CapSense_THRESHOLD_TBL_SIZE];
  74:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  75:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  76:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  77:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_negativeNoiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  78:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  79:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_hysteresis[CapSense_WIDGET_PARAM_TBL_SIZE];
  80:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  81:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  82:Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, 5u, 5u, 5u, 
  83:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  84:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  85:Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_debounceCounter[] = {
  86:Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 0u, 0u, 0u, 0u, 
  87:Generated_Source\PSoC4/CapSense_CSHL.c **** };
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 3


  88:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  89:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_rawDataIndex[] = {
  90:Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* Button0__BTN */
  91:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button1__BTN */
  92:Generated_Source\PSoC4/CapSense_CSHL.c ****     2u, /* Button2__BTN */
  93:Generated_Source\PSoC4/CapSense_CSHL.c ****     3u, /* Button3__BTN */
  94:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  95:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  96:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_numberOfSensors[] = {
  97:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button0__BTN */
  98:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button1__BTN */
  99:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button2__BTN */
 100:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button3__BTN */
 101:Generated_Source\PSoC4/CapSense_CSHL.c **** };
 102:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 103:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 104:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 105:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 106:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 107:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 108:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 109:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 110:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 111:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 112:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value.
 113:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and
 114:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 115:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and
 116:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an
 117:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 118:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 119:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 120:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 121:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 122:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 123:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 124:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 125:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 126:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store the baseline value.
 127:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store the fraction byte of
 128:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the baseline value.
 129:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store a difference between
 130:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 131:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store a previous sample of
 132:Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 133:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before a previous sample
 134:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 135:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 136:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 137:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 138:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 139:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 140:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_BaseInit(uint32 sensor)
 141:Generated_Source\PSoC4/CapSense_CSHL.c **** {
  28              		.loc 1 141 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 4


  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 30B5     		push	{r4, r5, lr}
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
 142:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 143:Generated_Source\PSoC4/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 144:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
  38              		.loc 1 144 0
  39 0002 094B     		ldr	r3, .L2
  40 0004 1B5C     		ldrb	r3, [r3, r0]
  41              	.LVL1:
 145:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 146:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 147:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 148:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 debounceIndex;
 149:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 150:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 151:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 152:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 153:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 154:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 155:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 156:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 157:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline */
 158:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
  42              		.loc 1 158 0
  43 0006 4200     		lsls	r2, r0, #1
  44 0008 0849     		ldr	r1, .L2+4
  45 000a 545A     		ldrh	r4, [r2, r1]
  46 000c 0849     		ldr	r1, .L2+8
  47 000e 5452     		strh	r4, [r2, r1]
 159:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
  48              		.loc 1 159 0
  49 0010 0818     		adds	r0, r1, r0
  50              	.LVL2:
  51 0012 0025     		movs	r5, #0
  52 0014 0572     		strb	r5, [r0, #8]
 160:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
  53              		.loc 1 160 0
  54 0016 0573     		strb	r5, [r0, #12]
 161:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 162:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_debounceCounter[widget] =  CapSense_debounce[widget];
  55              		.loc 1 162 0
  56 0018 0648     		ldr	r0, .L2+12
  57 001a C05C     		ldrb	r0, [r0, r3]
  58 001c CB18     		adds	r3, r1, r3
  59              	.LVL3:
  60 001e 1874     		strb	r0, [r3, #16]
 163:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 164:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 165:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) ||\
 166:Generated_Source\PSoC4/CapSense_CSHL.c ****          (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)))
 167:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 168:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 5


 169:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 170:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 171:Generated_Source\PSoC4/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 172:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 173:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 174:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 175:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 176:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 177:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
  61              		.loc 1 177 0
  62 0020 054B     		ldr	r3, .L2+16
  63 0022 D452     		strh	r4, [r2, r3]
 178:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 179:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 180:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* No Raw filters */
 181:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 182:Generated_Source\PSoC4/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 183:Generated_Source\PSoC4/CapSense_CSHL.c ****             */
 184:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 185:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 186:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 187:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 188:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 189:Generated_Source\PSoC4/CapSense_CSHL.c **** }
  64              		.loc 1 189 0
  65              		@ sp needed
  66 0024 30BD     		pop	{r4, r5, pc}
  67              	.L3:
  68 0026 C046     		.align	2
  69              	.L2:
  70 0028 00000000 		.word	CapSense_widgetNumber
  71 002c 00000000 		.word	CapSense_sensorRaw
  72 0030 00000000 		.word	.LANCHOR0
  73 0034 00000000 		.word	.LANCHOR1
  74 0038 00000000 		.word	CapSense_rawFilterData1
  75              		.cfi_endproc
  76              	.LFE32:
  77              		.size	CapSense_BaseInit, .-CapSense_BaseInit
  78              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
  79              		.align	2
  80              		.global	CapSense_InitializeSensorBaseline
  81              		.code	16
  82              		.thumb_func
  83              		.type	CapSense_InitializeSensorBaseline, %function
  84              	CapSense_InitializeSensorBaseline:
  85              	.LFB33:
 190:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 191:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 192:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 193:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 194:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 195:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 196:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 197:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 198:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair
 199:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the
 200:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 6


 201:Generated_Source\PSoC4/CapSense_CSHL.c **** *  enabled.
 202:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 203:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 204:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 205:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 206:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 207:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 208:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 209:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 210:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 211:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 212:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 213:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 214:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 215:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 216:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint32 sensor)
 217:Generated_Source\PSoC4/CapSense_CSHL.c **** {
  86              		.loc 1 217 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              	.LVL4:
  91 0000 10B5     		push	{r4, lr}
  92              		.cfi_def_cfa_offset 8
  93              		.cfi_offset 4, -8
  94              		.cfi_offset 14, -4
  95 0002 0400     		movs	r4, r0
 218:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Scan sensor */
 219:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
  96              		.loc 1 219 0
  97 0004 FFF7FEFF 		bl	CapSense_ScanSensor
  98              	.LVL5:
  99              	.L5:
 220:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 100              		.loc 1 220 0 discriminator 1
 101 0008 FFF7FEFF 		bl	CapSense_IsBusy
 102              	.LVL6:
 103 000c 0028     		cmp	r0, #0
 104 000e FBD1     		bne	.L5
 221:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 222:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 223:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 224:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 225:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */
 226:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_BaseInit(sensor);
 105              		.loc 1 226 0
 106 0010 2000     		movs	r0, r4
 107 0012 FFF7FEFF 		bl	CapSense_BaseInit
 108              	.LVL7:
 227:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 109              		.loc 1 227 0
 110              		@ sp needed
 111              	.LVL8:
 112 0016 10BD     		pop	{r4, pc}
 113              		.cfi_endproc
 114              	.LFE33:
 115              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 7


 116              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 117              		.align	2
 118              		.global	CapSense_InitializeAllBaselines
 119              		.code	16
 120              		.thumb_func
 121              		.type	CapSense_InitializeAllBaselines, %function
 122              	CapSense_InitializeAllBaselines:
 123              	.LFB34:
 228:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 229:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 230:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 231:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 232:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 233:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 234:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 235:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to load the
 236:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning
 237:Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for
 238:Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 239:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 240:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 241:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 242:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 243:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 244:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 245:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 246:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 247:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 248:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 249:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 250:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 251:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 252:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 253:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 254:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 124              		.loc 1 254 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128 0000 10B5     		push	{r4, lr}
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 4, -8
 131              		.cfi_offset 14, -4
 132              	.LVL9:
 255:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 256:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 257:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 133              		.loc 1 257 0
 134 0002 0024     		movs	r4, #0
 135 0004 03E0     		b	.L7
 136              	.LVL10:
 137              	.L8:
 258:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 259:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_InitializeSensorBaseline(i);
 138              		.loc 1 259 0 discriminator 3
 139 0006 2000     		movs	r0, r4
 140 0008 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 8


 141              	.LVL11:
 257:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 142              		.loc 1 257 0 discriminator 3
 143 000c 0134     		adds	r4, r4, #1
 144              	.LVL12:
 145              	.L7:
 257:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 146              		.loc 1 257 0 is_stmt 0 discriminator 1
 147 000e 032C     		cmp	r4, #3
 148 0010 F9D9     		bls	.L8
 260:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 261:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 149              		.loc 1 261 0 is_stmt 1
 150              		@ sp needed
 151              	.LVL13:
 152 0012 10BD     		pop	{r4, pc}
 153              		.cfi_endproc
 154              	.LFE34:
 155              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 156              		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 157              		.align	2
 158              		.global	CapSense_InitializeEnabledBaselines
 159              		.code	16
 160              		.thumb_func
 161              		.type	CapSense_InitializeEnabledBaselines, %function
 162              	CapSense_InitializeEnabledBaselines:
 163              	.LFB35:
 262:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 263:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 264:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 265:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 266:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 267:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 268:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 269:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the
 270:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines
 271:Generated_Source\PSoC4/CapSense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process.
 272:Generated_Source\PSoC4/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 273:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 274:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 275:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 276:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 277:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 278:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 279:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 280:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 281:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorRaw[] - used to store the sensors raw data.
 282:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 283:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 284:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 285:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 286:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 287:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 288:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 289:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 164              		.loc 1 289 0
 165              		.cfi_startproc
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 9


 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168 0000 10B5     		push	{r4, lr}
 169              		.cfi_def_cfa_offset 8
 170              		.cfi_offset 4, -8
 171              		.cfi_offset 14, -4
 290:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 291:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 292:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 293:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 172              		.loc 1 293 0
 173 0002 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 174              	.LVL14:
 175              	.L10:
 294:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 176              		.loc 1 294 0 discriminator 1
 177 0006 FFF7FEFF 		bl	CapSense_IsBusy
 178              	.LVL15:
 179 000a 0028     		cmp	r0, #0
 180 000c FBD1     		bne	.L10
 181 000e 0024     		movs	r4, #0
 182 0010 09E0     		b	.L11
 183              	.LVL16:
 184              	.L13:
 295:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 296:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 297:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 298:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 299:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 300:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 301:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 185              		.loc 1 301 0
 186 0012 2100     		movs	r1, r4
 187 0014 0548     		ldr	r0, .L14
 188 0016 FFF7FEFF 		bl	CapSense_GetBitValue
 189              	.LVL17:
 302:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 303:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 304:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(isSensorEnabled != 0u)
 190              		.loc 1 304 0
 191 001a 0028     		cmp	r0, #0
 192 001c 02D0     		beq	.L12
 305:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 306:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Initialize baselines */
 307:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(i);
 193              		.loc 1 307 0
 194 001e 2000     		movs	r0, r4
 195              	.LVL18:
 196 0020 FFF7FEFF 		bl	CapSense_BaseInit
 197              	.LVL19:
 198              	.L12:
 299:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 199              		.loc 1 299 0 discriminator 2
 200 0024 0134     		adds	r4, r4, #1
 201              	.LVL20:
 202              	.L11:
 299:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 10


 203              		.loc 1 299 0 is_stmt 0 discriminator 1
 204 0026 032C     		cmp	r4, #3
 205 0028 F3D9     		bls	.L13
 308:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 309:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 310:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 206              		.loc 1 310 0 is_stmt 1
 207              		@ sp needed
 208              	.LVL21:
 209 002a 10BD     		pop	{r4, pc}
 210              	.L15:
 211              		.align	2
 212              	.L14:
 213 002c 00000000 		.word	CapSense_sensorEnableMask
 214              		.cfi_endproc
 215              	.LFE35:
 216              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 217              		.section	.text.CapSense_GetBaselineData,"ax",%progbits
 218              		.align	2
 219              		.global	CapSense_GetBaselineData
 220              		.code	16
 221              		.thumb_func
 222              		.type	CapSense_GetBaselineData, %function
 223              	CapSense_GetBaselineData:
 224              	.LFB40:
 311:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 312:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 313:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 314:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateBaselineNoThreshold
 315:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 316:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 317:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 318:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 319:Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 320:Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 321:Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 322:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 323:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded
 324:Generated_Source\PSoC4/CapSense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less
 325:Generated_Source\PSoC4/CapSense_CSHL.c **** *  than noise threshold.
 326:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 327:Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 328:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 329:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 330:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 331:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 332:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 333:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 334:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 335:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 336:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 337:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 338:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 339:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 340:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of
 341:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline value.
 342:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store difference between
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 11


 343:Generated_Source\PSoC4/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 344:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of
 345:Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 346:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 347:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 348:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 349:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 350:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 351:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 352:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 353:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateBaselineNoThreshold(uint32 sensor)
 354:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 355:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 356:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sign;
 357:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 tempRaw;
 358:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 filteredRawData;
 359:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 360:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold;
 361:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 362:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 363:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 364:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 365:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 366:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 367:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 368:Generated_Source\PSoC4/CapSense_CSHL.c ****     noiseThreshold = CapSense_noiseThreshold[widget];
 369:Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 370:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 371:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_RAW_FILTER_MASK != 0u)
 372:Generated_Source\PSoC4/CapSense_CSHL.c ****     if(CapSense_enableRawFilters != 0u)
 373:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 374:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 375:Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 376:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor
 377:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                             CapSense_rawFilterData2[sensor]);
 378:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 379:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 380:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 381:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 382:Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 383:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sen
 384:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                CapSense_rawFilterData2[sensor]);
 385:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 386:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 387:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 388:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 389:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 390:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 391:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 392:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 393:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 394:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 395:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 396:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 397:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor
 398:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 399:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 12


 400:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 401:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 402:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 403:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 404:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 405:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]
 406:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 407:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 408:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 409:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No Raw filters */
 410:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 411:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 412:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 413:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 414:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 415:Generated_Source\PSoC4/CapSense_CSHL.c ****         MeasureNoiseEnvelope_P4_v2_60(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 416:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 417:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 418:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Baseline calculation */
 419:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 420:Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 421:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 422:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineResetCnt[sensor] = 0u;
 423:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 424:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 425:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 426:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 427:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 428:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 429:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 430:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 431:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 432:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 433:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 434:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 435:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 436:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 437:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 438:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 439:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 440:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 441:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 442:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 443:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
 444:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 445:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 446:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 447:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 448:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 449:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 450:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 451:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 452:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 453:Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 454:Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 455:Generated_Source\PSoC4/CapSense_CSHL.c ****                && (sign == 0u)))
 456:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 13


 457:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 458:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 459:Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 460:Generated_Source\PSoC4/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 461:Generated_Source\PSoC4/CapSense_CSHL.c ****                    && (sign == 0u)))
 462:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 463:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 464:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 465:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 466:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 467:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 468:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 469:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 470:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 471:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 472:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 473:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 474:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 475:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 476:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 477:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 478:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 479:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 480:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 481:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 482:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 483:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 484:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 485:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 486:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 487:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 488:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 489:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 490:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 491:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 492:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 493:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 494:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
 495:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 496:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 497:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 498:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 499:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 500:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 501:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 502:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 503:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 504:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Signal is zero */
 505:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 506:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 507:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 508:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 509:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 510:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 511:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 512:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 513:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 14


 514:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 515:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 516:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 517:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 518:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 519:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 520:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 521:Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 522:Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 523:Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 524:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 525:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating.
 526:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and
 527:Generated_Source\PSoC4/CapSense_CSHL.c **** *  if signal is less than noise threshold.
 528:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 529:Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 530:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 531:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 532:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 533:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 534:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 535:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 536:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 537:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 538:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 539:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 540:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 541:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 542:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 543:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 544:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 545:Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint32 sensor)
 546:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 547:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 548:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 widget;
 549:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 550:Generated_Source\PSoC4/CapSense_CSHL.c ****         widget = CapSense_widgetNumber[sensor];
 551:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 552:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 553:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 554:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 555:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 556:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 557:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 558:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_UpdateThresholds(sensor);
 559:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 560:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 561:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 562:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 563:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 564:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 565:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 566:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 567:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 568:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 569:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 570:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 15


 571:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 572:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 573:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 574:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 575:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 576:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 577:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors.
 578:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 579:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 580:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 581:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 582:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 583:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 584:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 585:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 586:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 587:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 588:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 589:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 590:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 591:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 592:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 593:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 594:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 595:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 596:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 597:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 598:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 599:Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 600:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 601:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 602:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 603:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 604:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 605:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 606:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 607:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 608:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 609:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 610:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 611:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 612:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 613:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 614:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 615:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 616:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateWidgetBaseline
 617:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 618:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 619:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 620:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 621:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 622:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors that belong to widget.
 623:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 624:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 625:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  Widget number.
 626:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 627:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 16


 628:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 629:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 630:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 631:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 632:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 633:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 634:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 635:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 636:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 637:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 638:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 639:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 640:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 641:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 642:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 643:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 644:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateWidgetBaseline(uint32 widget)
 645:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 646:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 647:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 firstSensor;
 648:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 lastSensor;
 649:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 650:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 651:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 652:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get number of sensors in widget */
 653:Generated_Source\PSoC4/CapSense_CSHL.c ****     sensorsPerWidget = CapSense_numberOfSensors[widget];
 654:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 655:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get first sensor in widget */
 656:Generated_Source\PSoC4/CapSense_CSHL.c ****     firstSensor = CapSense_rawDataIndex[widget];
 657:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 658:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get last sensor in widget */
 659:Generated_Source\PSoC4/CapSense_CSHL.c ****     lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 660:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 661:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 662:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 663:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 664:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 665:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 666:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 667:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 668:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 669:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 670:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 671:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 672:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 673:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 674:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetBaselineData
 675:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 676:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 677:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 678:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the sensor baseline from the component.
 679:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 680:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 681:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 682:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 683:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 684:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 17


 685:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 686:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 687:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with an initial values by scanning
 688:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 689:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 690:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 691:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 692:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 693:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetBaselineData(uint32 sensor)
 694:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 225              		.loc 1 694 0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229              		@ link register save eliminated.
 230              	.LVL22:
 695:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorBaseline[sensor]);
 231              		.loc 1 695 0
 232 0000 4000     		lsls	r0, r0, #1
 233              	.LVL23:
 234 0002 014B     		ldr	r3, .L17
 235 0004 185A     		ldrh	r0, [r3, r0]
 696:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 236              		.loc 1 696 0
 237              		@ sp needed
 238 0006 7047     		bx	lr
 239              	.L18:
 240              		.align	2
 241              	.L17:
 242 0008 00000000 		.word	.LANCHOR0
 243              		.cfi_endproc
 244              	.LFE40:
 245              		.size	CapSense_GetBaselineData, .-CapSense_GetBaselineData
 246              		.section	.text.CapSense_SetBaselineData,"ax",%progbits
 247              		.align	2
 248              		.global	CapSense_SetBaselineData
 249              		.code	16
 250              		.thumb_func
 251              		.type	CapSense_SetBaselineData, %function
 252              	CapSense_SetBaselineData:
 253              	.LFB41:
 697:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 698:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 699:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 700:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetBaselineData
 701:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 702:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 703:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 704:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 705:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 706:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 707:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 708:Generated_Source\PSoC4/CapSense_CSHL.c **** *  data:    Sensor baseline.
 709:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 710:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 711:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 712:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 18


 713:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 714:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with initial values by scanning
 715:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 716:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 717:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 718:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 719:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 720:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetBaselineData(uint32 sensor, uint16 data)
 721:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 254              		.loc 1 721 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259              	.LVL24:
 722:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = data;
 260              		.loc 1 722 0
 261 0000 4000     		lsls	r0, r0, #1
 262              	.LVL25:
 263 0002 014B     		ldr	r3, .L20
 264 0004 C152     		strh	r1, [r0, r3]
 723:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 265              		.loc 1 723 0
 266              		@ sp needed
 267 0006 7047     		bx	lr
 268              	.L21:
 269              		.align	2
 270              	.L20:
 271 0008 00000000 		.word	.LANCHOR0
 272              		.cfi_endproc
 273              	.LFE41:
 274              		.size	CapSense_SetBaselineData, .-CapSense_SetBaselineData
 275              		.section	.text.CapSense_GetDiffCountData,"ax",%progbits
 276              		.align	2
 277              		.global	CapSense_GetDiffCountData
 278              		.code	16
 279              		.thumb_func
 280              		.type	CapSense_GetDiffCountData, %function
 281              	CapSense_GetDiffCountData:
 282              	.LFB42:
 724:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 725:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 726:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 727:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDiffCountData
 728:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 729:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 730:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 731:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 732:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 733:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 734:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 735:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 736:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 737:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the
 738:Generated_Source\PSoC4/CapSense_CSHL.c **** *  argument.
 739:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 740:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 19


 741:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 742:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 743:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 744:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 745:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 746:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 747:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDiffCountData(uint32 sensor)
 748:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 283              		.loc 1 748 0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287              		@ link register save eliminated.
 288              	.LVL26:
 749:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorSignal[sensor]);
 289              		.loc 1 749 0
 290 0000 014B     		ldr	r3, .L23
 291 0002 1818     		adds	r0, r3, r0
 292              	.LVL27:
 293 0004 007B     		ldrb	r0, [r0, #12]
 750:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 294              		.loc 1 750 0
 295              		@ sp needed
 296 0006 7047     		bx	lr
 297              	.L24:
 298              		.align	2
 299              	.L23:
 300 0008 00000000 		.word	.LANCHOR0
 301              		.cfi_endproc
 302              	.LFE42:
 303              		.size	CapSense_GetDiffCountData, .-CapSense_GetDiffCountData
 304              		.section	.text.CapSense_SetDiffCountData,"ax",%progbits
 305              		.align	2
 306              		.global	CapSense_SetDiffCountData
 307              		.code	16
 308              		.thumb_func
 309              		.type	CapSense_SetDiffCountData, %function
 310              	CapSense_SetDiffCountData:
 311              	.LFB43:
 751:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 752:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 753:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 754:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetDiffCountData
 755:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 756:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 757:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 758:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 759:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 760:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 761:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 762:Generated_Source\PSoC4/CapSense_CSHL.c **** *  value:   Sensor signal.
 763:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 764:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 765:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 766:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 767:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 768:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 20


 769:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 770:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 771:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 772:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 773:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 774:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetDiffCountData(uint32 sensor, uint8 value)
 775:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 312              		.loc 1 775 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              		@ link register save eliminated.
 317              	.LVL28:
 776:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 318              		.loc 1 776 0
 319 0000 014B     		ldr	r3, .L26
 320 0002 1818     		adds	r0, r3, r0
 321              	.LVL29:
 322 0004 0173     		strb	r1, [r0, #12]
 777:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 323              		.loc 1 777 0
 324              		@ sp needed
 325 0006 7047     		bx	lr
 326              	.L27:
 327              		.align	2
 328              	.L26:
 329 0008 00000000 		.word	.LANCHOR0
 330              		.cfi_endproc
 331              	.LFE43:
 332              		.size	CapSense_SetDiffCountData, .-CapSense_SetDiffCountData
 333              		.section	.text.CapSense_GetFingerThreshold,"ax",%progbits
 334              		.align	2
 335              		.global	CapSense_GetFingerThreshold
 336              		.code	16
 337              		.thumb_func
 338              		.type	CapSense_GetFingerThreshold, %function
 339              	CapSense_GetFingerThreshold:
 340              	.LFB44:
 778:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 779:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 780:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 781:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerThreshold
 782:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 783:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 784:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 785:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the finger threshold from the component.
 786:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 787:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 788:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 789:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 790:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 791:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument.
 792:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 793:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 794:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_fingerThreshold[] - This array contains the level of signal
 795:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 796:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 21


 797:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 798:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 799:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 800:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 801:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerThreshold(uint32 widget)
 802:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 341              		.loc 1 802 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 345              		@ link register save eliminated.
 346              	.LVL30:
 803:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_fingerThreshold[widget]);
 347              		.loc 1 803 0
 348 0000 014B     		ldr	r3, .L29
 349 0002 185C     		ldrb	r0, [r3, r0]
 350              	.LVL31:
 804:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 351              		.loc 1 804 0
 352              		@ sp needed
 353 0004 7047     		bx	lr
 354              	.L30:
 355 0006 C046     		.align	2
 356              	.L29:
 357 0008 00000000 		.word	CapSense_fingerThreshold
 358              		.cfi_endproc
 359              	.LFE44:
 360              		.size	CapSense_GetFingerThreshold, .-CapSense_GetFingerThreshold
 361              		.section	.text.CapSense_GetNoiseThreshold,"ax",%progbits
 362              		.align	2
 363              		.global	CapSense_GetNoiseThreshold
 364              		.code	16
 365              		.thumb_func
 366              		.type	CapSense_GetNoiseThreshold, %function
 367              	CapSense_GetNoiseThreshold:
 368              	.LFB45:
 805:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 806:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 807:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 808:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNoiseThreshold
 809:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 810:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 811:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 812:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the noise threshold from the component.
 813:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 814:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 815:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 816:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 817:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 818:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument.
 819:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 820:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 821:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_noiseThreshold[] - This array contains the level of signal
 822:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 823:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 824:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 825:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 22


 826:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 827:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 828:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNoiseThreshold(uint32 widget)
 829:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 369              		.loc 1 829 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 374              	.LVL32:
 830:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_noiseThreshold[widget]);
 375              		.loc 1 830 0
 376 0000 014B     		ldr	r3, .L32
 377 0002 185C     		ldrb	r0, [r3, r0]
 378              	.LVL33:
 831:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 379              		.loc 1 831 0
 380              		@ sp needed
 381 0004 7047     		bx	lr
 382              	.L33:
 383 0006 C046     		.align	2
 384              	.L32:
 385 0008 00000000 		.word	CapSense_noiseThreshold
 386              		.cfi_endproc
 387              	.LFE45:
 388              		.size	CapSense_GetNoiseThreshold, .-CapSense_GetNoiseThreshold
 389              		.section	.text.CapSense_GetFingerHysteresis,"ax",%progbits
 390              		.align	2
 391              		.global	CapSense_GetFingerHysteresis
 392              		.code	16
 393              		.thumb_func
 394              		.type	CapSense_GetFingerHysteresis, %function
 395              	CapSense_GetFingerHysteresis:
 396              	.LFB46:
 832:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 833:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 834:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 835:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerHysteresis
 836:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 837:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 838:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 839:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 840:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 841:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 842:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 843:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 844:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 845:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument.
 846:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 847:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 848:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_hysteresis[] - This array contains the hysteresis value
 849:Generated_Source\PSoC4/CapSense_CSHL.c **** *   for each widget.
 850:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 851:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 852:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 853:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 854:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 23


 855:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 856:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerHysteresis(uint32 widget)
 857:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 397              		.loc 1 857 0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 0, uses_anonymous_args = 0
 401              		@ link register save eliminated.
 402              	.LVL34:
 858:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_hysteresis[widget]);
 403              		.loc 1 858 0
 404 0000 014B     		ldr	r3, .L35
 405 0002 185C     		ldrb	r0, [r3, r0]
 406              	.LVL35:
 859:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 407              		.loc 1 859 0
 408              		@ sp needed
 409 0004 7047     		bx	lr
 410              	.L36:
 411 0006 C046     		.align	2
 412              	.L35:
 413 0008 00000000 		.word	CapSense_hysteresis
 414              		.cfi_endproc
 415              	.LFE46:
 416              		.size	CapSense_GetFingerHysteresis, .-CapSense_GetFingerHysteresis
 417              		.section	.text.CapSense_GetNegativeNoiseThreshold,"ax",%progbits
 418              		.align	2
 419              		.global	CapSense_GetNegativeNoiseThreshold
 420              		.code	16
 421              		.thumb_func
 422              		.type	CapSense_GetNegativeNoiseThreshold, %function
 423              	CapSense_GetNegativeNoiseThreshold:
 424              	.LFB47:
 860:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 861:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 862:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 863:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNegativeNoiseThreshold
 864:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 865:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 866:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 867:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the negative noise threshold from the component.
 868:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 869:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 870:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 871:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 872:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return Value:
 873:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the negative noise threshold
 874:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 875:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 876:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_negativeNoiseThreshold - This variable specifies the negative
 877:Generated_Source\PSoC4/CapSense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 878:Generated_Source\PSoC4/CapSense_CSHL.c **** *   to the raw count level.
 879:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 880:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 881:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 882:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 883:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 24


 884:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNegativeNoiseThreshold(uint32 widget)
 885:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 425              		.loc 1 885 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 0
 428              		@ frame_needed = 0, uses_anonymous_args = 0
 429              		@ link register save eliminated.
 430              	.LVL36:
 886:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 887:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_negativeNoiseThreshold[widget]);
 431              		.loc 1 887 0
 432 0000 014B     		ldr	r3, .L38
 433 0002 185C     		ldrb	r0, [r3, r0]
 434              	.LVL37:
 888:Generated_Source\PSoC4/CapSense_CSHL.c **** #else
 889:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_NEGATIVE_NOISE_THRESHOLD);
 890:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 891:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 435              		.loc 1 891 0
 436              		@ sp needed
 437 0004 7047     		bx	lr
 438              	.L39:
 439 0006 C046     		.align	2
 440              	.L38:
 441 0008 00000000 		.word	CapSense_negativeNoiseThreshold
 442              		.cfi_endproc
 443              	.LFE47:
 444              		.size	CapSense_GetNegativeNoiseThreshold, .-CapSense_GetNegativeNoiseThreshold
 445              		.section	.text.CapSense_SetFingerThreshold,"ax",%progbits
 446              		.align	2
 447              		.global	CapSense_SetFingerThreshold
 448              		.code	16
 449              		.thumb_func
 450              		.type	CapSense_SetFingerThreshold, %function
 451              	CapSense_SetFingerThreshold:
 452              	.LFB48:
 892:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 893:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 894:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 895:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 896:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerThreshold
 897:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 898:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 899:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 900:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the finger threshold value for a widget.
 901:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 902:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 903:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensorNumber:  widget index.
 904:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Finger threshold value for the widget.
 905:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 906:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 907:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 908:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 909:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 910:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[] - This array contains the level of signal
 911:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines if a finger is present on the widget.
 912:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 25


 913:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 914:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 915:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 916:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 917:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerThreshold(uint32 widget, uint8 value)
 918:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 453              		.loc 1 918 0
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 0
 456              		@ frame_needed = 0, uses_anonymous_args = 0
 457              		@ link register save eliminated.
 458              	.LVL38:
 919:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_fingerThreshold[widget] = value;
 459              		.loc 1 919 0
 460 0000 014B     		ldr	r3, .L41
 461 0002 1954     		strb	r1, [r3, r0]
 920:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 462              		.loc 1 920 0
 463              		@ sp needed
 464 0004 7047     		bx	lr
 465              	.L42:
 466 0006 C046     		.align	2
 467              	.L41:
 468 0008 00000000 		.word	CapSense_fingerThreshold
 469              		.cfi_endproc
 470              	.LFE48:
 471              		.size	CapSense_SetFingerThreshold, .-CapSense_SetFingerThreshold
 472              		.section	.text.CapSense_SetNoiseThreshold,"ax",%progbits
 473              		.align	2
 474              		.global	CapSense_SetNoiseThreshold
 475              		.code	16
 476              		.thumb_func
 477              		.type	CapSense_SetNoiseThreshold, %function
 478              	CapSense_SetNoiseThreshold:
 479              	.LFB49:
 921:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 922:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 923:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 924:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNoiseThreshold
 925:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 926:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 927:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 928:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Noise Threshold value for each widget.
 929:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 930:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 931:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Sensor index number.
 932:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:   Noise Threshold value for widget.
 933:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 934:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 935:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 936:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 937:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 938:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_noiseThreshold[] - This array contains the level of signal
 939:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines the level of noise in the capacitive scan.
 940:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 941:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 942:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 26


 943:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 944:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 945:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNoiseThreshold(uint32 widget, uint8 value)
 946:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 480              		.loc 1 946 0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 0
 483              		@ frame_needed = 0, uses_anonymous_args = 0
 484              		@ link register save eliminated.
 485              	.LVL39:
 947:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_noiseThreshold[widget] = value;
 486              		.loc 1 947 0
 487 0000 014B     		ldr	r3, .L44
 488 0002 1954     		strb	r1, [r3, r0]
 948:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 489              		.loc 1 948 0
 490              		@ sp needed
 491 0004 7047     		bx	lr
 492              	.L45:
 493 0006 C046     		.align	2
 494              	.L44:
 495 0008 00000000 		.word	CapSense_noiseThreshold
 496              		.cfi_endproc
 497              	.LFE49:
 498              		.size	CapSense_SetNoiseThreshold, .-CapSense_SetNoiseThreshold
 499              		.section	.text.CapSense_SetFingerHysteresis,"ax",%progbits
 500              		.align	2
 501              		.global	CapSense_SetFingerHysteresis
 502              		.code	16
 503              		.thumb_func
 504              		.type	CapSense_SetFingerHysteresis, %function
 505              	CapSense_SetFingerHysteresis:
 506              	.LFB50:
 949:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 950:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 951:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 952:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerHysteresis
 953:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 954:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 955:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 956:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Hysteresis value of a widget
 957:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 958:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 959:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Hysteresis value for widgets.
 960:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number
 961:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 962:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 963:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 964:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 965:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 966:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_hysteresis[] - This array contains the hysteresis value for each widget.
 967:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 968:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 969:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 970:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 971:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 972:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 27


 973:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerHysteresis(uint32 widget, uint8 value)
 974:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 507              		.loc 1 974 0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 511              		@ link register save eliminated.
 512              	.LVL40:
 975:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_hysteresis[widget] = value;
 513              		.loc 1 975 0
 514 0000 014B     		ldr	r3, .L47
 515 0002 1954     		strb	r1, [r3, r0]
 976:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 516              		.loc 1 976 0
 517              		@ sp needed
 518 0004 7047     		bx	lr
 519              	.L48:
 520 0006 C046     		.align	2
 521              	.L47:
 522 0008 00000000 		.word	CapSense_hysteresis
 523              		.cfi_endproc
 524              	.LFE50:
 525              		.size	CapSense_SetFingerHysteresis, .-CapSense_SetFingerHysteresis
 526              		.section	.text.CapSense_SetNegativeNoiseThreshold,"ax",%progbits
 527              		.align	2
 528              		.global	CapSense_SetNegativeNoiseThreshold
 529              		.code	16
 530              		.thumb_func
 531              		.type	CapSense_SetNegativeNoiseThreshold, %function
 532              	CapSense_SetNegativeNoiseThreshold:
 533              	.LFB51:
 977:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 978:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 979:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 980:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNegativeNoiseThreshold
 981:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 982:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 983:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 984:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Negative Noise Threshold value of a widget
 985:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 986:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 987:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Negative Noise Threshold value for widgets.
 988:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget number
 989:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 990:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 991:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 992:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 993:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 994:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_negativeNoiseThreshold  - This parameter specifies the negative
 995:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   difference between the raw count and baseline levels for Baseline resetting to
 996:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   the raw count level.
 997:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 998:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 999:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1000:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1001:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1002:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 28


1003:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 534              		.loc 1 1003 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              		@ link register save eliminated.
 539              	.LVL41:
1004:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_negativeNoiseThreshold[widget] = value;
 540              		.loc 1 1004 0
 541 0000 014B     		ldr	r3, .L50
 542 0002 1954     		strb	r1, [r3, r0]
1005:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 543              		.loc 1 1005 0
 544              		@ sp needed
 545 0004 7047     		bx	lr
 546              	.L51:
 547 0006 C046     		.align	2
 548              	.L50:
 549 0008 00000000 		.word	CapSense_negativeNoiseThreshold
 550              		.cfi_endproc
 551              	.LFE51:
 552              		.size	CapSense_SetNegativeNoiseThreshold, .-CapSense_SetNegativeNoiseThreshold
 553              		.section	.text.CapSense_SetDebounce,"ax",%progbits
 554              		.align	2
 555              		.global	CapSense_SetDebounce
 556              		.code	16
 557              		.thumb_func
 558              		.type	CapSense_SetDebounce, %function
 559              	CapSense_SetDebounce:
 560              	.LFB52:
1006:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1007:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1008:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1009:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetDebounce
1010:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1011:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1012:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1013:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the debounce value for a widget.
1014:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1015:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1016:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Debounce value for widget.
1017:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget index.
1018:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1019:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1020:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1021:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1022:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1023:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_debounce[] - This array contains the debounce value for each widget.
1024:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
1025:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1026:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1027:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1028:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1029:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1030:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetDebounce(uint32 widget, uint8 value)
1031:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 561              		.loc 1 1031 0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 29


 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 0
 564              		@ frame_needed = 0, uses_anonymous_args = 0
 565              		@ link register save eliminated.
 566              	.LVL42:
1032:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_debounce[widget] = value;
 567              		.loc 1 1032 0
 568 0000 014B     		ldr	r3, .L53
 569 0002 1954     		strb	r1, [r3, r0]
1033:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 570              		.loc 1 1033 0
 571              		@ sp needed
 572 0004 7047     		bx	lr
 573              	.L54:
 574 0006 C046     		.align	2
 575              	.L53:
 576 0008 00000000 		.word	.LANCHOR1
 577              		.cfi_endproc
 578              	.LFE52:
 579              		.size	CapSense_SetDebounce, .-CapSense_SetDebounce
 580              		.section	.text.CapSense_SetLowBaselineReset,"ax",%progbits
 581              		.align	2
 582              		.global	CapSense_SetLowBaselineReset
 583              		.code	16
 584              		.thumb_func
 585              		.type	CapSense_SetLowBaselineReset, %function
 586              	CapSense_SetLowBaselineReset:
 587              	.LFB53:
1034:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1035:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1036:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1037:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetLowBaselineReset
1038:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1039:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1040:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1041:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the low baseline reset threshold value for the sensor.
1042:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1043:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1044:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value: low baseline reset threshold value.
1045:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensor: Sensor index.
1046:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1047:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1048:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1049:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1050:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1051:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_lowBaselineReset[] - This array contains the Baseline update
1052:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold value for each sensor.
1053:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1054:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1055:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1056:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1057:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1058:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetLowBaselineReset(uint32 sensor, uint8 value)
1059:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 588              		.loc 1 1059 0
 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 30


 591              		@ frame_needed = 0, uses_anonymous_args = 0
 592              		@ link register save eliminated.
 593              	.LVL43:
1060:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineReset[sensor] = value;
 594              		.loc 1 1060 0
 595 0000 014B     		ldr	r3, .L56
 596 0002 1818     		adds	r0, r3, r0
 597              	.LVL44:
 598 0004 0171     		strb	r1, [r0, #4]
1061:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 599              		.loc 1 1061 0
 600              		@ sp needed
 601 0006 7047     		bx	lr
 602              	.L57:
 603              		.align	2
 604              	.L56:
 605 0008 00000000 		.word	.LANCHOR1
 606              		.cfi_endproc
 607              	.LFE53:
 608              		.size	CapSense_SetLowBaselineReset, .-CapSense_SetLowBaselineReset
 609              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 610              		.align	2
 611              		.global	CapSense_CheckIsSensorActive
 612              		.code	16
 613              		.thumb_func
 614              		.type	CapSense_CheckIsSensorActive, %function
 615              	CapSense_CheckIsSensorActive:
 616              	.LFB54:
1062:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1063:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1064:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1065:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1066:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
1067:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1068:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1069:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1070:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[sensor] array element to the finger
1071:Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into
1072:Generated_Source\PSoC4/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold
1073:Generated_Source\PSoC4/CapSense_CSHL.c **** *  based on whether the sensor is currently active.
1074:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1075:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1076:Generated_Source\PSoC4/CapSense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1077:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function updates the CapSense_sensorOnMask[] array element.
1078:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1079:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1080:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
1081:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1082:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1083:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1084:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1085:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1086:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - used to store the difference between
1087:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1088:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store the current debounce
1089:Generated_Source\PSoC4/CapSense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix
1090:Generated_Source\PSoC4/CapSense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 31


1091:Generated_Source\PSoC4/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1092:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store the sensors on/off state.
1093:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors
1094:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1095:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1096:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1097:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor is inactive.
1098:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is active.
1099:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1100:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1101:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1102:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1103:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1104:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsSensorActive(uint32 sensor)
1105:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 617              		.loc 1 1105 0
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 0
 620              		@ frame_needed = 0, uses_anonymous_args = 0
 621              	.LVL45:
 622 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 623              		.cfi_def_cfa_offset 20
 624              		.cfi_offset 4, -20
 625              		.cfi_offset 5, -16
 626              		.cfi_offset 6, -12
 627              		.cfi_offset 7, -8
 628              		.cfi_offset 14, -4
 629 0002 4746     		mov	r7, r8
 630 0004 80B4     		push	{r7}
 631              		.cfi_def_cfa_offset 24
 632              		.cfi_offset 8, -24
 633 0006 0400     		movs	r4, r0
1106:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget;
1107:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounce;
1108:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounceIndex;
1109:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1110:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 fingerThreshold;
1111:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 hysteresis;
1112:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1113:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1114:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
1115:Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
 634              		.loc 1 1115 0
 635 0008 224B     		ldr	r3, .L63
 636 000a 1D5C     		ldrb	r5, [r3, r0]
1116:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1117:Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
 637              		.loc 1 1117 0
 638 000c 224B     		ldr	r3, .L63+4
 639 000e 5F5D     		ldrb	r7, [r3, r5]
 640              	.LVL46:
1118:Generated_Source\PSoC4/CapSense_CSHL.c ****     hysteresis = CapSense_hysteresis[widget];
 641              		.loc 1 1118 0
 642 0010 224B     		ldr	r3, .L63+8
 643 0012 5E5D     		ldrb	r6, [r3, r5]
 644              	.LVL47:
1119:Generated_Source\PSoC4/CapSense_CSHL.c ****     debounce = CapSense_debounce[widget];
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 32


 645              		.loc 1 1119 0
 646 0014 224B     		ldr	r3, .L63+12
 647 0016 5B5D     		ldrb	r3, [r3, r5]
 648 0018 9846     		mov	r8, r3
 649              	.LVL48:
1120:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1121:Generated_Source\PSoC4/CapSense_CSHL.c ****         debounceIndex = widget;
1122:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1123:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1124:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Was on */
1125:Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 650              		.loc 1 1125 0
 651 001a 0100     		movs	r1, r0
 652 001c 2148     		ldr	r0, .L63+16
 653              	.LVL49:
 654 001e 1830     		adds	r0, r0, #24
 655 0020 FFF7FEFF 		bl	CapSense_GetBitValue
 656              	.LVL50:
 657 0024 0028     		cmp	r0, #0
 658 0026 10D0     		beq	.L59
1126:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1127:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis minus */
1128:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 659              		.loc 1 1128 0
 660 0028 1E4B     		ldr	r3, .L63+16
 661 002a 1B19     		adds	r3, r3, r4
 662 002c 1B7B     		ldrb	r3, [r3, #12]
 663 002e BE1B     		subs	r6, r7, r6
 664              	.LVL51:
 665 0030 B342     		cmp	r3, r6
 666 0032 23DA     		bge	.L60
1129:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1130:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
 667              		.loc 1 1130 0
 668 0034 1B4E     		ldr	r6, .L63+16
 669 0036 3000     		movs	r0, r6
 670 0038 1830     		adds	r0, r0, #24
 671 003a 0022     		movs	r2, #0
 672 003c 2100     		movs	r1, r4
 673 003e FFF7FEFF 		bl	CapSense_SetBitValue
 674              	.LVL52:
1131:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1132:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 675              		.loc 1 1132 0
 676 0042 7519     		adds	r5, r6, r5
 677 0044 4346     		mov	r3, r8
 678 0046 2B74     		strb	r3, [r5, #16]
 679 0048 18E0     		b	.L60
 680              	.LVL53:
 681              	.L59:
1133:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1134:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1135:Generated_Source\PSoC4/CapSense_CSHL.c ****     else    /* Was off */
1136:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1137:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis plus */
1138:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 682              		.loc 1 1138 0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 33


 683 004a 164B     		ldr	r3, .L63+16
 684 004c 1B19     		adds	r3, r3, r4
 685 004e 1B7B     		ldrb	r3, [r3, #12]
 686 0050 BE19     		adds	r6, r7, r6
 687              	.LVL54:
 688 0052 B342     		cmp	r3, r6
 689 0054 0EDB     		blt	.L61
1139:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1140:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex]--;
 690              		.loc 1 1140 0
 691 0056 134B     		ldr	r3, .L63+16
 692 0058 5D19     		adds	r5, r3, r5
 693 005a 2B7C     		ldrb	r3, [r5, #16]
 694 005c 013B     		subs	r3, r3, #1
 695 005e DBB2     		uxtb	r3, r3
 696 0060 2B74     		strb	r3, [r5, #16]
1141:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1142:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
 697              		.loc 1 1142 0
 698 0062 002B     		cmp	r3, #0
 699 0064 0AD1     		bne	.L60
1143:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1144:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u);
 700              		.loc 1 1144 0
 701 0066 0122     		movs	r2, #1
 702 0068 2100     		movs	r1, r4
 703 006a 0E48     		ldr	r0, .L63+16
 704 006c 1830     		adds	r0, r0, #24
 705 006e FFF7FEFF 		bl	CapSense_SetBitValue
 706              	.LVL55:
 707 0072 03E0     		b	.L60
 708              	.L61:
1145:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1146:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1147:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1148:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1149:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1150:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 709              		.loc 1 1150 0
 710 0074 0B4B     		ldr	r3, .L63+16
 711 0076 5D19     		adds	r5, r3, r5
 712 0078 4346     		mov	r3, r8
 713 007a 2B74     		strb	r3, [r5, #16]
 714              	.L60:
1151:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1152:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1153:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1154:Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
 715              		.loc 1 1154 0
 716 007c 2100     		movs	r1, r4
 717 007e 0948     		ldr	r0, .L63+16
 718 0080 1830     		adds	r0, r0, #24
 719 0082 FFF7FEFF 		bl	CapSense_GetBitValue
 720              	.LVL56:
 721 0086 0028     		cmp	r0, #0
 722 0088 00D0     		beq	.L62
 723 008a 0120     		movs	r0, #1
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 34


 724              	.L62:
1155:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 725              		.loc 1 1155 0 discriminator 4
 726              		@ sp needed
 727              	.LVL57:
 728              	.LVL58:
 729              	.LVL59:
 730 008c 04BC     		pop	{r2}
 731 008e 9046     		mov	r8, r2
 732 0090 F0BD     		pop	{r4, r5, r6, r7, pc}
 733              	.L64:
 734 0092 C046     		.align	2
 735              	.L63:
 736 0094 00000000 		.word	CapSense_widgetNumber
 737 0098 00000000 		.word	CapSense_fingerThreshold
 738 009c 00000000 		.word	CapSense_hysteresis
 739 00a0 00000000 		.word	.LANCHOR1
 740 00a4 00000000 		.word	.LANCHOR0
 741              		.cfi_endproc
 742              	.LFE54:
 743              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 744              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 745              		.align	2
 746              		.global	CapSense_CheckIsWidgetActive
 747              		.code	16
 748              		.thumb_func
 749              		.type	CapSense_CheckIsWidgetActive, %function
 750              	CapSense_CheckIsWidgetActive:
 751              	.LFB55:
1156:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1157:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1158:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1159:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
1160:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1161:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1162:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1163:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of
1164:Generated_Source\PSoC4/CapSense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account.
1165:Generated_Source\PSoC4/CapSense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1166:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is
1167:Generated_Source\PSoC4/CapSense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold
1168:Generated_Source\PSoC4/CapSense_CSHL.c **** *  is raised by the hysteresis amount.
1169:Generated_Source\PSoC4/CapSense_CSHL.c **** * The debounce counter added to the sensor active transition.
1170:Generated_Source\PSoC4/CapSense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1171:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1172:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1173:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1174:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1175:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1176:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are
1177:Generated_Source\PSoC4/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1178:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1179:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1180:Generated_Source\PSoC4/CapSense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1181:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1182:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1183:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 35


1184:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1185:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1186:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsWidgetActive(uint32 widget)
1187:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 752              		.loc 1 1187 0
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 0
 755              		@ frame_needed = 0, uses_anonymous_args = 0
 756              	.LVL60:
 757 0000 70B5     		push	{r4, r5, r6, lr}
 758              		.cfi_def_cfa_offset 16
 759              		.cfi_offset 4, -16
 760              		.cfi_offset 5, -12
 761              		.cfi_offset 6, -8
 762              		.cfi_offset 14, -4
1188:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
 763              		.loc 1 1188 0
 764 0002 084B     		ldr	r3, .L69
 765 0004 1C5C     		ldrb	r4, [r3, r0]
 766              	.LVL61:
1189:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
 767              		.loc 1 1189 0
 768 0006 1818     		adds	r0, r3, r0
 769              	.LVL62:
 770 0008 0579     		ldrb	r5, [r0, #4]
 771 000a 6519     		adds	r5, r4, r5
 772              	.LVL63:
1190:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 773              		.loc 1 1190 0
 774 000c 0026     		movs	r6, #0
 775              	.LVL64:
 776              	.L67:
1191:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1192:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Check all sensors of widget */
1193:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1194:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1195:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
 777              		.loc 1 1195 0
 778 000e 2000     		movs	r0, r4
 779 0010 FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 780              	.LVL65:
 781 0014 0028     		cmp	r0, #0
 782 0016 00D0     		beq	.L66
1196:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1197:Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
 783              		.loc 1 1197 0
 784 0018 0126     		movs	r6, #1
 785              	.LVL66:
 786              	.L66:
1198:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1199:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 787              		.loc 1 1199 0
 788 001a 0134     		adds	r4, r4, #1
 789              	.LVL67:
1200:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1201:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 790              		.loc 1 1201 0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 36


 791 001c A542     		cmp	r5, r4
 792 001e F6D8     		bhi	.L67
1202:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1203:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1204:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1205:Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
1206:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 793              		.loc 1 1206 0
 794 0020 3000     		movs	r0, r6
 795              		@ sp needed
 796              	.LVL68:
 797              	.LVL69:
 798              	.LVL70:
 799 0022 70BD     		pop	{r4, r5, r6, pc}
 800              	.L70:
 801              		.align	2
 802              	.L69:
 803 0024 00000000 		.word	.LANCHOR2
 804              		.cfi_endproc
 805              	.LFE55:
 806              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 807              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 808              		.align	2
 809              		.global	CapSense_CheckIsAnyWidgetActive
 810              		.code	16
 811              		.thumb_func
 812              		.type	CapSense_CheckIsAnyWidgetActive, %function
 813              	CapSense_CheckIsAnyWidgetActive:
 814              	.LFB56:
1207:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1208:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1209:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1210:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
1211:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1212:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1213:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1214:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares all the sensors of the CapSense_Signal[] array to their finger
1215:Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so
1216:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the CapSense_sensorOnMask[] array is up to date after calling this
1217:Generated_Source\PSoC4/CapSense_CSHL.c **** *  function.
1218:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1219:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1220:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1221:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1222:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1223:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1224:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1225:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1226:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1227:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1228:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1229:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1230:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1231:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1232:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsAnyWidgetActive(void)
1233:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 815              		.loc 1 1233 0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 37


 816              		.cfi_startproc
 817              		@ args = 0, pretend = 0, frame = 0
 818              		@ frame_needed = 0, uses_anonymous_args = 0
 819 0000 70B5     		push	{r4, r5, r6, lr}
 820              		.cfi_def_cfa_offset 16
 821              		.cfi_offset 4, -16
 822              		.cfi_offset 5, -12
 823              		.cfi_offset 6, -8
 824              		.cfi_offset 14, -4
 825              	.LVL71:
1234:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1235:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 i;
1236:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 826              		.loc 1 1236 0
 827 0002 0025     		movs	r5, #0
1237:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1238:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 828              		.loc 1 1238 0
 829 0004 0024     		movs	r4, #0
 830 0006 06E0     		b	.L72
 831              	.LVL72:
 832              	.L74:
1239:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1240:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 833              		.loc 1 1240 0
 834 0008 2000     		movs	r0, r4
 835 000a FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 836              	.LVL73:
 837 000e 0028     		cmp	r0, #0
 838 0010 00D0     		beq	.L73
1241:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1242:Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 839              		.loc 1 1242 0
 840 0012 0125     		movs	r5, #1
 841              	.LVL74:
 842              	.L73:
1238:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 843              		.loc 1 1238 0 discriminator 2
 844 0014 0134     		adds	r4, r4, #1
 845              	.LVL75:
 846              	.L72:
1238:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 847              		.loc 1 1238 0 is_stmt 0 discriminator 1
 848 0016 032C     		cmp	r4, #3
 849 0018 F6D9     		bls	.L74
1243:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1244:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1245:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1246:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1247:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1248:Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
1249:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 850              		.loc 1 1249 0 is_stmt 1
 851 001a 2800     		movs	r0, r5
 852              		@ sp needed
 853              	.LVL76:
 854              	.LVL77:
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 38


 855 001c 70BD     		pop	{r4, r5, r6, pc}
 856              		.cfi_endproc
 857              	.LFE56:
 858              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 859 001e C046     		.section	.text.CapSense_EnableWidget,"ax",%progbits
 860              		.align	2
 861              		.global	CapSense_EnableWidget
 862              		.code	16
 863              		.thumb_func
 864              		.type	CapSense_EnableWidget, %function
 865              	CapSense_EnableWidget:
 866              	.LFB57:
1250:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1251:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1252:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1253:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
1254:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1255:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1256:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1257:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1258:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1259:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1260:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1261:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1262:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1263:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1264:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1265:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1266:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1267:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1268:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1269:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1270:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1271:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1272:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
1273:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
1274:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1275:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1276:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1277:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1278:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1279:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_EnableWidget(uint32 widget)
1280:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 867              		.loc 1 1280 0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 0
 870              		@ frame_needed = 0, uses_anonymous_args = 0
 871              	.LVL78:
 872 0000 70B5     		push	{r4, r5, r6, lr}
 873              		.cfi_def_cfa_offset 16
 874              		.cfi_offset 4, -16
 875              		.cfi_offset 5, -12
 876              		.cfi_offset 6, -8
 877              		.cfi_offset 14, -4
1281:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1282:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 878              		.loc 1 1282 0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 39


 879 0002 084B     		ldr	r3, .L78
 880 0004 1C5C     		ldrb	r4, [r3, r0]
 881              	.LVL79:
1283:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 882              		.loc 1 1283 0
 883 0006 1818     		adds	r0, r3, r0
 884              	.LVL80:
 885 0008 0579     		ldrb	r5, [r0, #4]
 886 000a 6519     		adds	r5, r4, r5
 887 000c EDB2     		uxtb	r5, r5
 888              	.LVL81:
 889              	.L77:
1284:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1285:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Enable all sensors of widget */
1286:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1287:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1288:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 890              		.loc 1 1288 0 discriminator 1
 891 000e 0122     		movs	r2, #1
 892 0010 2100     		movs	r1, r4
 893 0012 0548     		ldr	r0, .L78+4
 894 0014 FFF7FEFF 		bl	CapSense_SetBitValue
 895              	.LVL82:
1289:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 896              		.loc 1 1289 0 discriminator 1
 897 0018 0134     		adds	r4, r4, #1
 898              	.LVL83:
 899 001a E4B2     		uxtb	r4, r4
 900              	.LVL84:
1290:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1291:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 901              		.loc 1 1291 0 discriminator 1
 902 001c A542     		cmp	r5, r4
 903 001e F6D8     		bhi	.L77
1292:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 904              		.loc 1 1292 0
 905              		@ sp needed
 906              	.LVL85:
 907              	.LVL86:
 908 0020 70BD     		pop	{r4, r5, r6, pc}
 909              	.L79:
 910 0022 C046     		.align	2
 911              	.L78:
 912 0024 00000000 		.word	.LANCHOR2
 913 0028 00000000 		.word	CapSense_sensorEnableMask
 914              		.cfi_endproc
 915              	.LFE57:
 916              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 917              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 918              		.align	2
 919              		.global	CapSense_DisableWidget
 920              		.code	16
 921              		.thumb_func
 922              		.type	CapSense_DisableWidget, %function
 923              	CapSense_DisableWidget:
 924              	.LFB58:
1293:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 40


1294:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1295:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1296:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
1297:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1298:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1299:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1300:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1301:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1302:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1303:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1304:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1305:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1306:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1307:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1308:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1309:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1310:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1311:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1312:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1313:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1314:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1315:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor isn't scanned by CapSense_ScanEnabledWidgets().
1316:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is scanned by CapSense_ScanEnabledWidgets().
1317:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1318:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1319:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1320:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1321:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1322:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_DisableWidget(uint32 widget)
1323:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 925              		.loc 1 1323 0
 926              		.cfi_startproc
 927              		@ args = 0, pretend = 0, frame = 0
 928              		@ frame_needed = 0, uses_anonymous_args = 0
 929              	.LVL87:
 930 0000 70B5     		push	{r4, r5, r6, lr}
 931              		.cfi_def_cfa_offset 16
 932              		.cfi_offset 4, -16
 933              		.cfi_offset 5, -12
 934              		.cfi_offset 6, -8
 935              		.cfi_offset 14, -4
1324:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 936              		.loc 1 1324 0
 937 0002 084B     		ldr	r3, .L82
 938 0004 1C5C     		ldrb	r4, [r3, r0]
 939              	.LVL88:
1325:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 940              		.loc 1 1325 0
 941 0006 1818     		adds	r0, r3, r0
 942              	.LVL89:
 943 0008 0579     		ldrb	r5, [r0, #4]
 944 000a 6519     		adds	r5, r4, r5
 945 000c EDB2     		uxtb	r5, r5
 946              	.LVL90:
 947              	.L81:
1326:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1327:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Disable all sensors of widget */
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 41


1328:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1329:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1330:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1331:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 948              		.loc 1 1331 0 discriminator 1
 949 000e 0022     		movs	r2, #0
 950 0010 2100     		movs	r1, r4
 951 0012 0548     		ldr	r0, .L82+4
 952 0014 FFF7FEFF 		bl	CapSense_SetBitValue
 953              	.LVL91:
1332:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 954              		.loc 1 1332 0 discriminator 1
 955 0018 0134     		adds	r4, r4, #1
 956              	.LVL92:
 957 001a E4B2     		uxtb	r4, r4
 958              	.LVL93:
1333:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1334:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 959              		.loc 1 1334 0 discriminator 1
 960 001c A542     		cmp	r5, r4
 961 001e F6D8     		bhi	.L81
1335:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 962              		.loc 1 1335 0
 963              		@ sp needed
 964              	.LVL94:
 965              	.LVL95:
 966 0020 70BD     		pop	{r4, r5, r6, pc}
 967              	.L83:
 968 0022 C046     		.align	2
 969              	.L82:
 970 0024 00000000 		.word	.LANCHOR2
 971 0028 00000000 		.word	CapSense_sensorEnableMask
 972              		.cfi_endproc
 973              	.LFE58:
 974              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 975              		.section	.text.CapSense_MedianFilter,"ax",%progbits
 976              		.align	2
 977              		.global	CapSense_MedianFilter
 978              		.code	16
 979              		.thumb_func
 980              		.type	CapSense_MedianFilter, %function
 981              	CapSense_MedianFilter:
 982              	.LFB59:
1336:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1337:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1338:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1339:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1340:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
1341:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1342:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1343:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1344:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks
1345:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[] within a defined centroid and
1346:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are
1347:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  ignored.
1348:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1349:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 42


1350:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1351:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1352:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1353:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:  Start index of centroid in CapSense_sensorSignal[] array.
1354:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
1355:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1356:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
1357:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1358:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1359:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1360:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1361:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1362:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1363:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_startOfSlider[] - contains the index of the first slider element
1364:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1365:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1366:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1367:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1368:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1369:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_IS_DIPLEX_SLIDER)
1370:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 *d
1371:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
1372:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1373:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1374:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1375:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
1376:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1377:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curPos = 0u;
1378:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No centroid at Start */
1379:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
1380:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1381:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Biggest centroid is zero */
1382:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1383:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1384:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1385:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
1386:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1387:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 temp = 0u;
1388:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
1389:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1390:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1391:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(diplex != 0u)
1392:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1393:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Initialize */
1394:Generated_Source\PSoC4/CapSense_CSHL.c ****                 i = 0u;
1395:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1396:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
1397:Generated_Source\PSoC4/CapSense_CSHL.c ****                 count <<= 1u;
1398:Generated_Source\PSoC4/CapSense_CSHL.c ****                 while(1u)
1399:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1400:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1401:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1402:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (curCtrdStartPos == CapSense_MAXIMUM_CENTROID)
1403:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1404:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Start of centroid */
1405:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = i;
1406:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 43


1407:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1408:Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
1409:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1410:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1411:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1412:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1413:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1414:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1415:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
1416:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1417:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* We are at the end of current */
1418:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1419:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1420:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1421:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1422:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1423:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1424:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize = 0u;
1425:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1426:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1427:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1428:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1429:Generated_Source\PSoC4/CapSense_CSHL.c ****                     i++;
1430:Generated_Source\PSoC4/CapSense_CSHL.c ****                     curPos = diplex[i];
1431:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(i == count)
1432:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1433:Generated_Source\PSoC4/CapSense_CSHL.c ****                         break;
1434:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1435:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1436:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1437:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1438:Generated_Source\PSoC4/CapSense_CSHL.c ****                        We are at the end of current */
1439:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize)
1440:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1441:Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1442:Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1443:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1444:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1445:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1446:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1447:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Without diplexing */
1448:Generated_Source\PSoC4/CapSense_CSHL.c ****                 biggestCtrdSize = count;
1449:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1450:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1451:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1452:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Check centroid size */
1453:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
1454:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1455:Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
1456:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1457:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1458:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1459:Generated_Source\PSoC4/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1460:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1461:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1462:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (diplex == 0u)
1463:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 44


1464:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = i;
1465:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1466:Generated_Source\PSoC4/CapSense_CSHL.c ****                             else
1467:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1468:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = diplex[i];
1469:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1470:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)
1471:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curPos = diplex[i];
1472:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1473:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Looking for greater element within centroid */
1474:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1475:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1476:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1477:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1478:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 maximum = i;
1479:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1480:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1481:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1482:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1483:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1484:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1485:Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
1486:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1487:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Looking for greater element within centroid */
1488:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
1489:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1490:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
1491:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1492:Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
1493:Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
1494:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1495:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1496:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1497:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1498:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (maximum);
1499:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1500:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1501:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1502:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1503:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1504:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1505:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1506:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1507:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1508:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution.
1509:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1510:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1511:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  type:  widget type.
1512:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1513:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1514:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:   Start index of centroid in CapSense_sensorSignal[] array.
1515:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1516:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1517:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  API resolution.
1518:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1519:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1520:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 45


1521:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the slider.
1522:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1523:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1524:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1525:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1526:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1527:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1528:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1529:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1530:Generated_Source\PSoC4/CapSense_CSHL.c **** #else
1531:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1532:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1533:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1534:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1535:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1536:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posPrev;
1537:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posNext;
1538:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1539:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1540:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Helps during centroid calculation */
1541:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1542:Generated_Source\PSoC4/CapSense_CSHL.c ****             static uint8 CapSense_centroid[3u];
1543:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1544:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1545:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1546:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 pos;
1547:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1548:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1549:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 position;
1550:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 numerator;
1551:Generated_Source\PSoC4/CapSense_CSHL.c ****         int32 denominator;
1552:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1553:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8  *startOfSlider = &CapSense_sensorSignal[offset];
1554:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1555:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1556:Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
1557:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1558:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1559:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1560:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1561:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1562:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1563:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1564:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1565:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1566:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1567:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1568:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1569:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1570:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1571:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1572:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1573:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1574:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1575:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1576:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1577:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 46


1578:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1579:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1580:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1581:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1582:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1583:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1584:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1585:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1586:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1587:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1588:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1589:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1590:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1591:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1592:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1593:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1594:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1595:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(diplex == 0u)
1596:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1597:Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = maximum;
1598:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1599:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = maximum + 1u;
1600:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1601:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1602:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1603:Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1604:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1605:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1606:Generated_Source\PSoC4/CapSense_CSHL.c ****                         count <<= 1u;
1607:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1608:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1609:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1610:Generated_Source\PSoC4/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1611:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1612:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1613:Generated_Source\PSoC4/CapSense_CSHL.c ****                     count <<= 1u;
1614:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1615:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1616:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (maximum >= 1u)
1617:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1618:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1619:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1620:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = maximum + 1u;
1621:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1622:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1623:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1624:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1625:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1626:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1627:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1628:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1629:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1630:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1631:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1632:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1633:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
1634:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 47


1635:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1636:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1637:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1638:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1639:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
1640:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1641:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1642:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1643:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1644:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1645:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1646:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_BASIC_C
1647:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1648:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1649:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1650:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1651:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1652:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1653:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
1654:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1655:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
1656:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1657:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1658:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1659:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
1660:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1661:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1662:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1663:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
1664:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1665:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1666:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
1667:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1668:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
1669:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1670:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1671:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1672:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
1673:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1674:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1675:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1676:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1677:Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
1678:Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
1679:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1680:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1681:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] +
1682:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
1683:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
1684:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1685:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1686:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
1687:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1688:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1689:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1690:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(denominator < 0)
1691:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 48


1692:Generated_Source\PSoC4/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1693:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1694:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1695:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1696:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator *= (int16)resolution;
1697:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1698:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Round result and put it to uint8 */
1699:Generated_Source\PSoC4/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
1700:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1701:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1702:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1703:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1704:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1705:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1706:Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1707:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1708:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1709:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1710:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1711:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1712:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1713:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1714:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1715:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1716:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1717:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1718:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1719:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1720:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__LS           5
1721:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1722:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1723:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the linear slider.
1724:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1725:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1726:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1727:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1728:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1729:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1730:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1731:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1732:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1733:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1734:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1735:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1736:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1737:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1738:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1739:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1740:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1741:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1742:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint32 widget)
1743:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1744:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1745:Generated_Source\PSoC4/CapSense_CSHL.c ****             const uint8 *diplex;
1746:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1747:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1748:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 49


1749:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1750:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1751:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1752:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1753:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1754:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1755:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1756:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1757:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1758:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1759:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1760:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1761:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1762:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1763:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1764:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1765:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1766:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1767:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1768:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1769:Generated_Source\PSoC4/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1770:Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1771:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1772:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1773:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1774:Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = 0u;
1775:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1776:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1777:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1778:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1779:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1780:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1781:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1782:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
1783:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1784:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1785:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != 0xFFu)
1786:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1787:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1788:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
1789:Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1790:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1791:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1792:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1793:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1794:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1795:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1796:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1797:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1798:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1799:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1800:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1801:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1802:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1803:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1804:Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1805:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 50


1806:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1807:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
1808:Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1809:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1810:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1811:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1812:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1813:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1814:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1815:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1816:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1817:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1818:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1819:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1820:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1821:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1822:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
1823:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1824:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1825:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1826:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1827:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1828:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1829:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1830:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1831:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1832:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1833:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1834:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1835:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1836:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1837:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1838:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1839:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1840:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1841:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1842:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1843:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1844:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1845:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1846:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1847:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1848:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1849:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1850:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1851:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1852:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1853:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1854:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1855:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1856:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1857:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1858:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1859:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1860:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1861:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1862:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 51


1863:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1864:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1865:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1866:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1867:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1868:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1869:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1870:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1871:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1872:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1873:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1874:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1875:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1876:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1877:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1878:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1879:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1880:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1881:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1882:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1883:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1884:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1885:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1886:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1887:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1888:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1889:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1890:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1891:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found */
1892:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
1893:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1894:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1895:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
1896:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1897:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1898:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1899:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1900:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1901:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1902:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1903:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1904:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1905:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1906:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1907:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1908:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1909:Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1910:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1911:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1912:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1913:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1914:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1915:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1916:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1917:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1918:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1919:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 52


1920:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1921:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1922:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1923:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__RS           5
1924:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1925:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1926:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the radial slider.
1927:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1928:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1929:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
1930:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1931:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1932:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1933:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1934:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1935:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1936:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1937:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1938:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1939:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1940:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1941:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1942:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1943:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1944:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1945:Generated_Source\PSoC4/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint32 widget)
1946:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1947:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1948:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1949:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1950:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1951:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1952:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1953:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1954:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1955:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1956:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1957:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1958:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1959:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1960:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1961:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1962:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1963:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1964:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1965:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1966:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1967:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1968:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1969:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
1970:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1971:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1972:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != CapSense_MAXIMUM_CENTROID)
1973:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1974:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1975:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
1976:Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 53


1977:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1978:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1979:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1980:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1981:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1982:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1983:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1984:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1985:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1986:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1987:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1988:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1989:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1990:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1991:Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1992:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1993:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1994:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  ||
1995:Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1996:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1997:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1998:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1999:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2000:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2001:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
2002:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2003:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2004:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2005:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
2006:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2007:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
2008:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2009:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
2010:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2011:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2012:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2013:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2014:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
2015:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2016:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2017:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
2018:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
2019:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2020:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2021:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER &
2022:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2023:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2024:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2025:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
2026:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2027:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2028:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2029:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2030:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
2031:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2032:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2033:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 54


2034:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2035:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2036:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2037:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2038:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2039:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2040:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2041:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2042:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2043:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
2044:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2045:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2046:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2047:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER &
2048:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2049:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2050:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2051:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2052:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2053:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2054:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
2055:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2056:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2057:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2058:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER &
2059:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2060:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2061:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2062:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2063:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2064:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2065:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
2066:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
2067:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2068:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2069:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
2070:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2071:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2072:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2073:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2074:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2075:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2076:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2077:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2078:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2079:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum was not found */
2080:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
2081:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2082:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2083:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2084:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2085:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2086:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2087:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2088:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2089:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2090:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 55


2091:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
2092:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2093:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2094:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2095:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2096:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2097:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2098:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
2099:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2100:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2101:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2102:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2103:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2104:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2105:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2106:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
2107:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2108:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  customizer.
2109:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2110:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2111:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
2112:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2113:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__TP            5
2114:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2115:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2116:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
2117:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[0u]  - position of X
2118:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
2119:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2120:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2121:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2122:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2123:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2124:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2125:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2126:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2127:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2128:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2129:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   calculations.
2130:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2131:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2132:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetTouchCentroidPos(uint32 widget, uint16* pos)
2133:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2134:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2135:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posXIndex;
2136:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posYIndex;
2137:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
2138:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
2139:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2140:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2141:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2142:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2143:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint16 tempPos;
2144:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2145:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2146:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
2147:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 56


2148:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxX;
2149:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxY;
2150:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posX;
2151:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posY;
2152:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 touch = 0u;
2153:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
2154:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
2155:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2156:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
2157:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
2158:Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
2159:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2160:Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
2161:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2162:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2163:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (MaxX != CapSense_MAXIMUM_CENTROID)
2164:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2165:Generated_Source\PSoC4/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
2166:Generated_Source\PSoC4/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
2167:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2168:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
2169:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
2170:Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
2171:Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
2172:Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
2173:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2174:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2175:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (MaxY != CapSense_MAXIMUM_CENTROID)
2176:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2177:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2178:Generated_Source\PSoC4/CapSense_CSHL.c ****                 touch = 1u;
2179:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2180:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate Y centroid */
2181:Generated_Source\PSoC4/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count,
2182:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
2183:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2184:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate X centroid */
2185:Generated_Source\PSoC4/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
2186:Generated_Source\PSoC4/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
2187:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2188:Generated_Source\PSoC4/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count,
2189:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
2190:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2191:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2192:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
2193:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2194:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2195:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Calculate position to store filters data */
2196:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2197:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
2198:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2199:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
2200:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2201:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Init filters */
2202:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
2203:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
2204:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 57


2205:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
2206:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
2207:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
2208:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2209:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2210:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
2211:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2212:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2213:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
2214:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
2215:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2216:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2217:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2218:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
2219:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2220:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2221:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2222:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
2223:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2224:Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
2225:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2226:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Do filtering */
2227:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2228:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2229:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2230:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2231:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
2232:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2233:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2234:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2235:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2236:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2237:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2238:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2239:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
2240:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2241:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2242:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2243:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2244:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2245:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2246:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2247:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
2248:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2249:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2250:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2251:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
2252:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2253:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2254:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2255:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
2256:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2257:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2258:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2259:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2260:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2261:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 58


2262:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2263:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY,
2264:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2265:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2266:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2267:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2268:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2269:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2270:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2271:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2272:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2273:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2274:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2275:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2276:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2277:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2278:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX,
2279:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
2280:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2281:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2282:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY,
2283:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2284:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2285:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2286:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2287:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
2288:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2289:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2290:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2291:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2292:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2293:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2294:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
2295:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2296:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2297:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2298:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
2299:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2300:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2301:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2302:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2303:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
2304:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2305:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2306:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2307:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2308:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2309:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     {
2310:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX,
2311:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2312:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
2313:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2314:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY,
2315:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2316:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
2317:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     }
2318:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 59


2319:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2320:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2321:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2322:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2323:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2324:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2325:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Save positions */
2326:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = posX;
2327:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = posY;
2328:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2329:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2330:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2331:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2332:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(touch == 0u)
2333:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2334:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2335:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2336:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2337:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2338:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2339:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2340:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2341:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2342:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (touch);
2343:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2344:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2345:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2346:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2347:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2348:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2349:Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) )
2350:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2351:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
2352:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2353:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2354:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2355:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Median filter function.
2356:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the
2357:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  median value.
2358:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2359:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2360:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2361:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2362:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2363:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2364:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2365:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2366:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2367:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2368:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2369:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2370:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2371:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2372:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2373:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2374:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2375:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 60


 983              		.loc 1 2375 0
 984              		.cfi_startproc
 985              		@ args = 0, pretend = 0, frame = 0
 986              		@ frame_needed = 0, uses_anonymous_args = 0
 987              		@ link register save eliminated.
 988              	.LVL96:
2376:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 tmp;
2377:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2378:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
 989              		.loc 1 2378 0
 990 0000 8842     		cmp	r0, r1
 991 0002 02D9     		bls	.L85
 992 0004 0300     		movs	r3, r0
2379:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2380:Generated_Source\PSoC4/CapSense_CSHL.c ****             tmp = x2;
2381:Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
2382:Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 993              		.loc 1 2382 0
 994 0006 0800     		movs	r0, r1
 995              	.LVL97:
2381:Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 996              		.loc 1 2381 0
 997 0008 1900     		movs	r1, r3
 998              	.LVL98:
 999              	.L85:
2383:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2384:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2385:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x2 > x3)
 1000              		.loc 1 2385 0
 1001 000a 9142     		cmp	r1, r2
 1002 000c 00D9     		bls	.L86
2386:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2387:Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x3;
 1003              		.loc 1 2387 0
 1004 000e 1100     		movs	r1, r2
 1005              	.LVL99:
 1006              	.L86:
2388:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2389:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2390:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 1007              		.loc 1 2390 0
 1008 0010 031C     		adds	r3, r0, #0
 1009 0012 8842     		cmp	r0, r1
 1010 0014 00D2     		bcs	.L87
 1011 0016 0B1C     		adds	r3, r1, #0
 1012              	.L87:
 1013 0018 98B2     		uxth	r0, r3
 1014              	.LVL100:
2391:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1015              		.loc 1 2391 0
 1016              		@ sp needed
 1017 001a 7047     		bx	lr
 1018              		.cfi_endproc
 1019              	.LFE59:
 1020              		.size	CapSense_MedianFilter, .-CapSense_MedianFilter
 1021              		.section	.text.CapSense_IIR4Filter,"ax",%progbits
 1022              		.align	2
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 61


 1023              		.global	CapSense_IIR4Filter
 1024              		.code	16
 1025              		.thumb_func
 1026              		.type	CapSense_IIR4Filter, %function
 1027              	CapSense_IIR4Filter:
 1028              	.LFB60:
2392:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2393:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2394:Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) ) */
2395:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2396:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2397:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) || \
2398:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER)) )
2399:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2400:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
2401:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2402:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2403:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2404:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Averaging filter function.
2405:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2406:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  reports the averaging value.
2407:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2408:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2409:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2410:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2411:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2412:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2413:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2414:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2415:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2416:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2417:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2418:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2419:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2420:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2421:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2422:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2423:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2424:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2425:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2426:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2427:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2428:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2429:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
2430:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) ) */
2431:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2432:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2433:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2434:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2435:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2436:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
2437:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2438:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2439:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2440:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2441:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2442:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 62


2443:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2444:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2445:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2446:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2447:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2448:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2449:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2450:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2451:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2452:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2453:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2454:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2455:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2456:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
2457:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2458:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2459:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2460:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2461:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2462:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 1u;
2463:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2464:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2465:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2466:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2467:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2468:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2469:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2470:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2471:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2472:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2473:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2474:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
2475:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2476:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2477:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2478:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2479:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2480:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2481:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2482:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2483:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2484:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2485:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a filtered value.
2486:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2487:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2488:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2489:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2490:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2491:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2492:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2493:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2494:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2495:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1029              		.loc 1 2495 0
 1030              		.cfi_startproc
 1031              		@ args = 0, pretend = 0, frame = 0
 1032              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 63


 1033              		@ link register save eliminated.
 1034              	.LVL101:
2496:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2497:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2498:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2499:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 1035              		.loc 1 2499 0
 1036 0000 4018     		adds	r0, r0, r1
 1037              	.LVL102:
2500:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 1038              		.loc 1 2500 0
 1039 0002 4900     		lsls	r1, r1, #1
 1040              	.LVL103:
 1041 0004 4018     		adds	r0, r0, r1
 1042              	.LVL104:
2501:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
 1043              		.loc 1 2501 0
 1044 0006 8008     		lsrs	r0, r0, #2
 1045              	.LVL105:
2502:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2503:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
 1046              		.loc 1 2503 0
 1047 0008 80B2     		uxth	r0, r0
 1048              	.LVL106:
2504:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1049              		.loc 1 2504 0
 1050              		@ sp needed
 1051 000a 7047     		bx	lr
 1052              		.cfi_endproc
 1053              	.LFE60:
 1054              		.size	CapSense_IIR4Filter, .-CapSense_IIR4Filter
 1055              		.section	.text.CapSense_UpdateBaselineNoThreshold,"ax",%progbits
 1056              		.align	2
 1057              		.global	CapSense_UpdateBaselineNoThreshold
 1058              		.code	16
 1059              		.thumb_func
 1060              		.type	CapSense_UpdateBaselineNoThreshold, %function
 1061              	CapSense_UpdateBaselineNoThreshold:
 1062              	.LFB36:
 354:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 1063              		.loc 1 354 0
 1064              		.cfi_startproc
 1065              		@ args = 0, pretend = 0, frame = 8
 1066              		@ frame_needed = 0, uses_anonymous_args = 0
 1067              	.LVL107:
 1068 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1069              		.cfi_def_cfa_offset 20
 1070              		.cfi_offset 4, -20
 1071              		.cfi_offset 5, -16
 1072              		.cfi_offset 6, -12
 1073              		.cfi_offset 7, -8
 1074              		.cfi_offset 14, -4
 1075 0002 4746     		mov	r7, r8
 1076 0004 80B4     		push	{r7}
 1077              		.cfi_def_cfa_offset 24
 1078              		.cfi_offset 8, -24
 1079 0006 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 64


 1080              		.cfi_def_cfa_offset 32
 1081 0008 0400     		movs	r4, r0
 359:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold;
 1082              		.loc 1 359 0
 1083 000a 3C4B     		ldr	r3, .L102
 1084 000c 1E5C     		ldrb	r6, [r3, r0]
 368:Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 1085              		.loc 1 368 0
 1086 000e 3C4B     		ldr	r3, .L102+4
 1087 0010 9B5D     		ldrb	r3, [r3, r6]
 1088 0012 0193     		str	r3, [sp, #4]
 1089              	.LVL108:
 369:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1090              		.loc 1 369 0
 1091 0014 4200     		lsls	r2, r0, #1
 1092 0016 3B4B     		ldr	r3, .L102+8
 1093 0018 D75A     		ldrh	r7, [r2, r3]
 1094              	.LVL109:
 372:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1095              		.loc 1 372 0
 1096 001a 3B4B     		ldr	r3, .L102+12
 1097 001c 1B7A     		ldrb	r3, [r3, #8]
 1098 001e 002B     		cmp	r3, #0
 1099 0020 08D0     		beq	.L92
 393:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 1100              		.loc 1 393 0
 1101 0022 3A4D     		ldr	r5, .L102+16
 1102 0024 9046     		mov	r8, r2
 1103 0026 515B     		ldrh	r1, [r2, r5]
 1104 0028 3800     		movs	r0, r7
 1105              	.LVL110:
 1106 002a FFF7FEFF 		bl	CapSense_IIR4Filter
 1107              	.LVL111:
 1108 002e 0700     		movs	r7, r0
 1109              	.LVL112:
 394:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1110              		.loc 1 394 0
 1111 0030 4346     		mov	r3, r8
 1112 0032 5853     		strh	r0, [r3, r5]
 1113              	.LVL113:
 1114              	.L92:
 415:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 1115              		.loc 1 415 0
 1116 0034 E1B2     		uxtb	r1, r4
 1117 0036 334A     		ldr	r2, .L102+8
 1118 0038 3548     		ldr	r0, .L102+20
 1119 003a FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_60
 1120              	.LVL114:
 420:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1121              		.loc 1 420 0
 1122 003e 6300     		lsls	r3, r4, #1
 1123 0040 344A     		ldr	r2, .L102+24
 1124 0042 9A5A     		ldrh	r2, [r3, r2]
 1125 0044 9742     		cmp	r7, r2
 1126 0046 07D3     		bcc	.L93
 422:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 1127              		.loc 1 422 0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 65


 1128 0048 0021     		movs	r1, #0
 1129 004a 334B     		ldr	r3, .L102+28
 1130 004c 1955     		strb	r1, [r3, r4]
 423:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 1131              		.loc 1 423 0
 1132 004e BD1A     		subs	r5, r7, r2
 1133 0050 ADB2     		uxth	r5, r5
 1134              	.LVL115:
 424:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1135              		.loc 1 424 0
 1136 0052 0123     		movs	r3, #1
 1137 0054 9846     		mov	r8, r3
 1138 0056 03E0     		b	.L94
 1139              	.LVL116:
 1140              	.L93:
 428:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 1141              		.loc 1 428 0
 1142 0058 D51B     		subs	r5, r2, r7
 1143 005a ADB2     		uxth	r5, r5
 1144              	.LVL117:
 429:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1145              		.loc 1 429 0
 1146 005c 0023     		movs	r3, #0
 1147 005e 9846     		mov	r8, r3
 1148              	.LVL118:
 1149              	.L94:
 433:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 1150              		.loc 1 433 0
 1151 0060 4346     		mov	r3, r8
 1152 0062 002B     		cmp	r3, #0
 1153 0064 15D1     		bne	.L95
 433:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 1154              		.loc 1 433 0 is_stmt 0 discriminator 1
 1155 0066 2D4B     		ldr	r3, .L102+32
 1156 0068 9B5D     		ldrb	r3, [r3, r6]
 1157 006a 9D42     		cmp	r5, r3
 1158 006c 11D9     		bls	.L95
 438:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 1159              		.loc 1 438 0 is_stmt 1
 1160 006e 2A4B     		ldr	r3, .L102+28
 1161 0070 1B5D     		ldrb	r3, [r3, r4]
 1162 0072 254A     		ldr	r2, .L102+12
 1163 0074 1219     		adds	r2, r2, r4
 1164 0076 1279     		ldrb	r2, [r2, #4]
 1165 0078 9342     		cmp	r3, r2
 1166 007a 06D3     		bcc	.L96
 440:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 1167              		.loc 1 440 0
 1168 007c 2000     		movs	r0, r4
 1169 007e FFF7FEFF 		bl	CapSense_BaseInit
 1170              	.LVL119:
 441:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1171              		.loc 1 441 0
 1172 0082 0022     		movs	r2, #0
 1173 0084 244B     		ldr	r3, .L102+28
 1174 0086 1A55     		strb	r2, [r3, r4]
 1175 0088 1EE0     		b	.L97
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 66


 1176              	.L96:
 445:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1177              		.loc 1 445 0
 1178 008a 0133     		adds	r3, r3, #1
 1179 008c 224A     		ldr	r2, .L102+28
 1180 008e 1355     		strb	r3, [r2, r4]
 1181 0090 1AE0     		b	.L97
 1182              	.L95:
 453:Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 1183              		.loc 1 453 0
 1184 0092 6B46     		mov	r3, sp
 1185 0094 9B88     		ldrh	r3, [r3, #4]
 1186 0096 9D42     		cmp	r5, r3
 1187 0098 06D9     		bls	.L98
 454:Generated_Source\PSoC4/CapSense_CSHL.c ****                && (sign == 0u)))
 1188              		.loc 1 454 0 discriminator 1
 1189 009a 204B     		ldr	r3, .L102+32
 1190 009c 9B5D     		ldrb	r3, [r3, r6]
 453:Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 1191              		.loc 1 453 0 discriminator 1
 1192 009e 9D42     		cmp	r5, r3
 1193 00a0 12D2     		bcs	.L97
 455:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 1194              		.loc 1 455 0
 1195 00a2 4346     		mov	r3, r8
 1196 00a4 002B     		cmp	r3, #0
 1197 00a6 0FD1     		bne	.L97
 1198              	.L98:
 466:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 1199              		.loc 1 466 0
 1200 00a8 1302     		lsls	r3, r2, #8
 1201 00aa 9C46     		mov	ip, r3
 1202              	.LVL120:
 467:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1203              		.loc 1 467 0
 1204 00ac 1948     		ldr	r0, .L102+24
 1205 00ae 0119     		adds	r1, r0, r4
 1206 00b0 0B7A     		ldrb	r3, [r1, #8]
 1207              	.LVL121:
 1208 00b2 6646     		mov	r6, ip
 1209 00b4 3343     		orrs	r3, r6
 1210              	.LVL122:
 470:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1211              		.loc 1 470 0
 1212 00b6 FF18     		adds	r7, r7, r3
 1213              	.LVL123:
 473:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1214              		.loc 1 473 0
 1215 00b8 BF1A     		subs	r7, r7, r2
 1216              	.LVL124:
 476:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 1217              		.loc 1 476 0
 1218 00ba 3A0A     		lsrs	r2, r7, #8
 1219 00bc 6300     		lsls	r3, r4, #1
 1220 00be C252     		strh	r2, [r0, r3]
 477:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1221              		.loc 1 477 0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 67


 1222 00c0 0F72     		strb	r7, [r1, #8]
 479:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 1223              		.loc 1 479 0
 1224 00c2 0022     		movs	r2, #0
 1225 00c4 144B     		ldr	r3, .L102+28
 1226 00c6 1A55     		strb	r2, [r3, r4]
 1227              	.LVL125:
 1228              	.L97:
 486:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1229              		.loc 1 486 0
 1230 00c8 6B46     		mov	r3, sp
 1231 00ca 9E88     		ldrh	r6, [r3, #4]
 1232 00cc B542     		cmp	r5, r6
 1233 00ce 0DD9     		bls	.L99
 486:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1234              		.loc 1 486 0 is_stmt 0 discriminator 1
 1235 00d0 4346     		mov	r3, r8
 1236 00d2 002B     		cmp	r3, #0
 1237 00d4 0AD0     		beq	.L99
 1238              	.LVL126:
 490:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 1239              		.loc 1 490 0 is_stmt 1
 1240 00d6 FF2D     		cmp	r5, #255
 1241 00d8 04D9     		bls	.L100
 492:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 1242              		.loc 1 492 0
 1243 00da 0E4B     		ldr	r3, .L102+24
 1244              	.LVL127:
 1245 00dc 1C19     		adds	r4, r3, r4
 1246              	.LVL128:
 1247 00de FF23     		movs	r3, #255
 1248 00e0 2373     		strb	r3, [r4, #12]
 1249 00e2 07E0     		b	.L91
 1250              	.LVL129:
 1251              	.L100:
 496:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 1252              		.loc 1 496 0
 1253 00e4 0B4B     		ldr	r3, .L102+24
 1254              	.LVL130:
 1255 00e6 1C19     		adds	r4, r3, r4
 1256              	.LVL131:
 1257 00e8 2573     		strb	r5, [r4, #12]
 1258 00ea 03E0     		b	.L91
 1259              	.LVL132:
 1260              	.L99:
 505:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1261              		.loc 1 505 0
 1262 00ec 094B     		ldr	r3, .L102+24
 1263 00ee 1C19     		adds	r4, r3, r4
 1264              	.LVL133:
 1265 00f0 0023     		movs	r3, #0
 1266 00f2 2373     		strb	r3, [r4, #12]
 1267              	.L91:
 512:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1268              		.loc 1 512 0
 1269 00f4 02B0     		add	sp, sp, #8
 1270              		@ sp needed
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 68


 1271              	.LVL134:
 1272              	.LVL135:
 1273 00f6 04BC     		pop	{r2}
 1274 00f8 9046     		mov	r8, r2
 1275 00fa F0BD     		pop	{r4, r5, r6, r7, pc}
 1276              	.L103:
 1277              		.align	2
 1278              	.L102:
 1279 00fc 00000000 		.word	CapSense_widgetNumber
 1280 0100 00000000 		.word	CapSense_noiseThreshold
 1281 0104 00000000 		.word	CapSense_sensorRaw
 1282 0108 00000000 		.word	.LANCHOR1
 1283 010c 00000000 		.word	CapSense_rawFilterData1
 1284 0110 00000000 		.word	CapSense_config
 1285 0114 00000000 		.word	.LANCHOR0
 1286 0118 00000000 		.word	CapSense_lowBaselineResetCnt
 1287 011c 00000000 		.word	CapSense_negativeNoiseThreshold
 1288              		.cfi_endproc
 1289              	.LFE36:
 1290              		.size	CapSense_UpdateBaselineNoThreshold, .-CapSense_UpdateBaselineNoThreshold
 1291              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 1292              		.align	2
 1293              		.global	CapSense_UpdateSensorBaseline
 1294              		.code	16
 1295              		.thumb_func
 1296              		.type	CapSense_UpdateSensorBaseline, %function
 1297              	CapSense_UpdateSensorBaseline:
 1298              	.LFB37:
 546:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 1299              		.loc 1 546 0
 1300              		.cfi_startproc
 1301              		@ args = 0, pretend = 0, frame = 0
 1302              		@ frame_needed = 0, uses_anonymous_args = 0
 1303              	.LVL136:
 1304 0000 10B5     		push	{r4, lr}
 1305              		.cfi_def_cfa_offset 8
 1306              		.cfi_offset 4, -8
 1307              		.cfi_offset 14, -4
 1308 0002 0400     		movs	r4, r0
 558:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 1309              		.loc 1 558 0
 1310 0004 FFF7FEFF 		bl	CapSense_UpdateThresholds
 1311              	.LVL137:
 561:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1312              		.loc 1 561 0
 1313 0008 2000     		movs	r0, r4
 1314 000a FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 1315              	.LVL138:
 567:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1316              		.loc 1 567 0
 1317              		@ sp needed
 1318              	.LVL139:
 1319 000e 10BD     		pop	{r4, pc}
 1320              		.cfi_endproc
 1321              	.LFE37:
 1322              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 1323              		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 69


 1324              		.align	2
 1325              		.global	CapSense_UpdateEnabledBaselines
 1326              		.code	16
 1327              		.thumb_func
 1328              		.type	CapSense_UpdateEnabledBaselines, %function
 1329              	CapSense_UpdateEnabledBaselines:
 1330              	.LFB38:
 600:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 1331              		.loc 1 600 0
 1332              		.cfi_startproc
 1333              		@ args = 0, pretend = 0, frame = 0
 1334              		@ frame_needed = 0, uses_anonymous_args = 0
 1335 0000 10B5     		push	{r4, lr}
 1336              		.cfi_def_cfa_offset 8
 1337              		.cfi_offset 4, -8
 1338              		.cfi_offset 14, -4
 1339              	.LVL140:
 604:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1340              		.loc 1 604 0
 1341 0002 0024     		movs	r4, #0
 1342 0004 09E0     		b	.L106
 1343              	.LVL141:
 1344              	.L108:
 606:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1345              		.loc 1 606 0
 1346 0006 2100     		movs	r1, r4
 1347 0008 0548     		ldr	r0, .L109
 1348 000a FFF7FEFF 		bl	CapSense_GetBitValue
 1349              	.LVL142:
 608:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 1350              		.loc 1 608 0
 1351 000e 0028     		cmp	r0, #0
 1352 0010 02D0     		beq	.L107
 610:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1353              		.loc 1 610 0
 1354 0012 2000     		movs	r0, r4
 1355              	.LVL143:
 1356 0014 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 1357              	.LVL144:
 1358              	.L107:
 604:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1359              		.loc 1 604 0 discriminator 2
 1360 0018 0134     		adds	r4, r4, #1
 1361              	.LVL145:
 1362              	.L106:
 604:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1363              		.loc 1 604 0 is_stmt 0 discriminator 1
 1364 001a 032C     		cmp	r4, #3
 1365 001c F3D9     		bls	.L108
 613:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1366              		.loc 1 613 0 is_stmt 1
 1367              		@ sp needed
 1368              	.LVL146:
 1369 001e 10BD     		pop	{r4, pc}
 1370              	.L110:
 1371              		.align	2
 1372              	.L109:
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 70


 1373 0020 00000000 		.word	CapSense_sensorEnableMask
 1374              		.cfi_endproc
 1375              	.LFE38:
 1376              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 1377              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 1378              		.align	2
 1379              		.global	CapSense_UpdateWidgetBaseline
 1380              		.code	16
 1381              		.thumb_func
 1382              		.type	CapSense_UpdateWidgetBaseline, %function
 1383              	CapSense_UpdateWidgetBaseline:
 1384              	.LFB39:
 645:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 1385              		.loc 1 645 0
 1386              		.cfi_startproc
 1387              		@ args = 0, pretend = 0, frame = 0
 1388              		@ frame_needed = 0, uses_anonymous_args = 0
 1389              	.LVL147:
 1390 0000 70B5     		push	{r4, r5, r6, lr}
 1391              		.cfi_def_cfa_offset 16
 1392              		.cfi_offset 4, -16
 1393              		.cfi_offset 5, -12
 1394              		.cfi_offset 6, -8
 1395              		.cfi_offset 14, -4
 653:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1396              		.loc 1 653 0
 1397 0002 094B     		ldr	r3, .L115
 1398 0004 1A18     		adds	r2, r3, r0
 1399 0006 1579     		ldrb	r5, [r2, #4]
 1400              	.LVL148:
 656:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1401              		.loc 1 656 0
 1402 0008 1C5C     		ldrb	r4, [r3, r0]
 1403              	.LVL149:
 659:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1404              		.loc 1 659 0
 1405 000a 2D19     		adds	r5, r5, r4
 1406              	.LVL150:
 661:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1407              		.loc 1 661 0
 1408 000c 09E0     		b	.L112
 1409              	.LVL151:
 1410              	.L114:
 663:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1411              		.loc 1 663 0
 1412 000e 2100     		movs	r1, r4
 1413 0010 0648     		ldr	r0, .L115+4
 1414 0012 FFF7FEFF 		bl	CapSense_GetBitValue
 1415              	.LVL152:
 665:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 1416              		.loc 1 665 0
 1417 0016 0028     		cmp	r0, #0
 1418 0018 02D0     		beq	.L113
 667:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1419              		.loc 1 667 0
 1420 001a 2000     		movs	r0, r4
 1421              	.LVL153:
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 71


 1422 001c FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 1423              	.LVL154:
 1424              	.L113:
 661:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1425              		.loc 1 661 0 discriminator 2
 1426 0020 0134     		adds	r4, r4, #1
 1427              	.LVL155:
 1428              	.L112:
 661:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1429              		.loc 1 661 0 is_stmt 0 discriminator 1
 1430 0022 AC42     		cmp	r4, r5
 1431 0024 F3D3     		bcc	.L114
 670:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1432              		.loc 1 670 0 is_stmt 1
 1433              		@ sp needed
 1434              	.LVL156:
 1435              	.LVL157:
 1436 0026 70BD     		pop	{r4, r5, r6, pc}
 1437              	.L116:
 1438              		.align	2
 1439              	.L115:
 1440 0028 00000000 		.word	.LANCHOR2
 1441 002c 00000000 		.word	CapSense_sensorEnableMask
 1442              		.cfi_endproc
 1443              	.LFE39:
 1444              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 1445              		.section	.text.CapSense_GetWidgetNumber,"ax",%progbits
 1446              		.align	2
 1447              		.global	CapSense_GetWidgetNumber
 1448              		.code	16
 1449              		.thumb_func
 1450              		.type	CapSense_GetWidgetNumber, %function
 1451              	CapSense_GetWidgetNumber:
 1452              	.LFB61:
2505:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2506:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2507:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2508:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2509:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2510:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2511:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) || \
2512:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)))
2513:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2514:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: uint16 CapSense_JitterFilter
2515:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2516:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2517:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2518:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Jitter filter function.
2519:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2520:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2521:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2522:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2523:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2524:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2525:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2526:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2527:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 72


2528:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2529:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2530:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2531:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2532:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2533:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2534:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2)
2535:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2536:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2537:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2538:Generated_Source\PSoC4/CapSense_CSHL.c ****             x1--;
2539:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2540:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2541:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2542:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (x1 < x2)
2543:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2544:Generated_Source\PSoC4/CapSense_CSHL.c ****                 x1++;
2545:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2546:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2547:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2548:Generated_Source\PSoC4/CapSense_CSHL.c ****         return x1;
2549:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2550:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2551:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2552:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2553:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2554:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2555:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2556:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))
2557:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2558:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR8Filter
2559:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2560:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2561:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2562:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2563:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2564:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2565:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2566:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2567:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2568:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2569:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2570:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2571:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2572:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2573:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2574:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2575:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2576:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2577:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2578:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2579:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2)
2580:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2581:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2582:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2583:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2584:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 73


2585:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2586:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 3u;
2587:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2588:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2589:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2590:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)) */
2591:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2592:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2593:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
2594:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2595:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR16Filter
2596:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2597:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2598:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2599:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2600:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2601:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2602:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2603:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2604:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2605:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2606:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2607:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2608:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2609:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2610:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2611:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2612:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2613:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2614:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2615:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2616:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2)
2617:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2618:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2619:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2620:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2621:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2622:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2623:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 4u;
2624:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2625:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2626:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2627:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) */
2628:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2629:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2630:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT))
2631:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2632:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2633:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetMatrixButtonPos
2634:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2635:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2636:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2637:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2638:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  button widget.
2639:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2640:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2641:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number;
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 74


2642:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be
2643:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           stored:
2644:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[0] - column position;
2645:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[1] - raw position.
2646:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2647:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2648:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2649:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  cases.
2650:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2651:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2652:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2653:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[ ] - used to store a difference between the current value of
2654:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  raw data and a previous value of the baseline.
2655:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2656:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2657:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2658:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2659:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2660:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2661:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2662:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
2663:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 retVal = 0u;
2664:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 row_sig_max = 0u;
2665:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 col_sig_max = 0u;
2666:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 row_ind = 0u;
2667:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 col_ind = 0u;
2668:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2669:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(widget) == 1u)
2670:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2671:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2672:Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget]; i < (CapSense_rawDataIndex[widget] + \
2673:Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget]); i++)
2674:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2675:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > col_sig_max)
2676:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2677:Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_ind = i;
2678:Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_sig_max = CapSense_sensorSignal[i];
2679:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2680:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2681:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2682:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2683:Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget+1u]; i < (CapSense_rawDataIndex[widget+1u] + \
2684:Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget+1u]); i++)
2685:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2686:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > row_sig_max)
2687:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2688:Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_ind = i;
2689:Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_sig_max = CapSense_sensorSignal[i];
2690:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2691:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2692:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2693:Generated_Source\PSoC4/CapSense_CSHL.c ****             if((col_sig_max >= CapSense_fingerThreshold[widget]) && \
2694:Generated_Source\PSoC4/CapSense_CSHL.c ****                (row_sig_max >= CapSense_fingerThreshold[widget+1u]))
2695:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2696:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = col_ind - CapSense_rawDataIndex[widget];
2697:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = row_ind - CapSense_rawDataIndex[widget+1u];
2698:Generated_Source\PSoC4/CapSense_CSHL.c ****                 retVal = 1u;
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 75


2699:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2700:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2701:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (retVal);
2702:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2703:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2704:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
2705:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2706:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2707:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetWidgetNumber
2708:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2709:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2710:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2711:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2712:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2713:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2714:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2715:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2716:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2717:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2718:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2719:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2720:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2721:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
2722:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2723:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2724:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2725:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2726:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2727:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_GetWidgetNumber(uint32 sensor)
2728:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1453              		.loc 1 2728 0
 1454              		.cfi_startproc
 1455              		@ args = 0, pretend = 0, frame = 0
 1456              		@ frame_needed = 0, uses_anonymous_args = 0
 1457              		@ link register save eliminated.
 1458              	.LVL158:
2729:Generated_Source\PSoC4/CapSense_CSHL.c ****     return((uint32)CapSense_widgetNumber[sensor]);
 1459              		.loc 1 2729 0
 1460 0000 014B     		ldr	r3, .L118
 1461 0002 185C     		ldrb	r0, [r3, r0]
 1462              	.LVL159:
2730:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1463              		.loc 1 2730 0
 1464              		@ sp needed
 1465 0004 7047     		bx	lr
 1466              	.L119:
 1467 0006 C046     		.align	2
 1468              	.L118:
 1469 0008 00000000 		.word	CapSense_widgetNumber
 1470              		.cfi_endproc
 1471              	.LFE61:
 1472              		.size	CapSense_GetWidgetNumber, .-CapSense_GetWidgetNumber
 1473              		.section	.text.CapSense_GetLowBaselineReset,"ax",%progbits
 1474              		.align	2
 1475              		.global	CapSense_GetLowBaselineReset
 1476              		.code	16
 1477              		.thumb_func
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 76


 1478              		.type	CapSense_GetLowBaselineReset, %function
 1479              	CapSense_GetLowBaselineReset:
 1480              	.LFB62:
2731:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2732:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2733:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetLowBaselineReset
2734:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2735:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2736:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2737:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2738:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2739:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2740:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2741:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2742:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2743:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2744:Generated_Source\PSoC4/CapSense_CSHL.c **** *  low baseline reset threshold value a sensor.
2745:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2746:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2747:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_lowBaselineReset[]  - stores low baseline reset values.
2748:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2749:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2750:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2751:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2752:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2753:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetLowBaselineReset(uint32 sensor)
2754:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1481              		.loc 1 2754 0
 1482              		.cfi_startproc
 1483              		@ args = 0, pretend = 0, frame = 0
 1484              		@ frame_needed = 0, uses_anonymous_args = 0
 1485              		@ link register save eliminated.
 1486              	.LVL160:
2755:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_lowBaselineReset[sensor]);
 1487              		.loc 1 2755 0
 1488 0000 014B     		ldr	r3, .L121
 1489 0002 1818     		adds	r0, r3, r0
 1490              	.LVL161:
 1491 0004 0079     		ldrb	r0, [r0, #4]
2756:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1492              		.loc 1 2756 0
 1493              		@ sp needed
 1494 0006 7047     		bx	lr
 1495              	.L122:
 1496              		.align	2
 1497              	.L121:
 1498 0008 00000000 		.word	.LANCHOR1
 1499              		.cfi_endproc
 1500              	.LFE62:
 1501              		.size	CapSense_GetLowBaselineReset, .-CapSense_GetLowBaselineReset
 1502              		.section	.text.CapSense_GetDebounce,"ax",%progbits
 1503              		.align	2
 1504              		.global	CapSense_GetDebounce
 1505              		.code	16
 1506              		.thumb_func
 1507              		.type	CapSense_GetDebounce, %function
 1508              	CapSense_GetDebounce:
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 77


 1509              	.LFB63:
2757:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2758:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2759:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDebounce
2760:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2761:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2762:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2763:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns a debounce value.
2764:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2765:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2766:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2767:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2768:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2769:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2770:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Debounce value
2771:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2772:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2773:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounce[]  - stores the debounce value.
2774:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2775:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2776:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2777:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2778:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2779:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDebounce(uint32 widget)
2780:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1510              		.loc 1 2780 0
 1511              		.cfi_startproc
 1512              		@ args = 0, pretend = 0, frame = 0
 1513              		@ frame_needed = 0, uses_anonymous_args = 0
 1514              		@ link register save eliminated.
 1515              	.LVL162:
2781:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_debounce[widget]);
 1516              		.loc 1 2781 0
 1517 0000 014B     		ldr	r3, .L124
 1518 0002 185C     		ldrb	r0, [r3, r0]
 1519              	.LVL163:
2782:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1520              		.loc 1 2782 0
 1521              		@ sp needed
 1522 0004 7047     		bx	lr
 1523              	.L125:
 1524 0006 C046     		.align	2
 1525              	.L124:
 1526 0008 00000000 		.word	.LANCHOR1
 1527              		.cfi_endproc
 1528              	.LFE63:
 1529              		.size	CapSense_GetDebounce, .-CapSense_GetDebounce
 1530              		.section	.text.CapSense_EnableRawDataFilters,"ax",%progbits
 1531              		.align	2
 1532              		.global	CapSense_EnableRawDataFilters
 1533              		.code	16
 1534              		.thumb_func
 1535              		.type	CapSense_EnableRawDataFilters, %function
 1536              	CapSense_EnableRawDataFilters:
 1537              	.LFB64:
2783:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2784:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 78


2785:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2786:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_EnableRawDataFilters
2787:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2788:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2789:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2790:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Enables the rawdata filters for the sensor signals.
2791:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2792:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2793:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2794:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2795:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2796:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2797:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2798:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2799:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2800:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2801:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2802:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2803:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2804:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2805:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_EnableRawDataFilters(void)
2806:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1538              		.loc 1 2806 0
 1539              		.cfi_startproc
 1540              		@ args = 0, pretend = 0, frame = 0
 1541              		@ frame_needed = 0, uses_anonymous_args = 0
 1542              		@ link register save eliminated.
2807:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
 1543              		.loc 1 2807 0
 1544 0000 0122     		movs	r2, #1
 1545 0002 014B     		ldr	r3, .L127
 1546 0004 1A72     		strb	r2, [r3, #8]
2808:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1547              		.loc 1 2808 0
 1548              		@ sp needed
 1549 0006 7047     		bx	lr
 1550              	.L128:
 1551              		.align	2
 1552              	.L127:
 1553 0008 00000000 		.word	.LANCHOR1
 1554              		.cfi_endproc
 1555              	.LFE64:
 1556              		.size	CapSense_EnableRawDataFilters, .-CapSense_EnableRawDataFilters
 1557              		.section	.text.CapSense_DisableRawDataFilters,"ax",%progbits
 1558              		.align	2
 1559              		.global	CapSense_DisableRawDataFilters
 1560              		.code	16
 1561              		.thumb_func
 1562              		.type	CapSense_DisableRawDataFilters, %function
 1563              	CapSense_DisableRawDataFilters:
 1564              	.LFB65:
2809:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2810:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2811:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_DisableRawDataFilters
2812:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2813:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2814:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 79


2815:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Disables the rawdata filters for the sensor signals.
2816:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2817:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2818:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2819:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2820:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2821:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2822:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2823:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2824:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2825:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2826:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2827:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2828:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2829:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2830:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_DisableRawDataFilters(void)
2831:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1565              		.loc 1 2831 0
 1566              		.cfi_startproc
 1567              		@ args = 0, pretend = 0, frame = 0
 1568              		@ frame_needed = 0, uses_anonymous_args = 0
 1569              		@ link register save eliminated.
2832:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_DISABLED;
 1570              		.loc 1 2832 0
 1571 0000 0022     		movs	r2, #0
 1572 0002 014B     		ldr	r3, .L130
 1573 0004 1A72     		strb	r2, [r3, #8]
2833:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1574              		.loc 1 2833 0
 1575              		@ sp needed
 1576 0006 7047     		bx	lr
 1577              	.L131:
 1578              		.align	2
 1579              	.L130:
 1580 0008 00000000 		.word	.LANCHOR1
 1581              		.cfi_endproc
 1582              	.LFE65:
 1583              		.size	CapSense_DisableRawDataFilters, .-CapSense_DisableRawDataFilters
 1584              		.global	CapSense_numberOfSensors
 1585              		.global	CapSense_rawDataIndex
 1586              		.global	CapSense_debounce
 1587              		.comm	CapSense_hysteresis,4,4
 1588              		.comm	CapSense_negativeNoiseThreshold,4,4
 1589              		.comm	CapSense_noiseThreshold,4,4
 1590              		.comm	CapSense_fingerThreshold,4,4
 1591              		.global	CapSense_enableRawFilters
 1592              		.global	CapSense_lowBaselineReset
 1593              		.comm	CapSense_lowBaselineResetCnt,4,4
 1594              		.global	CapSense_sensorOnMask
 1595              		.global	CapSense_sensorSignal
 1596              		.global	CapSense_sensorBaselineLow
 1597              		.global	CapSense_sensorBaseline
 1598              		.comm	CapSense_rawFilterData1,8,4
 1599              		.section	.rodata
 1600              		.align	2
 1601              		.set	.LANCHOR2,. + 0
 1602              		.type	CapSense_rawDataIndex, %object
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 80


 1603              		.size	CapSense_rawDataIndex, 4
 1604              	CapSense_rawDataIndex:
 1605 0000 00       		.byte	0
 1606 0001 01       		.byte	1
 1607 0002 02       		.byte	2
 1608 0003 03       		.byte	3
 1609              		.type	CapSense_numberOfSensors, %object
 1610              		.size	CapSense_numberOfSensors, 4
 1611              	CapSense_numberOfSensors:
 1612 0004 01       		.byte	1
 1613 0005 01       		.byte	1
 1614 0006 01       		.byte	1
 1615 0007 01       		.byte	1
 1616              		.data
 1617              		.align	2
 1618              		.set	.LANCHOR1,. + 0
 1619              		.type	CapSense_debounce, %object
 1620              		.size	CapSense_debounce, 4
 1621              	CapSense_debounce:
 1622 0000 05       		.byte	5
 1623 0001 05       		.byte	5
 1624 0002 05       		.byte	5
 1625 0003 05       		.byte	5
 1626              		.type	CapSense_lowBaselineReset, %object
 1627              		.size	CapSense_lowBaselineReset, 4
 1628              	CapSense_lowBaselineReset:
 1629 0004 1E       		.byte	30
 1630 0005 1E       		.byte	30
 1631 0006 1E       		.byte	30
 1632 0007 1E       		.byte	30
 1633              		.type	CapSense_enableRawFilters, %object
 1634              		.size	CapSense_enableRawFilters, 1
 1635              	CapSense_enableRawFilters:
 1636 0008 01       		.byte	1
 1637              		.bss
 1638              		.align	2
 1639              		.set	.LANCHOR0,. + 0
 1640              		.type	CapSense_sensorBaseline, %object
 1641              		.size	CapSense_sensorBaseline, 8
 1642              	CapSense_sensorBaseline:
 1643 0000 00000000 		.space	8
 1643      00000000 
 1644              		.type	CapSense_sensorBaselineLow, %object
 1645              		.size	CapSense_sensorBaselineLow, 4
 1646              	CapSense_sensorBaselineLow:
 1647 0008 00000000 		.space	4
 1648              		.type	CapSense_sensorSignal, %object
 1649              		.size	CapSense_sensorSignal, 4
 1650              	CapSense_sensorSignal:
 1651 000c 00000000 		.space	4
 1652              		.type	CapSense_debounceCounter, %object
 1653              		.size	CapSense_debounceCounter, 5
 1654              	CapSense_debounceCounter:
 1655 0010 00000000 		.space	5
 1655      00
 1656 0015 000000   		.space	3
 1657              		.type	CapSense_sensorOnMask, %object
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 81


 1658              		.size	CapSense_sensorOnMask, 1
 1659              	CapSense_sensorOnMask:
 1660 0018 00       		.space	1
 1661              		.text
 1662              	.Letext0:
 1663              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1664              		.file 3 "Generated_Source\\PSoC4\\CapSense_PVT.h"
 1665              		.file 4 "Generated_Source\\PSoC4\\CapSense.h"
 1666              		.section	.debug_info,"",%progbits
 1667              	.Ldebug_info0:
 1668 0000 EF0D0000 		.4byte	0xdef
 1669 0004 0400     		.2byte	0x4
 1670 0006 00000000 		.4byte	.Ldebug_abbrev0
 1671 000a 04       		.byte	0x4
 1672 000b 01       		.uleb128 0x1
 1673 000c C0030000 		.4byte	.LASF129
 1674 0010 0C       		.byte	0xc
 1675 0011 42090000 		.4byte	.LASF130
 1676 0015 4B0A0000 		.4byte	.LASF131
 1677 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1678 001d 00000000 		.4byte	0
 1679 0021 00000000 		.4byte	.Ldebug_line0
 1680 0025 02       		.uleb128 0x2
 1681 0026 01       		.byte	0x1
 1682 0027 06       		.byte	0x6
 1683 0028 A8090000 		.4byte	.LASF0
 1684 002c 02       		.uleb128 0x2
 1685 002d 01       		.byte	0x1
 1686 002e 08       		.byte	0x8
 1687 002f 94080000 		.4byte	.LASF1
 1688 0033 02       		.uleb128 0x2
 1689 0034 02       		.byte	0x2
 1690 0035 05       		.byte	0x5
 1691 0036 81070000 		.4byte	.LASF2
 1692 003a 02       		.uleb128 0x2
 1693 003b 02       		.byte	0x2
 1694 003c 07       		.byte	0x7
 1695 003d B4090000 		.4byte	.LASF3
 1696 0041 02       		.uleb128 0x2
 1697 0042 04       		.byte	0x4
 1698 0043 05       		.byte	0x5
 1699 0044 8B070000 		.4byte	.LASF4
 1700 0048 02       		.uleb128 0x2
 1701 0049 04       		.byte	0x4
 1702 004a 07       		.byte	0x7
 1703 004b 26080000 		.4byte	.LASF5
 1704 004f 02       		.uleb128 0x2
 1705 0050 08       		.byte	0x8
 1706 0051 05       		.byte	0x5
 1707 0052 1B060000 		.4byte	.LASF6
 1708 0056 02       		.uleb128 0x2
 1709 0057 08       		.byte	0x8
 1710 0058 07       		.byte	0x7
 1711 0059 DD020000 		.4byte	.LASF7
 1712 005d 03       		.uleb128 0x3
 1713 005e 04       		.byte	0x4
 1714 005f 05       		.byte	0x5
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 82


 1715 0060 696E7400 		.ascii	"int\000"
 1716 0064 02       		.uleb128 0x2
 1717 0065 04       		.byte	0x4
 1718 0066 07       		.byte	0x7
 1719 0067 3F010000 		.4byte	.LASF8
 1720 006b 04       		.uleb128 0x4
 1721 006c 260A0000 		.4byte	.LASF9
 1722 0070 02       		.byte	0x2
 1723 0071 E401     		.2byte	0x1e4
 1724 0073 2C000000 		.4byte	0x2c
 1725 0077 04       		.uleb128 0x4
 1726 0078 C1050000 		.4byte	.LASF10
 1727 007c 02       		.byte	0x2
 1728 007d E501     		.2byte	0x1e5
 1729 007f 3A000000 		.4byte	0x3a
 1730 0083 04       		.uleb128 0x4
 1731 0084 0D070000 		.4byte	.LASF11
 1732 0088 02       		.byte	0x2
 1733 0089 E601     		.2byte	0x1e6
 1734 008b 48000000 		.4byte	0x48
 1735 008f 02       		.uleb128 0x2
 1736 0090 04       		.byte	0x4
 1737 0091 04       		.byte	0x4
 1738 0092 98020000 		.4byte	.LASF12
 1739 0096 02       		.uleb128 0x2
 1740 0097 08       		.byte	0x8
 1741 0098 04       		.byte	0x4
 1742 0099 2C0A0000 		.4byte	.LASF13
 1743 009d 02       		.uleb128 0x2
 1744 009e 01       		.byte	0x1
 1745 009f 08       		.byte	0x8
 1746 00a0 8A050000 		.4byte	.LASF14
 1747 00a4 02       		.uleb128 0x2
 1748 00a5 04       		.byte	0x4
 1749 00a6 07       		.byte	0x7
 1750 00a7 1D080000 		.4byte	.LASF15
 1751 00ab 02       		.uleb128 0x2
 1752 00ac 08       		.byte	0x8
 1753 00ad 04       		.byte	0x4
 1754 00ae 4D070000 		.4byte	.LASF16
 1755 00b2 05       		.uleb128 0x5
 1756 00b3 5C       		.byte	0x5c
 1757 00b4 03       		.byte	0x3
 1758 00b5 2F       		.byte	0x2f
 1759 00b6 CF010000 		.4byte	0x1cf
 1760 00ba 06       		.uleb128 0x6
 1761 00bb CD050000 		.4byte	.LASF17
 1762 00bf 03       		.byte	0x3
 1763 00c0 31       		.byte	0x31
 1764 00c1 CF010000 		.4byte	0x1cf
 1765 00c5 00       		.byte	0
 1766 00c6 06       		.uleb128 0x6
 1767 00c7 72070000 		.4byte	.LASF18
 1768 00cb 03       		.byte	0x3
 1769 00cc 32       		.byte	0x32
 1770 00cd CF010000 		.4byte	0x1cf
 1771 00d1 04       		.byte	0x4
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 83


 1772 00d2 06       		.uleb128 0x6
 1773 00d3 1E090000 		.4byte	.LASF19
 1774 00d7 03       		.byte	0x3
 1775 00d8 33       		.byte	0x33
 1776 00d9 CF010000 		.4byte	0x1cf
 1777 00dd 08       		.byte	0x8
 1778 00de 06       		.uleb128 0x6
 1779 00df 87080000 		.4byte	.LASF20
 1780 00e3 03       		.byte	0x3
 1781 00e4 34       		.byte	0x34
 1782 00e5 CF010000 		.4byte	0x1cf
 1783 00e9 0C       		.byte	0xc
 1784 00ea 06       		.uleb128 0x6
 1785 00eb 9E090000 		.4byte	.LASF21
 1786 00ef 03       		.byte	0x3
 1787 00f0 35       		.byte	0x35
 1788 00f1 CF010000 		.4byte	0x1cf
 1789 00f5 10       		.byte	0x10
 1790 00f6 06       		.uleb128 0x6
 1791 00f7 B2070000 		.4byte	.LASF22
 1792 00fb 03       		.byte	0x3
 1793 00fc 36       		.byte	0x36
 1794 00fd D5010000 		.4byte	0x1d5
 1795 0101 14       		.byte	0x14
 1796 0102 06       		.uleb128 0x6
 1797 0103 9E020000 		.4byte	.LASF23
 1798 0107 03       		.byte	0x3
 1799 0108 37       		.byte	0x37
 1800 0109 E0010000 		.4byte	0x1e0
 1801 010d 18       		.byte	0x18
 1802 010e 06       		.uleb128 0x6
 1803 010f 6D040000 		.4byte	.LASF24
 1804 0113 03       		.byte	0x3
 1805 0114 38       		.byte	0x38
 1806 0115 CF010000 		.4byte	0x1cf
 1807 0119 1C       		.byte	0x1c
 1808 011a 06       		.uleb128 0x6
 1809 011b C8020000 		.4byte	.LASF25
 1810 011f 03       		.byte	0x3
 1811 0120 39       		.byte	0x39
 1812 0121 CF010000 		.4byte	0x1cf
 1813 0125 20       		.byte	0x20
 1814 0126 06       		.uleb128 0x6
 1815 0127 8D010000 		.4byte	.LASF26
 1816 012b 03       		.byte	0x3
 1817 012c 3A       		.byte	0x3a
 1818 012d CF010000 		.4byte	0x1cf
 1819 0131 24       		.byte	0x24
 1820 0132 06       		.uleb128 0x6
 1821 0133 AD060000 		.4byte	.LASF27
 1822 0137 03       		.byte	0x3
 1823 0138 3B       		.byte	0x3b
 1824 0139 E6010000 		.4byte	0x1e6
 1825 013d 28       		.byte	0x28
 1826 013e 06       		.uleb128 0x6
 1827 013f 5C010000 		.4byte	.LASF28
 1828 0143 03       		.byte	0x3
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 84


 1829 0144 3C       		.byte	0x3c
 1830 0145 E6010000 		.4byte	0x1e6
 1831 0149 2C       		.byte	0x2c
 1832 014a 06       		.uleb128 0x6
 1833 014b 50080000 		.4byte	.LASF29
 1834 014f 03       		.byte	0x3
 1835 0150 3D       		.byte	0x3d
 1836 0151 E6010000 		.4byte	0x1e6
 1837 0155 30       		.byte	0x30
 1838 0156 06       		.uleb128 0x6
 1839 0157 FB070000 		.4byte	.LASF30
 1840 015b 03       		.byte	0x3
 1841 015c 3E       		.byte	0x3e
 1842 015d CF010000 		.4byte	0x1cf
 1843 0161 34       		.byte	0x34
 1844 0162 06       		.uleb128 0x6
 1845 0163 48000000 		.4byte	.LASF31
 1846 0167 03       		.byte	0x3
 1847 0168 3F       		.byte	0x3f
 1848 0169 CF010000 		.4byte	0x1cf
 1849 016d 38       		.byte	0x38
 1850 016e 06       		.uleb128 0x6
 1851 016f B2050000 		.4byte	.LASF32
 1852 0173 03       		.byte	0x3
 1853 0174 40       		.byte	0x40
 1854 0175 D5010000 		.4byte	0x1d5
 1855 0179 3C       		.byte	0x3c
 1856 017a 06       		.uleb128 0x6
 1857 017b E8010000 		.4byte	.LASF33
 1858 017f 03       		.byte	0x3
 1859 0180 41       		.byte	0x41
 1860 0181 D5010000 		.4byte	0x1d5
 1861 0185 40       		.byte	0x40
 1862 0186 06       		.uleb128 0x6
 1863 0187 95000000 		.4byte	.LASF34
 1864 018b 03       		.byte	0x3
 1865 018c 42       		.byte	0x42
 1866 018d D5010000 		.4byte	0x1d5
 1867 0191 44       		.byte	0x44
 1868 0192 06       		.uleb128 0x6
 1869 0193 73060000 		.4byte	.LASF35
 1870 0197 03       		.byte	0x3
 1871 0198 43       		.byte	0x43
 1872 0199 FB010000 		.4byte	0x1fb
 1873 019d 48       		.byte	0x48
 1874 019e 06       		.uleb128 0x6
 1875 019f 4B060000 		.4byte	.LASF36
 1876 01a3 03       		.byte	0x3
 1877 01a4 44       		.byte	0x44
 1878 01a5 0C020000 		.4byte	0x20c
 1879 01a9 4C       		.byte	0x4c
 1880 01aa 06       		.uleb128 0x6
 1881 01ab 83040000 		.4byte	.LASF37
 1882 01af 03       		.byte	0x3
 1883 01b0 45       		.byte	0x45
 1884 01b1 FB010000 		.4byte	0x1fb
 1885 01b5 50       		.byte	0x50
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 85


 1886 01b6 06       		.uleb128 0x6
 1887 01b7 A5000000 		.4byte	.LASF38
 1888 01bb 03       		.byte	0x3
 1889 01bc 46       		.byte	0x46
 1890 01bd 26020000 		.4byte	0x226
 1891 01c1 54       		.byte	0x54
 1892 01c2 06       		.uleb128 0x6
 1893 01c3 C7090000 		.4byte	.LASF39
 1894 01c7 03       		.byte	0x3
 1895 01c8 47       		.byte	0x47
 1896 01c9 41020000 		.4byte	0x241
 1897 01cd 58       		.byte	0x58
 1898 01ce 00       		.byte	0
 1899 01cf 07       		.uleb128 0x7
 1900 01d0 04       		.byte	0x4
 1901 01d1 6B000000 		.4byte	0x6b
 1902 01d5 07       		.uleb128 0x7
 1903 01d6 04       		.byte	0x4
 1904 01d7 DB010000 		.4byte	0x1db
 1905 01db 08       		.uleb128 0x8
 1906 01dc 6B000000 		.4byte	0x6b
 1907 01e0 07       		.uleb128 0x7
 1908 01e1 04       		.byte	0x4
 1909 01e2 83000000 		.4byte	0x83
 1910 01e6 07       		.uleb128 0x7
 1911 01e7 04       		.byte	0x4
 1912 01e8 77000000 		.4byte	0x77
 1913 01ec 09       		.uleb128 0x9
 1914 01ed 77000000 		.4byte	0x77
 1915 01f1 FB010000 		.4byte	0x1fb
 1916 01f5 0A       		.uleb128 0xa
 1917 01f6 83000000 		.4byte	0x83
 1918 01fa 00       		.byte	0
 1919 01fb 07       		.uleb128 0x7
 1920 01fc 04       		.byte	0x4
 1921 01fd EC010000 		.4byte	0x1ec
 1922 0201 0B       		.uleb128 0xb
 1923 0202 0C020000 		.4byte	0x20c
 1924 0206 0A       		.uleb128 0xa
 1925 0207 83000000 		.4byte	0x83
 1926 020b 00       		.byte	0
 1927 020c 07       		.uleb128 0x7
 1928 020d 04       		.byte	0x4
 1929 020e 01020000 		.4byte	0x201
 1930 0212 09       		.uleb128 0x9
 1931 0213 83000000 		.4byte	0x83
 1932 0217 26020000 		.4byte	0x226
 1933 021b 0A       		.uleb128 0xa
 1934 021c D5010000 		.4byte	0x1d5
 1935 0220 0A       		.uleb128 0xa
 1936 0221 83000000 		.4byte	0x83
 1937 0225 00       		.byte	0
 1938 0226 07       		.uleb128 0x7
 1939 0227 04       		.byte	0x4
 1940 0228 12020000 		.4byte	0x212
 1941 022c 0B       		.uleb128 0xb
 1942 022d 41020000 		.4byte	0x241
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 86


 1943 0231 0A       		.uleb128 0xa
 1944 0232 CF010000 		.4byte	0x1cf
 1945 0236 0A       		.uleb128 0xa
 1946 0237 83000000 		.4byte	0x83
 1947 023b 0A       		.uleb128 0xa
 1948 023c 83000000 		.4byte	0x83
 1949 0240 00       		.byte	0
 1950 0241 07       		.uleb128 0x7
 1951 0242 04       		.byte	0x4
 1952 0243 2C020000 		.4byte	0x22c
 1953 0247 0C       		.uleb128 0xc
 1954 0248 18010000 		.4byte	.LASF40
 1955 024c 03       		.byte	0x3
 1956 024d 48       		.byte	0x48
 1957 024e B2000000 		.4byte	0xb2
 1958 0252 05       		.uleb128 0x5
 1959 0253 0C       		.byte	0xc
 1960 0254 03       		.byte	0x3
 1961 0255 4A       		.byte	0x4a
 1962 0256 A3020000 		.4byte	0x2a3
 1963 025a 06       		.uleb128 0x6
 1964 025b 2D050000 		.4byte	.LASF41
 1965 025f 03       		.byte	0x3
 1966 0260 4C       		.byte	0x4c
 1967 0261 6B000000 		.4byte	0x6b
 1968 0265 00       		.byte	0
 1969 0266 06       		.uleb128 0x6
 1970 0267 F5010000 		.4byte	.LASF42
 1971 026b 03       		.byte	0x3
 1972 026c 4D       		.byte	0x4d
 1973 026d 6B000000 		.4byte	0x6b
 1974 0271 01       		.byte	0x1
 1975 0272 06       		.uleb128 0x6
 1976 0273 4C010000 		.4byte	.LASF43
 1977 0277 03       		.byte	0x3
 1978 0278 4E       		.byte	0x4e
 1979 0279 6B000000 		.4byte	0x6b
 1980 027d 02       		.byte	0x2
 1981 027e 06       		.uleb128 0x6
 1982 027f 64050000 		.4byte	.LASF44
 1983 0283 03       		.byte	0x3
 1984 0284 4F       		.byte	0x4f
 1985 0285 77000000 		.4byte	0x77
 1986 0289 04       		.byte	0x4
 1987 028a 06       		.uleb128 0x6
 1988 028b 64070000 		.4byte	.LASF45
 1989 028f 03       		.byte	0x3
 1990 0290 50       		.byte	0x50
 1991 0291 77000000 		.4byte	0x77
 1992 0295 06       		.byte	0x6
 1993 0296 06       		.uleb128 0x6
 1994 0297 38080000 		.4byte	.LASF46
 1995 029b 03       		.byte	0x3
 1996 029c 51       		.byte	0x51
 1997 029d A3020000 		.4byte	0x2a3
 1998 02a1 08       		.byte	0x8
 1999 02a2 00       		.byte	0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 87


 2000 02a3 07       		.uleb128 0x7
 2001 02a4 04       		.byte	0x4
 2002 02a5 A9020000 		.4byte	0x2a9
 2003 02a9 08       		.uleb128 0x8
 2004 02aa 47020000 		.4byte	0x247
 2005 02ae 0C       		.uleb128 0xc
 2006 02af 2E030000 		.4byte	.LASF47
 2007 02b3 03       		.byte	0x3
 2008 02b4 52       		.byte	0x52
 2009 02b5 52020000 		.4byte	0x252
 2010 02b9 0D       		.uleb128 0xd
 2011 02ba 9B060000 		.4byte	.LASF48
 2012 02be 01       		.byte	0x1
 2013 02bf 8C       		.byte	0x8c
 2014 02c0 00000000 		.4byte	.LFB32
 2015 02c4 3C000000 		.4byte	.LFE32-.LFB32
 2016 02c8 01       		.uleb128 0x1
 2017 02c9 9C       		.byte	0x9c
 2018 02ca ED020000 		.4byte	0x2ed
 2019 02ce 0E       		.uleb128 0xe
 2020 02cf 5D050000 		.4byte	.LASF50
 2021 02d3 01       		.byte	0x1
 2022 02d4 8C       		.byte	0x8c
 2023 02d5 83000000 		.4byte	0x83
 2024 02d9 00000000 		.4byte	.LLST0
 2025 02dd 0F       		.uleb128 0xf
 2026 02de 0E030000 		.4byte	.LASF52
 2027 02e2 01       		.byte	0x1
 2028 02e3 90       		.byte	0x90
 2029 02e4 6B000000 		.4byte	0x6b
 2030 02e8 21000000 		.4byte	.LLST1
 2031 02ec 00       		.byte	0
 2032 02ed 0D       		.uleb128 0xd
 2033 02ee 9D010000 		.4byte	.LASF49
 2034 02f2 01       		.byte	0x1
 2035 02f3 D8       		.byte	0xd8
 2036 02f4 00000000 		.4byte	.LFB33
 2037 02f8 18000000 		.4byte	.LFE33-.LFB33
 2038 02fc 01       		.uleb128 0x1
 2039 02fd 9C       		.byte	0x9c
 2040 02fe 3F030000 		.4byte	0x33f
 2041 0302 0E       		.uleb128 0xe
 2042 0303 5D050000 		.4byte	.LASF50
 2043 0307 01       		.byte	0x1
 2044 0308 D8       		.byte	0xd8
 2045 0309 83000000 		.4byte	0x83
 2046 030d 34000000 		.4byte	.LLST2
 2047 0311 10       		.uleb128 0x10
 2048 0312 08000000 		.4byte	.LVL5
 2049 0316 A50D0000 		.4byte	0xda5
 2050 031a 25030000 		.4byte	0x325
 2051 031e 11       		.uleb128 0x11
 2052 031f 01       		.uleb128 0x1
 2053 0320 50       		.byte	0x50
 2054 0321 02       		.uleb128 0x2
 2055 0322 74       		.byte	0x74
 2056 0323 00       		.sleb128 0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 88


 2057 0324 00       		.byte	0
 2058 0325 12       		.uleb128 0x12
 2059 0326 0C000000 		.4byte	.LVL6
 2060 032a B00D0000 		.4byte	0xdb0
 2061 032e 13       		.uleb128 0x13
 2062 032f 16000000 		.4byte	.LVL7
 2063 0333 B9020000 		.4byte	0x2b9
 2064 0337 11       		.uleb128 0x11
 2065 0338 01       		.uleb128 0x1
 2066 0339 50       		.byte	0x50
 2067 033a 02       		.uleb128 0x2
 2068 033b 74       		.byte	0x74
 2069 033c 00       		.sleb128 0
 2070 033d 00       		.byte	0
 2071 033e 00       		.byte	0
 2072 033f 0D       		.uleb128 0xd
 2073 0340 C8080000 		.4byte	.LASF51
 2074 0344 01       		.byte	0x1
 2075 0345 FD       		.byte	0xfd
 2076 0346 00000000 		.4byte	.LFB34
 2077 034a 14000000 		.4byte	.LFE34-.LFB34
 2078 034e 01       		.uleb128 0x1
 2079 034f 9C       		.byte	0x9c
 2080 0350 72030000 		.4byte	0x372
 2081 0354 14       		.uleb128 0x14
 2082 0355 6900     		.ascii	"i\000"
 2083 0357 01       		.byte	0x1
 2084 0358 FF       		.byte	0xff
 2085 0359 83000000 		.4byte	0x83
 2086 035d 60000000 		.4byte	.LLST3
 2087 0361 13       		.uleb128 0x13
 2088 0362 0C000000 		.4byte	.LVL11
 2089 0366 ED020000 		.4byte	0x2ed
 2090 036a 11       		.uleb128 0x11
 2091 036b 01       		.uleb128 0x1
 2092 036c 50       		.byte	0x50
 2093 036d 02       		.uleb128 0x2
 2094 036e 74       		.byte	0x74
 2095 036f 00       		.sleb128 0
 2096 0370 00       		.byte	0
 2097 0371 00       		.byte	0
 2098 0372 15       		.uleb128 0x15
 2099 0373 69010000 		.4byte	.LASF53
 2100 0377 01       		.byte	0x1
 2101 0378 2001     		.2byte	0x120
 2102 037a 00000000 		.4byte	.LFB35
 2103 037e 30000000 		.4byte	.LFE35-.LFB35
 2104 0382 01       		.uleb128 0x1
 2105 0383 9C       		.byte	0x9c
 2106 0384 DD030000 		.4byte	0x3dd
 2107 0388 16       		.uleb128 0x16
 2108 0389 6900     		.ascii	"i\000"
 2109 038b 01       		.byte	0x1
 2110 038c 2201     		.2byte	0x122
 2111 038e 83000000 		.4byte	0x83
 2112 0392 7F000000 		.4byte	.LLST4
 2113 0396 17       		.uleb128 0x17
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 89


 2114 0397 FB000000 		.4byte	.LASF54
 2115 039b 01       		.byte	0x1
 2116 039c 2301     		.2byte	0x123
 2117 039e 83000000 		.4byte	0x83
 2118 03a2 92000000 		.4byte	.LLST5
 2119 03a6 12       		.uleb128 0x12
 2120 03a7 06000000 		.4byte	.LVL14
 2121 03ab BB0D0000 		.4byte	0xdbb
 2122 03af 12       		.uleb128 0x12
 2123 03b0 0A000000 		.4byte	.LVL15
 2124 03b4 B00D0000 		.4byte	0xdb0
 2125 03b8 10       		.uleb128 0x10
 2126 03b9 1A000000 		.4byte	.LVL17
 2127 03bd C60D0000 		.4byte	0xdc6
 2128 03c1 CC030000 		.4byte	0x3cc
 2129 03c5 11       		.uleb128 0x11
 2130 03c6 01       		.uleb128 0x1
 2131 03c7 51       		.byte	0x51
 2132 03c8 02       		.uleb128 0x2
 2133 03c9 74       		.byte	0x74
 2134 03ca 00       		.sleb128 0
 2135 03cb 00       		.byte	0
 2136 03cc 13       		.uleb128 0x13
 2137 03cd 24000000 		.4byte	.LVL19
 2138 03d1 B9020000 		.4byte	0x2b9
 2139 03d5 11       		.uleb128 0x11
 2140 03d6 01       		.uleb128 0x1
 2141 03d7 50       		.byte	0x50
 2142 03d8 02       		.uleb128 0x2
 2143 03d9 74       		.byte	0x74
 2144 03da 00       		.sleb128 0
 2145 03db 00       		.byte	0
 2146 03dc 00       		.byte	0
 2147 03dd 18       		.uleb128 0x18
 2148 03de E8080000 		.4byte	.LASF57
 2149 03e2 01       		.byte	0x1
 2150 03e3 B502     		.2byte	0x2b5
 2151 03e5 77000000 		.4byte	0x77
 2152 03e9 00000000 		.4byte	.LFB40
 2153 03ed 0C000000 		.4byte	.LFE40-.LFB40
 2154 03f1 01       		.uleb128 0x1
 2155 03f2 9C       		.byte	0x9c
 2156 03f3 08040000 		.4byte	0x408
 2157 03f7 19       		.uleb128 0x19
 2158 03f8 5D050000 		.4byte	.LASF50
 2159 03fc 01       		.byte	0x1
 2160 03fd B502     		.2byte	0x2b5
 2161 03ff 83000000 		.4byte	0x83
 2162 0403 A5000000 		.4byte	.LLST6
 2163 0407 00       		.byte	0
 2164 0408 15       		.uleb128 0x15
 2165 0409 CF010000 		.4byte	.LASF55
 2166 040d 01       		.byte	0x1
 2167 040e D002     		.2byte	0x2d0
 2168 0410 00000000 		.4byte	.LFB41
 2169 0414 0C000000 		.4byte	.LFE41-.LFB41
 2170 0418 01       		.uleb128 0x1
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 90


 2171 0419 9C       		.byte	0x9c
 2172 041a 3D040000 		.4byte	0x43d
 2173 041e 19       		.uleb128 0x19
 2174 041f 5D050000 		.4byte	.LASF50
 2175 0423 01       		.byte	0x1
 2176 0424 D002     		.2byte	0x2d0
 2177 0426 83000000 		.4byte	0x83
 2178 042a C6000000 		.4byte	.LLST7
 2179 042e 1A       		.uleb128 0x1a
 2180 042f C8050000 		.4byte	.LASF56
 2181 0433 01       		.byte	0x1
 2182 0434 D002     		.2byte	0x2d0
 2183 0436 77000000 		.4byte	0x77
 2184 043a 01       		.uleb128 0x1
 2185 043b 51       		.byte	0x51
 2186 043c 00       		.byte	0
 2187 043d 18       		.uleb128 0x18
 2188 043e 4E040000 		.4byte	.LASF58
 2189 0442 01       		.byte	0x1
 2190 0443 EB02     		.2byte	0x2eb
 2191 0445 6B000000 		.4byte	0x6b
 2192 0449 00000000 		.4byte	.LFB42
 2193 044d 0C000000 		.4byte	.LFE42-.LFB42
 2194 0451 01       		.uleb128 0x1
 2195 0452 9C       		.byte	0x9c
 2196 0453 68040000 		.4byte	0x468
 2197 0457 19       		.uleb128 0x19
 2198 0458 5D050000 		.4byte	.LASF50
 2199 045c 01       		.byte	0x1
 2200 045d EB02     		.2byte	0x2eb
 2201 045f 83000000 		.4byte	0x83
 2202 0463 E7000000 		.4byte	.LLST8
 2203 0467 00       		.byte	0
 2204 0468 15       		.uleb128 0x15
 2205 0469 05020000 		.4byte	.LASF59
 2206 046d 01       		.byte	0x1
 2207 046e 0603     		.2byte	0x306
 2208 0470 00000000 		.4byte	.LFB43
 2209 0474 0C000000 		.4byte	.LFE43-.LFB43
 2210 0478 01       		.uleb128 0x1
 2211 0479 9C       		.byte	0x9c
 2212 047a 9D040000 		.4byte	0x49d
 2213 047e 19       		.uleb128 0x19
 2214 047f 5D050000 		.4byte	.LASF50
 2215 0483 01       		.byte	0x1
 2216 0484 0603     		.2byte	0x306
 2217 0486 83000000 		.4byte	0x83
 2218 048a 08010000 		.4byte	.LLST9
 2219 048e 1A       		.uleb128 0x1a
 2220 048f 9D030000 		.4byte	.LASF60
 2221 0493 01       		.byte	0x1
 2222 0494 0603     		.2byte	0x306
 2223 0496 6B000000 		.4byte	0x6b
 2224 049a 01       		.uleb128 0x1
 2225 049b 51       		.byte	0x51
 2226 049c 00       		.byte	0
 2227 049d 18       		.uleb128 0x18
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 91


 2228 049e 31070000 		.4byte	.LASF61
 2229 04a2 01       		.byte	0x1
 2230 04a3 2103     		.2byte	0x321
 2231 04a5 6B000000 		.4byte	0x6b
 2232 04a9 00000000 		.4byte	.LFB44
 2233 04ad 0C000000 		.4byte	.LFE44-.LFB44
 2234 04b1 01       		.uleb128 0x1
 2235 04b2 9C       		.byte	0x9c
 2236 04b3 C8040000 		.4byte	0x4c8
 2237 04b7 19       		.uleb128 0x19
 2238 04b8 0E030000 		.4byte	.LASF52
 2239 04bc 01       		.byte	0x1
 2240 04bd 2103     		.2byte	0x321
 2241 04bf 83000000 		.4byte	0x83
 2242 04c3 29010000 		.4byte	.LLST10
 2243 04c7 00       		.byte	0
 2244 04c8 18       		.uleb128 0x18
 2245 04c9 AD020000 		.4byte	.LASF62
 2246 04cd 01       		.byte	0x1
 2247 04ce 3C03     		.2byte	0x33c
 2248 04d0 6B000000 		.4byte	0x6b
 2249 04d4 00000000 		.4byte	.LFB45
 2250 04d8 0C000000 		.4byte	.LFE45-.LFB45
 2251 04dc 01       		.uleb128 0x1
 2252 04dd 9C       		.byte	0x9c
 2253 04de F3040000 		.4byte	0x4f3
 2254 04e2 19       		.uleb128 0x19
 2255 04e3 0E030000 		.4byte	.LASF52
 2256 04e7 01       		.byte	0x1
 2257 04e8 3C03     		.2byte	0x33c
 2258 04ea 83000000 		.4byte	0x83
 2259 04ee 4A010000 		.4byte	.LLST11
 2260 04f2 00       		.byte	0
 2261 04f3 18       		.uleb128 0x18
 2262 04f4 A3030000 		.4byte	.LASF63
 2263 04f8 01       		.byte	0x1
 2264 04f9 5803     		.2byte	0x358
 2265 04fb 6B000000 		.4byte	0x6b
 2266 04ff 00000000 		.4byte	.LFB46
 2267 0503 0C000000 		.4byte	.LFE46-.LFB46
 2268 0507 01       		.uleb128 0x1
 2269 0508 9C       		.byte	0x9c
 2270 0509 1E050000 		.4byte	0x51e
 2271 050d 19       		.uleb128 0x19
 2272 050e 0E030000 		.4byte	.LASF52
 2273 0512 01       		.byte	0x1
 2274 0513 5803     		.2byte	0x358
 2275 0515 83000000 		.4byte	0x83
 2276 0519 6B010000 		.4byte	.LLST12
 2277 051d 00       		.byte	0
 2278 051e 18       		.uleb128 0x18
 2279 051f 8F050000 		.4byte	.LASF64
 2280 0523 01       		.byte	0x1
 2281 0524 7403     		.2byte	0x374
 2282 0526 6B000000 		.4byte	0x6b
 2283 052a 00000000 		.4byte	.LFB47
 2284 052e 0C000000 		.4byte	.LFE47-.LFB47
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 92


 2285 0532 01       		.uleb128 0x1
 2286 0533 9C       		.byte	0x9c
 2287 0534 49050000 		.4byte	0x549
 2288 0538 19       		.uleb128 0x19
 2289 0539 0E030000 		.4byte	.LASF52
 2290 053d 01       		.byte	0x1
 2291 053e 7403     		.2byte	0x374
 2292 0540 83000000 		.4byte	0x83
 2293 0544 8C010000 		.4byte	.LLST13
 2294 0548 00       		.byte	0
 2295 0549 15       		.uleb128 0x15
 2296 054a 62030000 		.4byte	.LASF65
 2297 054e 01       		.byte	0x1
 2298 054f 9503     		.2byte	0x395
 2299 0551 00000000 		.4byte	.LFB48
 2300 0555 0C000000 		.4byte	.LFE48-.LFB48
 2301 0559 01       		.uleb128 0x1
 2302 055a 9C       		.byte	0x9c
 2303 055b 7C050000 		.4byte	0x57c
 2304 055f 1A       		.uleb128 0x1a
 2305 0560 0E030000 		.4byte	.LASF52
 2306 0564 01       		.byte	0x1
 2307 0565 9503     		.2byte	0x395
 2308 0567 83000000 		.4byte	0x83
 2309 056b 01       		.uleb128 0x1
 2310 056c 50       		.byte	0x50
 2311 056d 1A       		.uleb128 0x1a
 2312 056e 9D030000 		.4byte	.LASF60
 2313 0572 01       		.byte	0x1
 2314 0573 9503     		.2byte	0x395
 2315 0575 6B000000 		.4byte	0x6b
 2316 0579 01       		.uleb128 0x1
 2317 057a 51       		.byte	0x51
 2318 057b 00       		.byte	0
 2319 057c 15       		.uleb128 0x15
 2320 057d 4B020000 		.4byte	.LASF66
 2321 0581 01       		.byte	0x1
 2322 0582 B103     		.2byte	0x3b1
 2323 0584 00000000 		.4byte	.LFB49
 2324 0588 0C000000 		.4byte	.LFE49-.LFB49
 2325 058c 01       		.uleb128 0x1
 2326 058d 9C       		.byte	0x9c
 2327 058e AF050000 		.4byte	0x5af
 2328 0592 1A       		.uleb128 0x1a
 2329 0593 0E030000 		.4byte	.LASF52
 2330 0597 01       		.byte	0x1
 2331 0598 B103     		.2byte	0x3b1
 2332 059a 83000000 		.4byte	0x83
 2333 059e 01       		.uleb128 0x1
 2334 059f 50       		.byte	0x50
 2335 05a0 1A       		.uleb128 0x1a
 2336 05a1 9D030000 		.4byte	.LASF60
 2337 05a5 01       		.byte	0x1
 2338 05a6 B103     		.2byte	0x3b1
 2339 05a8 6B000000 		.4byte	0x6b
 2340 05ac 01       		.uleb128 0x1
 2341 05ad 51       		.byte	0x51
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 93


 2342 05ae 00       		.byte	0
 2343 05af 15       		.uleb128 0x15
 2344 05b0 14070000 		.4byte	.LASF67
 2345 05b4 01       		.byte	0x1
 2346 05b5 CD03     		.2byte	0x3cd
 2347 05b7 00000000 		.4byte	.LFB50
 2348 05bb 0C000000 		.4byte	.LFE50-.LFB50
 2349 05bf 01       		.uleb128 0x1
 2350 05c0 9C       		.byte	0x9c
 2351 05c1 E2050000 		.4byte	0x5e2
 2352 05c5 1A       		.uleb128 0x1a
 2353 05c6 0E030000 		.4byte	.LASF52
 2354 05ca 01       		.byte	0x1
 2355 05cb CD03     		.2byte	0x3cd
 2356 05cd 83000000 		.4byte	0x83
 2357 05d1 01       		.uleb128 0x1
 2358 05d2 50       		.byte	0x50
 2359 05d3 1A       		.uleb128 0x1a
 2360 05d4 9D030000 		.4byte	.LASF60
 2361 05d8 01       		.byte	0x1
 2362 05d9 CD03     		.2byte	0x3cd
 2363 05db 6B000000 		.4byte	0x6b
 2364 05df 01       		.uleb128 0x1
 2365 05e0 51       		.byte	0x51
 2366 05e1 00       		.byte	0
 2367 05e2 15       		.uleb128 0x15
 2368 05e3 EA060000 		.4byte	.LASF68
 2369 05e7 01       		.byte	0x1
 2370 05e8 EA03     		.2byte	0x3ea
 2371 05ea 00000000 		.4byte	.LFB51
 2372 05ee 0C000000 		.4byte	.LFE51-.LFB51
 2373 05f2 01       		.uleb128 0x1
 2374 05f3 9C       		.byte	0x9c
 2375 05f4 15060000 		.4byte	0x615
 2376 05f8 1A       		.uleb128 0x1a
 2377 05f9 0E030000 		.4byte	.LASF52
 2378 05fd 01       		.byte	0x1
 2379 05fe EA03     		.2byte	0x3ea
 2380 0600 83000000 		.4byte	0x83
 2381 0604 01       		.uleb128 0x1
 2382 0605 50       		.byte	0x50
 2383 0606 1A       		.uleb128 0x1a
 2384 0607 9D030000 		.4byte	.LASF60
 2385 060b 01       		.byte	0x1
 2386 060c EA03     		.2byte	0x3ea
 2387 060e 6B000000 		.4byte	0x6b
 2388 0612 01       		.uleb128 0x1
 2389 0613 51       		.byte	0x51
 2390 0614 00       		.byte	0
 2391 0615 15       		.uleb128 0x15
 2392 0616 62080000 		.4byte	.LASF69
 2393 061a 01       		.byte	0x1
 2394 061b 0604     		.2byte	0x406
 2395 061d 00000000 		.4byte	.LFB52
 2396 0621 0C000000 		.4byte	.LFE52-.LFB52
 2397 0625 01       		.uleb128 0x1
 2398 0626 9C       		.byte	0x9c
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 94


 2399 0627 48060000 		.4byte	0x648
 2400 062b 1A       		.uleb128 0x1a
 2401 062c 0E030000 		.4byte	.LASF52
 2402 0630 01       		.byte	0x1
 2403 0631 0604     		.2byte	0x406
 2404 0633 83000000 		.4byte	0x83
 2405 0637 01       		.uleb128 0x1
 2406 0638 50       		.byte	0x50
 2407 0639 1A       		.uleb128 0x1a
 2408 063a 9D030000 		.4byte	.LASF60
 2409 063e 01       		.byte	0x1
 2410 063f 0604     		.2byte	0x406
 2411 0641 6B000000 		.4byte	0x6b
 2412 0645 01       		.uleb128 0x1
 2413 0646 51       		.byte	0x51
 2414 0647 00       		.byte	0
 2415 0648 15       		.uleb128 0x15
 2416 0649 01090000 		.4byte	.LASF70
 2417 064d 01       		.byte	0x1
 2418 064e 2204     		.2byte	0x422
 2419 0650 00000000 		.4byte	.LFB53
 2420 0654 0C000000 		.4byte	.LFE53-.LFB53
 2421 0658 01       		.uleb128 0x1
 2422 0659 9C       		.byte	0x9c
 2423 065a 7D060000 		.4byte	0x67d
 2424 065e 19       		.uleb128 0x19
 2425 065f 5D050000 		.4byte	.LASF50
 2426 0663 01       		.byte	0x1
 2427 0664 2204     		.2byte	0x422
 2428 0666 83000000 		.4byte	0x83
 2429 066a AD010000 		.4byte	.LLST14
 2430 066e 1A       		.uleb128 0x1a
 2431 066f 9D030000 		.4byte	.LASF60
 2432 0673 01       		.byte	0x1
 2433 0674 2204     		.2byte	0x422
 2434 0676 6B000000 		.4byte	0x6b
 2435 067a 01       		.uleb128 0x1
 2436 067b 51       		.byte	0x51
 2437 067c 00       		.byte	0
 2438 067d 18       		.uleb128 0x18
 2439 067e 56060000 		.4byte	.LASF71
 2440 0682 01       		.byte	0x1
 2441 0683 5004     		.2byte	0x450
 2442 0685 83000000 		.4byte	0x83
 2443 0689 00000000 		.4byte	.LFB54
 2444 068d A8000000 		.4byte	.LFE54-.LFB54
 2445 0691 01       		.uleb128 0x1
 2446 0692 9C       		.byte	0x9c
 2447 0693 67070000 		.4byte	0x767
 2448 0697 19       		.uleb128 0x19
 2449 0698 5D050000 		.4byte	.LASF50
 2450 069c 01       		.byte	0x1
 2451 069d 5004     		.2byte	0x450
 2452 069f 83000000 		.4byte	0x83
 2453 06a3 CE010000 		.4byte	.LLST15
 2454 06a7 1B       		.uleb128 0x1b
 2455 06a8 0E030000 		.4byte	.LASF52
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 95


 2456 06ac 01       		.byte	0x1
 2457 06ad 5204     		.2byte	0x452
 2458 06af 6B000000 		.4byte	0x6b
 2459 06b3 17       		.uleb128 0x17
 2460 06b4 42060000 		.4byte	.LASF72
 2461 06b8 01       		.byte	0x1
 2462 06b9 5304     		.2byte	0x453
 2463 06bb 6B000000 		.4byte	0x6b
 2464 06bf 05020000 		.4byte	.LLST16
 2465 06c3 1B       		.uleb128 0x1b
 2466 06c4 BA080000 		.4byte	.LASF73
 2467 06c8 01       		.byte	0x1
 2468 06c9 5404     		.2byte	0x454
 2469 06cb 6B000000 		.4byte	0x6b
 2470 06cf 17       		.uleb128 0x17
 2471 06d0 77080000 		.4byte	.LASF74
 2472 06d4 01       		.byte	0x1
 2473 06d5 5604     		.2byte	0x456
 2474 06d7 6B000000 		.4byte	0x6b
 2475 06db 18020000 		.4byte	.LLST17
 2476 06df 17       		.uleb128 0x17
 2477 06e0 94040000 		.4byte	.LASF75
 2478 06e4 01       		.byte	0x1
 2479 06e5 5704     		.2byte	0x457
 2480 06e7 6B000000 		.4byte	0x6b
 2481 06eb 2B020000 		.4byte	.LLST18
 2482 06ef 10       		.uleb128 0x10
 2483 06f0 24000000 		.4byte	.LVL50
 2484 06f4 C60D0000 		.4byte	0xdc6
 2485 06f8 0C070000 		.4byte	0x70c
 2486 06fc 11       		.uleb128 0x11
 2487 06fd 01       		.uleb128 0x1
 2488 06fe 50       		.byte	0x50
 2489 06ff 05       		.uleb128 0x5
 2490 0700 03       		.byte	0x3
 2491 0701 18000000 		.4byte	.LANCHOR0+24
 2492 0705 11       		.uleb128 0x11
 2493 0706 01       		.uleb128 0x1
 2494 0707 51       		.byte	0x51
 2495 0708 02       		.uleb128 0x2
 2496 0709 74       		.byte	0x74
 2497 070a 00       		.sleb128 0
 2498 070b 00       		.byte	0
 2499 070c 10       		.uleb128 0x10
 2500 070d 42000000 		.4byte	.LVL52
 2501 0711 D10D0000 		.4byte	0xdd1
 2502 0715 2B070000 		.4byte	0x72b
 2503 0719 11       		.uleb128 0x11
 2504 071a 01       		.uleb128 0x1
 2505 071b 50       		.byte	0x50
 2506 071c 02       		.uleb128 0x2
 2507 071d 76       		.byte	0x76
 2508 071e 18       		.sleb128 24
 2509 071f 11       		.uleb128 0x11
 2510 0720 01       		.uleb128 0x1
 2511 0721 51       		.byte	0x51
 2512 0722 02       		.uleb128 0x2
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 96


 2513 0723 74       		.byte	0x74
 2514 0724 00       		.sleb128 0
 2515 0725 11       		.uleb128 0x11
 2516 0726 01       		.uleb128 0x1
 2517 0727 52       		.byte	0x52
 2518 0728 01       		.uleb128 0x1
 2519 0729 30       		.byte	0x30
 2520 072a 00       		.byte	0
 2521 072b 10       		.uleb128 0x10
 2522 072c 72000000 		.4byte	.LVL55
 2523 0730 D10D0000 		.4byte	0xdd1
 2524 0734 4D070000 		.4byte	0x74d
 2525 0738 11       		.uleb128 0x11
 2526 0739 01       		.uleb128 0x1
 2527 073a 50       		.byte	0x50
 2528 073b 05       		.uleb128 0x5
 2529 073c 03       		.byte	0x3
 2530 073d 18000000 		.4byte	.LANCHOR0+24
 2531 0741 11       		.uleb128 0x11
 2532 0742 01       		.uleb128 0x1
 2533 0743 51       		.byte	0x51
 2534 0744 02       		.uleb128 0x2
 2535 0745 74       		.byte	0x74
 2536 0746 00       		.sleb128 0
 2537 0747 11       		.uleb128 0x11
 2538 0748 01       		.uleb128 0x1
 2539 0749 52       		.byte	0x52
 2540 074a 01       		.uleb128 0x1
 2541 074b 31       		.byte	0x31
 2542 074c 00       		.byte	0
 2543 074d 13       		.uleb128 0x13
 2544 074e 86000000 		.4byte	.LVL56
 2545 0752 C60D0000 		.4byte	0xdc6
 2546 0756 11       		.uleb128 0x11
 2547 0757 01       		.uleb128 0x1
 2548 0758 50       		.byte	0x50
 2549 0759 05       		.uleb128 0x5
 2550 075a 03       		.byte	0x3
 2551 075b 18000000 		.4byte	.LANCHOR0+24
 2552 075f 11       		.uleb128 0x11
 2553 0760 01       		.uleb128 0x1
 2554 0761 51       		.byte	0x51
 2555 0762 02       		.uleb128 0x2
 2556 0763 74       		.byte	0x74
 2557 0764 00       		.sleb128 0
 2558 0765 00       		.byte	0
 2559 0766 00       		.byte	0
 2560 0767 18       		.uleb128 0x18
 2561 0768 090A0000 		.4byte	.LASF76
 2562 076c 01       		.byte	0x1
 2563 076d A204     		.2byte	0x4a2
 2564 076f 83000000 		.4byte	0x83
 2565 0773 00000000 		.4byte	.LFB55
 2566 0777 28000000 		.4byte	.LFE55-.LFB55
 2567 077b 01       		.uleb128 0x1
 2568 077c 9C       		.byte	0x9c
 2569 077d D2070000 		.4byte	0x7d2
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 97


 2570 0781 19       		.uleb128 0x19
 2571 0782 0E030000 		.4byte	.LASF52
 2572 0786 01       		.byte	0x1
 2573 0787 A204     		.2byte	0x4a2
 2574 0789 83000000 		.4byte	0x83
 2575 078d 49020000 		.4byte	.LLST19
 2576 0791 17       		.uleb128 0x17
 2577 0792 DC050000 		.4byte	.LASF77
 2578 0796 01       		.byte	0x1
 2579 0797 A404     		.2byte	0x4a4
 2580 0799 83000000 		.4byte	0x83
 2581 079d 6A020000 		.4byte	.LLST20
 2582 07a1 17       		.uleb128 0x17
 2583 07a2 0B010000 		.4byte	.LASF78
 2584 07a6 01       		.byte	0x1
 2585 07a7 A504     		.2byte	0x4a5
 2586 07a9 83000000 		.4byte	0x83
 2587 07ad 7D020000 		.4byte	.LLST21
 2588 07b1 17       		.uleb128 0x17
 2589 07b2 7E090000 		.4byte	.LASF79
 2590 07b6 01       		.byte	0x1
 2591 07b7 A604     		.2byte	0x4a6
 2592 07b9 83000000 		.4byte	0x83
 2593 07bd B8020000 		.4byte	.LLST22
 2594 07c1 13       		.uleb128 0x13
 2595 07c2 14000000 		.4byte	.LVL65
 2596 07c6 7D060000 		.4byte	0x67d
 2597 07ca 11       		.uleb128 0x11
 2598 07cb 01       		.uleb128 0x1
 2599 07cc 50       		.byte	0x50
 2600 07cd 02       		.uleb128 0x2
 2601 07ce 74       		.byte	0x74
 2602 07cf 00       		.sleb128 0
 2603 07d0 00       		.byte	0
 2604 07d1 00       		.byte	0
 2605 07d2 18       		.uleb128 0x18
 2606 07d3 D4040000 		.4byte	.LASF80
 2607 07d7 01       		.byte	0x1
 2608 07d8 D004     		.2byte	0x4d0
 2609 07da 83000000 		.4byte	0x83
 2610 07de 00000000 		.4byte	.LFB56
 2611 07e2 1E000000 		.4byte	.LFE56-.LFB56
 2612 07e6 01       		.uleb128 0x1
 2613 07e7 9C       		.byte	0x9c
 2614 07e8 1B080000 		.4byte	0x81b
 2615 07ec 16       		.uleb128 0x16
 2616 07ed 6900     		.ascii	"i\000"
 2617 07ef 01       		.byte	0x1
 2618 07f0 D304     		.2byte	0x4d3
 2619 07f2 83000000 		.4byte	0x83
 2620 07f6 E2020000 		.4byte	.LLST23
 2621 07fa 17       		.uleb128 0x17
 2622 07fb 7E090000 		.4byte	.LASF79
 2623 07ff 01       		.byte	0x1
 2624 0800 D404     		.2byte	0x4d4
 2625 0802 83000000 		.4byte	0x83
 2626 0806 01030000 		.4byte	.LLST24
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 98


 2627 080a 13       		.uleb128 0x13
 2628 080b 0E000000 		.4byte	.LVL73
 2629 080f 67070000 		.4byte	0x767
 2630 0813 11       		.uleb128 0x11
 2631 0814 01       		.uleb128 0x1
 2632 0815 50       		.byte	0x50
 2633 0816 02       		.uleb128 0x2
 2634 0817 74       		.byte	0x74
 2635 0818 00       		.sleb128 0
 2636 0819 00       		.byte	0
 2637 081a 00       		.byte	0
 2638 081b 15       		.uleb128 0x15
 2639 081c 74050000 		.4byte	.LASF81
 2640 0820 01       		.byte	0x1
 2641 0821 FF04     		.2byte	0x4ff
 2642 0823 00000000 		.4byte	.LFB57
 2643 0827 2C000000 		.4byte	.LFE57-.LFB57
 2644 082b 01       		.uleb128 0x1
 2645 082c 9C       		.byte	0x9c
 2646 082d 77080000 		.4byte	0x877
 2647 0831 19       		.uleb128 0x19
 2648 0832 0E030000 		.4byte	.LASF52
 2649 0836 01       		.byte	0x1
 2650 0837 FF04     		.2byte	0x4ff
 2651 0839 83000000 		.4byte	0x83
 2652 083d 2B030000 		.4byte	.LLST25
 2653 0841 17       		.uleb128 0x17
 2654 0842 DC050000 		.4byte	.LASF77
 2655 0846 01       		.byte	0x1
 2656 0847 0205     		.2byte	0x502
 2657 0849 6B000000 		.4byte	0x6b
 2658 084d 4C030000 		.4byte	.LLST26
 2659 0851 17       		.uleb128 0x17
 2660 0852 0B010000 		.4byte	.LASF78
 2661 0856 01       		.byte	0x1
 2662 0857 0305     		.2byte	0x503
 2663 0859 6B000000 		.4byte	0x6b
 2664 085d 6A030000 		.4byte	.LLST27
 2665 0861 13       		.uleb128 0x13
 2666 0862 18000000 		.4byte	.LVL82
 2667 0866 D10D0000 		.4byte	0xdd1
 2668 086a 11       		.uleb128 0x11
 2669 086b 01       		.uleb128 0x1
 2670 086c 51       		.byte	0x51
 2671 086d 02       		.uleb128 0x2
 2672 086e 74       		.byte	0x74
 2673 086f 00       		.sleb128 0
 2674 0870 11       		.uleb128 0x11
 2675 0871 01       		.uleb128 0x1
 2676 0872 52       		.byte	0x52
 2677 0873 01       		.uleb128 0x1
 2678 0874 31       		.byte	0x31
 2679 0875 00       		.byte	0
 2680 0876 00       		.byte	0
 2681 0877 15       		.uleb128 0x15
 2682 0878 B4000000 		.4byte	.LASF82
 2683 087c 01       		.byte	0x1
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 99


 2684 087d 2A05     		.2byte	0x52a
 2685 087f 00000000 		.4byte	.LFB58
 2686 0883 2C000000 		.4byte	.LFE58-.LFB58
 2687 0887 01       		.uleb128 0x1
 2688 0888 9C       		.byte	0x9c
 2689 0889 D3080000 		.4byte	0x8d3
 2690 088d 19       		.uleb128 0x19
 2691 088e 0E030000 		.4byte	.LASF52
 2692 0892 01       		.byte	0x1
 2693 0893 2A05     		.2byte	0x52a
 2694 0895 83000000 		.4byte	0x83
 2695 0899 A5030000 		.4byte	.LLST28
 2696 089d 17       		.uleb128 0x17
 2697 089e DC050000 		.4byte	.LASF77
 2698 08a2 01       		.byte	0x1
 2699 08a3 2C05     		.2byte	0x52c
 2700 08a5 6B000000 		.4byte	0x6b
 2701 08a9 C6030000 		.4byte	.LLST29
 2702 08ad 17       		.uleb128 0x17
 2703 08ae 0B010000 		.4byte	.LASF78
 2704 08b2 01       		.byte	0x1
 2705 08b3 2D05     		.2byte	0x52d
 2706 08b5 6B000000 		.4byte	0x6b
 2707 08b9 E4030000 		.4byte	.LLST30
 2708 08bd 13       		.uleb128 0x13
 2709 08be 18000000 		.4byte	.LVL91
 2710 08c2 D10D0000 		.4byte	0xdd1
 2711 08c6 11       		.uleb128 0x11
 2712 08c7 01       		.uleb128 0x1
 2713 08c8 51       		.byte	0x51
 2714 08c9 02       		.uleb128 0x2
 2715 08ca 74       		.byte	0x74
 2716 08cb 00       		.sleb128 0
 2717 08cc 11       		.uleb128 0x11
 2718 08cd 01       		.uleb128 0x1
 2719 08ce 52       		.byte	0x52
 2720 08cf 01       		.uleb128 0x1
 2721 08d0 30       		.byte	0x30
 2722 08d1 00       		.byte	0
 2723 08d2 00       		.byte	0
 2724 08d3 18       		.uleb128 0x18
 2725 08d4 D6090000 		.4byte	.LASF83
 2726 08d8 01       		.byte	0x1
 2727 08d9 4609     		.2byte	0x946
 2728 08db 77000000 		.4byte	0x77
 2729 08df 00000000 		.4byte	.LFB59
 2730 08e3 1C000000 		.4byte	.LFE59-.LFB59
 2731 08e7 01       		.uleb128 0x1
 2732 08e8 9C       		.byte	0x9c
 2733 08e9 25090000 		.4byte	0x925
 2734 08ed 1C       		.uleb128 0x1c
 2735 08ee 783100   		.ascii	"x1\000"
 2736 08f1 01       		.byte	0x1
 2737 08f2 4609     		.2byte	0x946
 2738 08f4 77000000 		.4byte	0x77
 2739 08f8 1F040000 		.4byte	.LLST31
 2740 08fc 1C       		.uleb128 0x1c
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 100


 2741 08fd 783200   		.ascii	"x2\000"
 2742 0900 01       		.byte	0x1
 2743 0901 4609     		.2byte	0x946
 2744 0903 77000000 		.4byte	0x77
 2745 0907 4B040000 		.4byte	.LLST32
 2746 090b 1D       		.uleb128 0x1d
 2747 090c 783300   		.ascii	"x3\000"
 2748 090f 01       		.byte	0x1
 2749 0910 4609     		.2byte	0x946
 2750 0912 77000000 		.4byte	0x77
 2751 0916 01       		.uleb128 0x1
 2752 0917 52       		.byte	0x52
 2753 0918 1E       		.uleb128 0x1e
 2754 0919 746D7000 		.ascii	"tmp\000"
 2755 091d 01       		.byte	0x1
 2756 091e 4809     		.2byte	0x948
 2757 0920 77000000 		.4byte	0x77
 2758 0924 00       		.byte	0
 2759 0925 18       		.uleb128 0x18
 2760 0926 1B000000 		.4byte	.LASF84
 2761 092a 01       		.byte	0x1
 2762 092b BE09     		.2byte	0x9be
 2763 092d 77000000 		.4byte	0x77
 2764 0931 00000000 		.4byte	.LFB60
 2765 0935 0C000000 		.4byte	.LFE60-.LFB60
 2766 0939 01       		.uleb128 0x1
 2767 093a 9C       		.byte	0x9c
 2768 093b 6E090000 		.4byte	0x96e
 2769 093f 1C       		.uleb128 0x1c
 2770 0940 783100   		.ascii	"x1\000"
 2771 0943 01       		.byte	0x1
 2772 0944 BE09     		.2byte	0x9be
 2773 0946 77000000 		.4byte	0x77
 2774 094a 69040000 		.4byte	.LLST33
 2775 094e 1C       		.uleb128 0x1c
 2776 094f 783200   		.ascii	"x2\000"
 2777 0952 01       		.byte	0x1
 2778 0953 BE09     		.2byte	0x9be
 2779 0955 77000000 		.4byte	0x77
 2780 0959 8A040000 		.4byte	.LLST34
 2781 095d 16       		.uleb128 0x16
 2782 095e 746D7000 		.ascii	"tmp\000"
 2783 0962 01       		.byte	0x1
 2784 0963 C009     		.2byte	0x9c0
 2785 0965 83000000 		.4byte	0x83
 2786 0969 AB040000 		.4byte	.LLST35
 2787 096d 00       		.byte	0
 2788 096e 15       		.uleb128 0x15
 2789 096f 72000000 		.4byte	.LASF85
 2790 0973 01       		.byte	0x1
 2791 0974 6101     		.2byte	0x161
 2792 0976 00000000 		.4byte	.LFB36
 2793 097a 20010000 		.4byte	.LFE36-.LFB36
 2794 097e 01       		.uleb128 0x1
 2795 097f 9C       		.byte	0x9c
 2796 0980 280A0000 		.4byte	0xa28
 2797 0984 19       		.uleb128 0x19
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 101


 2798 0985 5D050000 		.4byte	.LASF50
 2799 0989 01       		.byte	0x1
 2800 098a 6101     		.2byte	0x161
 2801 098c 83000000 		.4byte	0x83
 2802 0990 BE040000 		.4byte	.LLST36
 2803 0994 17       		.uleb128 0x17
 2804 0995 7E040000 		.4byte	.LASF86
 2805 0999 01       		.byte	0x1
 2806 099a 6301     		.2byte	0x163
 2807 099c 83000000 		.4byte	0x83
 2808 09a0 1C050000 		.4byte	.LLST37
 2809 09a4 17       		.uleb128 0x17
 2810 09a5 68040000 		.4byte	.LASF87
 2811 09a9 01       		.byte	0x1
 2812 09aa 6401     		.2byte	0x164
 2813 09ac 83000000 		.4byte	0x83
 2814 09b0 50050000 		.4byte	.LLST38
 2815 09b4 17       		.uleb128 0x17
 2816 09b5 EC090000 		.4byte	.LASF88
 2817 09b9 01       		.byte	0x1
 2818 09ba 6501     		.2byte	0x165
 2819 09bc 77000000 		.4byte	0x77
 2820 09c0 A7050000 		.4byte	.LLST39
 2821 09c4 17       		.uleb128 0x17
 2822 09c5 B3040000 		.4byte	.LASF89
 2823 09c9 01       		.byte	0x1
 2824 09ca 6601     		.2byte	0x166
 2825 09cc 77000000 		.4byte	0x77
 2826 09d0 C5050000 		.4byte	.LLST40
 2827 09d4 1B       		.uleb128 0x1b
 2828 09d5 0E030000 		.4byte	.LASF52
 2829 09d9 01       		.byte	0x1
 2830 09da 6701     		.2byte	0x167
 2831 09dc 6B000000 		.4byte	0x6b
 2832 09e0 1F       		.uleb128 0x1f
 2833 09e1 41080000 		.4byte	.LASF90
 2834 09e5 01       		.byte	0x1
 2835 09e6 6801     		.2byte	0x168
 2836 09e8 6B000000 		.4byte	0x6b
 2837 09ec 02       		.uleb128 0x2
 2838 09ed 91       		.byte	0x91
 2839 09ee 64       		.sleb128 -28
 2840 09ef 10       		.uleb128 0x10
 2841 09f0 2E000000 		.4byte	.LVL111
 2842 09f4 25090000 		.4byte	0x925
 2843 09f8 030A0000 		.4byte	0xa03
 2844 09fc 11       		.uleb128 0x11
 2845 09fd 01       		.uleb128 0x1
 2846 09fe 50       		.byte	0x50
 2847 09ff 02       		.uleb128 0x2
 2848 0a00 77       		.byte	0x77
 2849 0a01 00       		.sleb128 0
 2850 0a02 00       		.byte	0
 2851 0a03 10       		.uleb128 0x10
 2852 0a04 3E000000 		.4byte	.LVL114
 2853 0a08 DC0D0000 		.4byte	0xddc
 2854 0a0c 170A0000 		.4byte	0xa17
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 102


 2855 0a10 11       		.uleb128 0x11
 2856 0a11 01       		.uleb128 0x1
 2857 0a12 51       		.byte	0x51
 2858 0a13 02       		.uleb128 0x2
 2859 0a14 74       		.byte	0x74
 2860 0a15 00       		.sleb128 0
 2861 0a16 00       		.byte	0
 2862 0a17 13       		.uleb128 0x13
 2863 0a18 82000000 		.4byte	.LVL119
 2864 0a1c B9020000 		.4byte	0x2b9
 2865 0a20 11       		.uleb128 0x11
 2866 0a21 01       		.uleb128 0x1
 2867 0a22 50       		.byte	0x50
 2868 0a23 02       		.uleb128 0x2
 2869 0a24 74       		.byte	0x74
 2870 0a25 00       		.sleb128 0
 2871 0a26 00       		.byte	0
 2872 0a27 00       		.byte	0
 2873 0a28 15       		.uleb128 0x15
 2874 0a29 7D060000 		.4byte	.LASF91
 2875 0a2d 01       		.byte	0x1
 2876 0a2e 2102     		.2byte	0x221
 2877 0a30 00000000 		.4byte	.LFB37
 2878 0a34 10000000 		.4byte	.LFE37-.LFB37
 2879 0a38 01       		.uleb128 0x1
 2880 0a39 9C       		.byte	0x9c
 2881 0a3a 730A0000 		.4byte	0xa73
 2882 0a3e 19       		.uleb128 0x19
 2883 0a3f 5D050000 		.4byte	.LASF50
 2884 0a43 01       		.byte	0x1
 2885 0a44 2102     		.2byte	0x221
 2886 0a46 83000000 		.4byte	0x83
 2887 0a4a EE050000 		.4byte	.LLST41
 2888 0a4e 10       		.uleb128 0x10
 2889 0a4f 08000000 		.4byte	.LVL137
 2890 0a53 E70D0000 		.4byte	0xde7
 2891 0a57 620A0000 		.4byte	0xa62
 2892 0a5b 11       		.uleb128 0x11
 2893 0a5c 01       		.uleb128 0x1
 2894 0a5d 50       		.byte	0x50
 2895 0a5e 02       		.uleb128 0x2
 2896 0a5f 74       		.byte	0x74
 2897 0a60 00       		.sleb128 0
 2898 0a61 00       		.byte	0
 2899 0a62 13       		.uleb128 0x13
 2900 0a63 0E000000 		.4byte	.LVL138
 2901 0a67 6E090000 		.4byte	0x96e
 2902 0a6b 11       		.uleb128 0x11
 2903 0a6c 01       		.uleb128 0x1
 2904 0a6d 50       		.byte	0x50
 2905 0a6e 02       		.uleb128 0x2
 2906 0a6f 74       		.byte	0x74
 2907 0a70 00       		.sleb128 0
 2908 0a71 00       		.byte	0
 2909 0a72 00       		.byte	0
 2910 0a73 15       		.uleb128 0x15
 2911 0a74 CB000000 		.4byte	.LASF92
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 103


 2912 0a78 01       		.byte	0x1
 2913 0a79 5702     		.2byte	0x257
 2914 0a7b 00000000 		.4byte	.LFB38
 2915 0a7f 24000000 		.4byte	.LFE38-.LFB38
 2916 0a83 01       		.uleb128 0x1
 2917 0a84 9C       		.byte	0x9c
 2918 0a85 CC0A0000 		.4byte	0xacc
 2919 0a89 16       		.uleb128 0x16
 2920 0a8a 6900     		.ascii	"i\000"
 2921 0a8c 01       		.byte	0x1
 2922 0a8d 5902     		.2byte	0x259
 2923 0a8f 83000000 		.4byte	0x83
 2924 0a93 1A060000 		.4byte	.LLST42
 2925 0a97 17       		.uleb128 0x17
 2926 0a98 FB000000 		.4byte	.LASF54
 2927 0a9c 01       		.byte	0x1
 2928 0a9d 5A02     		.2byte	0x25a
 2929 0a9f 83000000 		.4byte	0x83
 2930 0aa3 39060000 		.4byte	.LLST43
 2931 0aa7 10       		.uleb128 0x10
 2932 0aa8 0E000000 		.4byte	.LVL142
 2933 0aac C60D0000 		.4byte	0xdc6
 2934 0ab0 BB0A0000 		.4byte	0xabb
 2935 0ab4 11       		.uleb128 0x11
 2936 0ab5 01       		.uleb128 0x1
 2937 0ab6 51       		.byte	0x51
 2938 0ab7 02       		.uleb128 0x2
 2939 0ab8 74       		.byte	0x74
 2940 0ab9 00       		.sleb128 0
 2941 0aba 00       		.byte	0
 2942 0abb 13       		.uleb128 0x13
 2943 0abc 18000000 		.4byte	.LVL144
 2944 0ac0 280A0000 		.4byte	0xa28
 2945 0ac4 11       		.uleb128 0x11
 2946 0ac5 01       		.uleb128 0x1
 2947 0ac6 50       		.byte	0x50
 2948 0ac7 02       		.uleb128 0x2
 2949 0ac8 74       		.byte	0x74
 2950 0ac9 00       		.sleb128 0
 2951 0aca 00       		.byte	0
 2952 0acb 00       		.byte	0
 2953 0acc 15       		.uleb128 0x15
 2954 0acd 66020000 		.4byte	.LASF93
 2955 0ad1 01       		.byte	0x1
 2956 0ad2 8402     		.2byte	0x284
 2957 0ad4 00000000 		.4byte	.LFB39
 2958 0ad8 30000000 		.4byte	.LFE39-.LFB39
 2959 0adc 01       		.uleb128 0x1
 2960 0add 9C       		.byte	0x9c
 2961 0ade 650B0000 		.4byte	0xb65
 2962 0ae2 19       		.uleb128 0x19
 2963 0ae3 0E030000 		.4byte	.LASF52
 2964 0ae7 01       		.byte	0x1
 2965 0ae8 8402     		.2byte	0x284
 2966 0aea 83000000 		.4byte	0x83
 2967 0aee 4C060000 		.4byte	.LLST44
 2968 0af2 17       		.uleb128 0x17
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 104


 2969 0af3 C3040000 		.4byte	.LASF94
 2970 0af7 01       		.byte	0x1
 2971 0af8 8602     		.2byte	0x286
 2972 0afa 83000000 		.4byte	0x83
 2973 0afe 6D060000 		.4byte	.LLST45
 2974 0b02 17       		.uleb128 0x17
 2975 0b03 94070000 		.4byte	.LASF95
 2976 0b07 01       		.byte	0x1
 2977 0b08 8702     		.2byte	0x287
 2978 0b0a 83000000 		.4byte	0x83
 2979 0b0e AB060000 		.4byte	.LLST46
 2980 0b12 17       		.uleb128 0x17
 2981 0b13 59070000 		.4byte	.LASF96
 2982 0b17 01       		.byte	0x1
 2983 0b18 8802     		.2byte	0x288
 2984 0b1a 83000000 		.4byte	0x83
 2985 0b1e D7060000 		.4byte	.LLST47
 2986 0b22 16       		.uleb128 0x16
 2987 0b23 6900     		.ascii	"i\000"
 2988 0b25 01       		.byte	0x1
 2989 0b26 8902     		.2byte	0x289
 2990 0b28 83000000 		.4byte	0x83
 2991 0b2c 12070000 		.4byte	.LLST48
 2992 0b30 17       		.uleb128 0x17
 2993 0b31 FB000000 		.4byte	.LASF54
 2994 0b35 01       		.byte	0x1
 2995 0b36 8A02     		.2byte	0x28a
 2996 0b38 83000000 		.4byte	0x83
 2997 0b3c 25070000 		.4byte	.LLST49
 2998 0b40 10       		.uleb128 0x10
 2999 0b41 16000000 		.4byte	.LVL152
 3000 0b45 C60D0000 		.4byte	0xdc6
 3001 0b49 540B0000 		.4byte	0xb54
 3002 0b4d 11       		.uleb128 0x11
 3003 0b4e 01       		.uleb128 0x1
 3004 0b4f 51       		.byte	0x51
 3005 0b50 02       		.uleb128 0x2
 3006 0b51 74       		.byte	0x74
 3007 0b52 00       		.sleb128 0
 3008 0b53 00       		.byte	0
 3009 0b54 13       		.uleb128 0x13
 3010 0b55 20000000 		.4byte	.LVL154
 3011 0b59 280A0000 		.4byte	0xa28
 3012 0b5d 11       		.uleb128 0x11
 3013 0b5e 01       		.uleb128 0x1
 3014 0b5f 50       		.byte	0x50
 3015 0b60 02       		.uleb128 0x2
 3016 0b61 74       		.byte	0x74
 3017 0b62 00       		.sleb128 0
 3018 0b63 00       		.byte	0
 3019 0b64 00       		.byte	0
 3020 0b65 18       		.uleb128 0x18
 3021 0b66 29060000 		.4byte	.LASF97
 3022 0b6a 01       		.byte	0x1
 3023 0b6b A70A     		.2byte	0xaa7
 3024 0b6d 83000000 		.4byte	0x83
 3025 0b71 00000000 		.4byte	.LFB61
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 105


 3026 0b75 0C000000 		.4byte	.LFE61-.LFB61
 3027 0b79 01       		.uleb128 0x1
 3028 0b7a 9C       		.byte	0x9c
 3029 0b7b 900B0000 		.4byte	0xb90
 3030 0b7f 19       		.uleb128 0x19
 3031 0b80 5D050000 		.4byte	.LASF50
 3032 0b84 01       		.byte	0x1
 3033 0b85 A70A     		.2byte	0xaa7
 3034 0b87 83000000 		.4byte	0x83
 3035 0b8b 38070000 		.4byte	.LLST50
 3036 0b8f 00       		.byte	0
 3037 0b90 18       		.uleb128 0x18
 3038 0b91 CD060000 		.4byte	.LASF98
 3039 0b95 01       		.byte	0x1
 3040 0b96 C10A     		.2byte	0xac1
 3041 0b98 6B000000 		.4byte	0x6b
 3042 0b9c 00000000 		.4byte	.LFB62
 3043 0ba0 0C000000 		.4byte	.LFE62-.LFB62
 3044 0ba4 01       		.uleb128 0x1
 3045 0ba5 9C       		.byte	0x9c
 3046 0ba6 BB0B0000 		.4byte	0xbbb
 3047 0baa 19       		.uleb128 0x19
 3048 0bab 5D050000 		.4byte	.LASF50
 3049 0baf 01       		.byte	0x1
 3050 0bb0 C10A     		.2byte	0xac1
 3051 0bb2 83000000 		.4byte	0x83
 3052 0bb6 59070000 		.4byte	.LLST51
 3053 0bba 00       		.byte	0
 3054 0bbb 18       		.uleb128 0x18
 3055 0bbc F4090000 		.4byte	.LASF99
 3056 0bc0 01       		.byte	0x1
 3057 0bc1 DB0A     		.2byte	0xadb
 3058 0bc3 6B000000 		.4byte	0x6b
 3059 0bc7 00000000 		.4byte	.LFB63
 3060 0bcb 0C000000 		.4byte	.LFE63-.LFB63
 3061 0bcf 01       		.uleb128 0x1
 3062 0bd0 9C       		.byte	0x9c
 3063 0bd1 E60B0000 		.4byte	0xbe6
 3064 0bd5 19       		.uleb128 0x19
 3065 0bd6 0E030000 		.4byte	.LASF52
 3066 0bda 01       		.byte	0x1
 3067 0bdb DB0A     		.2byte	0xadb
 3068 0bdd 83000000 		.4byte	0x83
 3069 0be1 7A070000 		.4byte	.LLST52
 3070 0be5 00       		.byte	0
 3071 0be6 20       		.uleb128 0x20
 3072 0be7 C3070000 		.4byte	.LASF100
 3073 0beb 01       		.byte	0x1
 3074 0bec F50A     		.2byte	0xaf5
 3075 0bee 00000000 		.4byte	.LFB64
 3076 0bf2 0C000000 		.4byte	.LFE64-.LFB64
 3077 0bf6 01       		.uleb128 0x1
 3078 0bf7 9C       		.byte	0x9c
 3079 0bf8 20       		.uleb128 0x20
 3080 0bf9 7E030000 		.4byte	.LASF101
 3081 0bfd 01       		.byte	0x1
 3082 0bfe 0E0B     		.2byte	0xb0e
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 106


 3083 0c00 00000000 		.4byte	.LFB65
 3084 0c04 0C000000 		.4byte	.LFE65-.LFB65
 3085 0c08 01       		.uleb128 0x1
 3086 0c09 9C       		.byte	0x9c
 3087 0c0a 21       		.uleb128 0x21
 3088 0c0b 6B000000 		.4byte	0x6b
 3089 0c0f 1A0C0000 		.4byte	0xc1a
 3090 0c13 22       		.uleb128 0x22
 3091 0c14 A4000000 		.4byte	0xa4
 3092 0c18 04       		.byte	0x4
 3093 0c19 00       		.byte	0
 3094 0c1a 23       		.uleb128 0x23
 3095 0c1b 2F000000 		.4byte	.LASF102
 3096 0c1f 01       		.byte	0x1
 3097 0c20 55       		.byte	0x55
 3098 0c21 0A0C0000 		.4byte	0xc0a
 3099 0c25 05       		.uleb128 0x5
 3100 0c26 03       		.byte	0x3
 3101 0c27 10000000 		.4byte	CapSense_debounceCounter
 3102 0c2b 21       		.uleb128 0x21
 3103 0c2c 77000000 		.4byte	0x77
 3104 0c30 3B0C0000 		.4byte	0xc3b
 3105 0c34 22       		.uleb128 0x22
 3106 0c35 A4000000 		.4byte	0xa4
 3107 0c39 03       		.byte	0x3
 3108 0c3a 00       		.byte	0
 3109 0c3b 24       		.uleb128 0x24
 3110 0c3c BA060000 		.4byte	.LASF103
 3111 0c40 01       		.byte	0x1
 3112 0c41 2C       		.byte	0x2c
 3113 0c42 2B0C0000 		.4byte	0xc2b
 3114 0c46 21       		.uleb128 0x21
 3115 0c47 6B000000 		.4byte	0x6b
 3116 0c4b 560C0000 		.4byte	0xc56
 3117 0c4f 22       		.uleb128 0x22
 3118 0c50 A4000000 		.4byte	0xa4
 3119 0c54 00       		.byte	0
 3120 0c55 00       		.byte	0
 3121 0c56 24       		.uleb128 0x24
 3122 0c57 F4020000 		.4byte	.LASF104
 3123 0c5b 01       		.byte	0x1
 3124 0c5c 2D       		.byte	0x2d
 3125 0c5d 460C0000 		.4byte	0xc46
 3126 0c61 21       		.uleb128 0x21
 3127 0c62 DB010000 		.4byte	0x1db
 3128 0c66 710C0000 		.4byte	0xc71
 3129 0c6a 22       		.uleb128 0x22
 3130 0c6b A4000000 		.4byte	0xa4
 3131 0c6f 03       		.byte	0x3
 3132 0c70 00       		.byte	0
 3133 0c71 24       		.uleb128 0x24
 3134 0c72 4C030000 		.4byte	.LASF105
 3135 0c76 01       		.byte	0x1
 3136 0c77 2E       		.byte	0x2e
 3137 0c78 7C0C0000 		.4byte	0xc7c
 3138 0c7c 08       		.uleb128 0x8
 3139 0c7d 610C0000 		.4byte	0xc61
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 107


 3140 0c81 25       		.uleb128 0x25
 3141 0c82 05080000 		.4byte	.LASF106
 3142 0c86 01       		.byte	0x1
 3143 0c87 34       		.byte	0x34
 3144 0c88 2B0C0000 		.4byte	0xc2b
 3145 0c8c 05       		.uleb128 0x5
 3146 0c8d 03       		.byte	0x3
 3147 0c8e 00000000 		.4byte	CapSense_sensorBaseline
 3148 0c92 21       		.uleb128 0x21
 3149 0c93 6B000000 		.4byte	0x6b
 3150 0c97 A20C0000 		.4byte	0xca2
 3151 0c9b 22       		.uleb128 0x22
 3152 0c9c A4000000 		.4byte	0xa4
 3153 0ca0 03       		.byte	0x3
 3154 0ca1 00       		.byte	0
 3155 0ca2 25       		.uleb128 0x25
 3156 0ca3 00000000 		.4byte	.LASF107
 3157 0ca7 01       		.byte	0x1
 3158 0ca8 35       		.byte	0x35
 3159 0ca9 920C0000 		.4byte	0xc92
 3160 0cad 05       		.uleb128 0x5
 3161 0cae 03       		.byte	0x3
 3162 0caf 00000000 		.4byte	CapSense_sensorBaselineLow
 3163 0cb3 25       		.uleb128 0x25
 3164 0cb4 1F020000 		.4byte	.LASF108
 3165 0cb8 01       		.byte	0x1
 3166 0cb9 36       		.byte	0x36
 3167 0cba 920C0000 		.4byte	0xc92
 3168 0cbe 05       		.uleb128 0x5
 3169 0cbf 03       		.byte	0x3
 3170 0cc0 00000000 		.4byte	CapSense_sensorSignal
 3171 0cc4 25       		.uleb128 0x25
 3172 0cc5 770A0000 		.4byte	.LASF109
 3173 0cc9 01       		.byte	0x1
 3174 0cca 37       		.byte	0x37
 3175 0ccb 460C0000 		.4byte	0xc46
 3176 0ccf 05       		.uleb128 0x5
 3177 0cd0 03       		.byte	0x3
 3178 0cd1 00000000 		.4byte	CapSense_sensorOnMask
 3179 0cd5 25       		.uleb128 0x25
 3180 0cd6 55000000 		.4byte	.LASF110
 3181 0cda 01       		.byte	0x1
 3182 0cdb 39       		.byte	0x39
 3183 0cdc 920C0000 		.4byte	0xc92
 3184 0ce0 05       		.uleb128 0x5
 3185 0ce1 03       		.byte	0x3
 3186 0ce2 00000000 		.4byte	CapSense_lowBaselineResetCnt
 3187 0ce6 25       		.uleb128 0x25
 3188 0ce7 E1070000 		.4byte	.LASF111
 3189 0ceb 01       		.byte	0x1
 3190 0cec 3A       		.byte	0x3a
 3191 0ced 920C0000 		.4byte	0xc92
 3192 0cf1 05       		.uleb128 0x5
 3193 0cf2 03       		.byte	0x3
 3194 0cf3 00000000 		.4byte	CapSense_lowBaselineReset
 3195 0cf7 25       		.uleb128 0x25
 3196 0cf8 15030000 		.4byte	.LASF112
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 108


 3197 0cfc 01       		.byte	0x1
 3198 0cfd 49       		.byte	0x49
 3199 0cfe 920C0000 		.4byte	0xc92
 3200 0d02 05       		.uleb128 0x5
 3201 0d03 03       		.byte	0x3
 3202 0d04 00000000 		.4byte	CapSense_fingerThreshold
 3203 0d08 25       		.uleb128 0x25
 3204 0d09 A2080000 		.4byte	.LASF113
 3205 0d0d 01       		.byte	0x1
 3206 0d0e 4B       		.byte	0x4b
 3207 0d0f 920C0000 		.4byte	0xc92
 3208 0d13 05       		.uleb128 0x5
 3209 0d14 03       		.byte	0x3
 3210 0d15 00000000 		.4byte	CapSense_noiseThreshold
 3211 0d19 25       		.uleb128 0x25
 3212 0d1a 0D050000 		.4byte	.LASF114
 3213 0d1e 01       		.byte	0x1
 3214 0d1f 4D       		.byte	0x4d
 3215 0d20 920C0000 		.4byte	0xc92
 3216 0d24 05       		.uleb128 0x5
 3217 0d25 03       		.byte	0x3
 3218 0d26 00000000 		.4byte	CapSense_negativeNoiseThreshold
 3219 0d2a 25       		.uleb128 0x25
 3220 0d2b 84020000 		.4byte	.LASF115
 3221 0d2f 01       		.byte	0x1
 3222 0d30 4F       		.byte	0x4f
 3223 0d31 920C0000 		.4byte	0xc92
 3224 0d35 05       		.uleb128 0x5
 3225 0d36 03       		.byte	0x3
 3226 0d37 00000000 		.4byte	CapSense_hysteresis
 3227 0d3b 25       		.uleb128 0x25
 3228 0d3c A0070000 		.4byte	.LASF116
 3229 0d40 01       		.byte	0x1
 3230 0d41 51       		.byte	0x51
 3231 0d42 920C0000 		.4byte	0xc92
 3232 0d46 05       		.uleb128 0x5
 3233 0d47 03       		.byte	0x3
 3234 0d48 00000000 		.4byte	CapSense_debounce
 3235 0d4c 25       		.uleb128 0x25
 3236 0d4d 35020000 		.4byte	.LASF117
 3237 0d51 01       		.byte	0x1
 3238 0d52 59       		.byte	0x59
 3239 0d53 5D0D0000 		.4byte	0xd5d
 3240 0d57 05       		.uleb128 0x5
 3241 0d58 03       		.byte	0x3
 3242 0d59 00000000 		.4byte	CapSense_rawDataIndex
 3243 0d5d 08       		.uleb128 0x8
 3244 0d5e 610C0000 		.4byte	0xc61
 3245 0d62 25       		.uleb128 0x25
 3246 0d63 F4040000 		.4byte	.LASF118
 3247 0d67 01       		.byte	0x1
 3248 0d68 60       		.byte	0x60
 3249 0d69 730D0000 		.4byte	0xd73
 3250 0d6d 05       		.uleb128 0x5
 3251 0d6e 03       		.byte	0x3
 3252 0d6f 00000000 		.4byte	CapSense_numberOfSensors
 3253 0d73 08       		.uleb128 0x8
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 109


 3254 0d74 610C0000 		.4byte	0xc61
 3255 0d78 25       		.uleb128 0x25
 3256 0d79 330A0000 		.4byte	.LASF119
 3257 0d7d 01       		.byte	0x1
 3258 0d7e 27       		.byte	0x27
 3259 0d7f 2B0C0000 		.4byte	0xc2b
 3260 0d83 05       		.uleb128 0x5
 3261 0d84 03       		.byte	0x3
 3262 0d85 00000000 		.4byte	CapSense_rawFilterData1
 3263 0d89 24       		.uleb128 0x24
 3264 0d8a EB000000 		.4byte	.LASF120
 3265 0d8e 01       		.byte	0x1
 3266 0d8f 41       		.byte	0x41
 3267 0d90 AE020000 		.4byte	0x2ae
 3268 0d94 25       		.uleb128 0x25
 3269 0d95 84090000 		.4byte	.LASF121
 3270 0d99 01       		.byte	0x1
 3271 0d9a 45       		.byte	0x45
 3272 0d9b 6B000000 		.4byte	0x6b
 3273 0d9f 05       		.uleb128 0x5
 3274 0da0 03       		.byte	0x3
 3275 0da1 00000000 		.4byte	CapSense_enableRawFilters
 3276 0da5 26       		.uleb128 0x26
 3277 0da6 9F040000 		.4byte	.LASF122
 3278 0daa 9F040000 		.4byte	.LASF122
 3279 0dae 04       		.byte	0x4
 3280 0daf 9F       		.byte	0x9f
 3281 0db0 26       		.uleb128 0x26
 3282 0db1 BF010000 		.4byte	.LASF123
 3283 0db5 BF010000 		.4byte	.LASF123
 3284 0db9 04       		.byte	0x4
 3285 0dba 9E       		.byte	0x9e
 3286 0dbb 26       		.uleb128 0x26
 3287 0dbc FF050000 		.4byte	.LASF124
 3288 0dc0 FF050000 		.4byte	.LASF124
 3289 0dc4 04       		.byte	0x4
 3290 0dc5 A1       		.byte	0xa1
 3291 0dc6 26       		.uleb128 0x26
 3292 0dc7 69090000 		.4byte	.LASF125
 3293 0dcb 69090000 		.4byte	.LASF125
 3294 0dcf 03       		.byte	0x3
 3295 0dd0 6A       		.byte	0x6a
 3296 0dd1 26       		.uleb128 0x26
 3297 0dd2 2D090000 		.4byte	.LASF126
 3298 0dd6 2D090000 		.4byte	.LASF126
 3299 0dda 03       		.byte	0x3
 3300 0ddb 6B       		.byte	0x6b
 3301 0ddc 26       		.uleb128 0x26
 3302 0ddd 3F050000 		.4byte	.LASF127
 3303 0de1 3F050000 		.4byte	.LASF127
 3304 0de5 03       		.byte	0x3
 3305 0de6 81       		.byte	0x81
 3306 0de7 26       		.uleb128 0x26
 3307 0de8 E5050000 		.4byte	.LASF128
 3308 0dec E5050000 		.4byte	.LASF128
 3309 0df0 01       		.byte	0x1
 3310 0df1 17       		.byte	0x17
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 110


 3311 0df2 00       		.byte	0
 3312              		.section	.debug_abbrev,"",%progbits
 3313              	.Ldebug_abbrev0:
 3314 0000 01       		.uleb128 0x1
 3315 0001 11       		.uleb128 0x11
 3316 0002 01       		.byte	0x1
 3317 0003 25       		.uleb128 0x25
 3318 0004 0E       		.uleb128 0xe
 3319 0005 13       		.uleb128 0x13
 3320 0006 0B       		.uleb128 0xb
 3321 0007 03       		.uleb128 0x3
 3322 0008 0E       		.uleb128 0xe
 3323 0009 1B       		.uleb128 0x1b
 3324 000a 0E       		.uleb128 0xe
 3325 000b 55       		.uleb128 0x55
 3326 000c 17       		.uleb128 0x17
 3327 000d 11       		.uleb128 0x11
 3328 000e 01       		.uleb128 0x1
 3329 000f 10       		.uleb128 0x10
 3330 0010 17       		.uleb128 0x17
 3331 0011 00       		.byte	0
 3332 0012 00       		.byte	0
 3333 0013 02       		.uleb128 0x2
 3334 0014 24       		.uleb128 0x24
 3335 0015 00       		.byte	0
 3336 0016 0B       		.uleb128 0xb
 3337 0017 0B       		.uleb128 0xb
 3338 0018 3E       		.uleb128 0x3e
 3339 0019 0B       		.uleb128 0xb
 3340 001a 03       		.uleb128 0x3
 3341 001b 0E       		.uleb128 0xe
 3342 001c 00       		.byte	0
 3343 001d 00       		.byte	0
 3344 001e 03       		.uleb128 0x3
 3345 001f 24       		.uleb128 0x24
 3346 0020 00       		.byte	0
 3347 0021 0B       		.uleb128 0xb
 3348 0022 0B       		.uleb128 0xb
 3349 0023 3E       		.uleb128 0x3e
 3350 0024 0B       		.uleb128 0xb
 3351 0025 03       		.uleb128 0x3
 3352 0026 08       		.uleb128 0x8
 3353 0027 00       		.byte	0
 3354 0028 00       		.byte	0
 3355 0029 04       		.uleb128 0x4
 3356 002a 16       		.uleb128 0x16
 3357 002b 00       		.byte	0
 3358 002c 03       		.uleb128 0x3
 3359 002d 0E       		.uleb128 0xe
 3360 002e 3A       		.uleb128 0x3a
 3361 002f 0B       		.uleb128 0xb
 3362 0030 3B       		.uleb128 0x3b
 3363 0031 05       		.uleb128 0x5
 3364 0032 49       		.uleb128 0x49
 3365 0033 13       		.uleb128 0x13
 3366 0034 00       		.byte	0
 3367 0035 00       		.byte	0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 111


 3368 0036 05       		.uleb128 0x5
 3369 0037 13       		.uleb128 0x13
 3370 0038 01       		.byte	0x1
 3371 0039 0B       		.uleb128 0xb
 3372 003a 0B       		.uleb128 0xb
 3373 003b 3A       		.uleb128 0x3a
 3374 003c 0B       		.uleb128 0xb
 3375 003d 3B       		.uleb128 0x3b
 3376 003e 0B       		.uleb128 0xb
 3377 003f 01       		.uleb128 0x1
 3378 0040 13       		.uleb128 0x13
 3379 0041 00       		.byte	0
 3380 0042 00       		.byte	0
 3381 0043 06       		.uleb128 0x6
 3382 0044 0D       		.uleb128 0xd
 3383 0045 00       		.byte	0
 3384 0046 03       		.uleb128 0x3
 3385 0047 0E       		.uleb128 0xe
 3386 0048 3A       		.uleb128 0x3a
 3387 0049 0B       		.uleb128 0xb
 3388 004a 3B       		.uleb128 0x3b
 3389 004b 0B       		.uleb128 0xb
 3390 004c 49       		.uleb128 0x49
 3391 004d 13       		.uleb128 0x13
 3392 004e 38       		.uleb128 0x38
 3393 004f 0B       		.uleb128 0xb
 3394 0050 00       		.byte	0
 3395 0051 00       		.byte	0
 3396 0052 07       		.uleb128 0x7
 3397 0053 0F       		.uleb128 0xf
 3398 0054 00       		.byte	0
 3399 0055 0B       		.uleb128 0xb
 3400 0056 0B       		.uleb128 0xb
 3401 0057 49       		.uleb128 0x49
 3402 0058 13       		.uleb128 0x13
 3403 0059 00       		.byte	0
 3404 005a 00       		.byte	0
 3405 005b 08       		.uleb128 0x8
 3406 005c 26       		.uleb128 0x26
 3407 005d 00       		.byte	0
 3408 005e 49       		.uleb128 0x49
 3409 005f 13       		.uleb128 0x13
 3410 0060 00       		.byte	0
 3411 0061 00       		.byte	0
 3412 0062 09       		.uleb128 0x9
 3413 0063 15       		.uleb128 0x15
 3414 0064 01       		.byte	0x1
 3415 0065 27       		.uleb128 0x27
 3416 0066 19       		.uleb128 0x19
 3417 0067 49       		.uleb128 0x49
 3418 0068 13       		.uleb128 0x13
 3419 0069 01       		.uleb128 0x1
 3420 006a 13       		.uleb128 0x13
 3421 006b 00       		.byte	0
 3422 006c 00       		.byte	0
 3423 006d 0A       		.uleb128 0xa
 3424 006e 05       		.uleb128 0x5
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 112


 3425 006f 00       		.byte	0
 3426 0070 49       		.uleb128 0x49
 3427 0071 13       		.uleb128 0x13
 3428 0072 00       		.byte	0
 3429 0073 00       		.byte	0
 3430 0074 0B       		.uleb128 0xb
 3431 0075 15       		.uleb128 0x15
 3432 0076 01       		.byte	0x1
 3433 0077 27       		.uleb128 0x27
 3434 0078 19       		.uleb128 0x19
 3435 0079 01       		.uleb128 0x1
 3436 007a 13       		.uleb128 0x13
 3437 007b 00       		.byte	0
 3438 007c 00       		.byte	0
 3439 007d 0C       		.uleb128 0xc
 3440 007e 16       		.uleb128 0x16
 3441 007f 00       		.byte	0
 3442 0080 03       		.uleb128 0x3
 3443 0081 0E       		.uleb128 0xe
 3444 0082 3A       		.uleb128 0x3a
 3445 0083 0B       		.uleb128 0xb
 3446 0084 3B       		.uleb128 0x3b
 3447 0085 0B       		.uleb128 0xb
 3448 0086 49       		.uleb128 0x49
 3449 0087 13       		.uleb128 0x13
 3450 0088 00       		.byte	0
 3451 0089 00       		.byte	0
 3452 008a 0D       		.uleb128 0xd
 3453 008b 2E       		.uleb128 0x2e
 3454 008c 01       		.byte	0x1
 3455 008d 3F       		.uleb128 0x3f
 3456 008e 19       		.uleb128 0x19
 3457 008f 03       		.uleb128 0x3
 3458 0090 0E       		.uleb128 0xe
 3459 0091 3A       		.uleb128 0x3a
 3460 0092 0B       		.uleb128 0xb
 3461 0093 3B       		.uleb128 0x3b
 3462 0094 0B       		.uleb128 0xb
 3463 0095 27       		.uleb128 0x27
 3464 0096 19       		.uleb128 0x19
 3465 0097 11       		.uleb128 0x11
 3466 0098 01       		.uleb128 0x1
 3467 0099 12       		.uleb128 0x12
 3468 009a 06       		.uleb128 0x6
 3469 009b 40       		.uleb128 0x40
 3470 009c 18       		.uleb128 0x18
 3471 009d 9742     		.uleb128 0x2117
 3472 009f 19       		.uleb128 0x19
 3473 00a0 01       		.uleb128 0x1
 3474 00a1 13       		.uleb128 0x13
 3475 00a2 00       		.byte	0
 3476 00a3 00       		.byte	0
 3477 00a4 0E       		.uleb128 0xe
 3478 00a5 05       		.uleb128 0x5
 3479 00a6 00       		.byte	0
 3480 00a7 03       		.uleb128 0x3
 3481 00a8 0E       		.uleb128 0xe
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 113


 3482 00a9 3A       		.uleb128 0x3a
 3483 00aa 0B       		.uleb128 0xb
 3484 00ab 3B       		.uleb128 0x3b
 3485 00ac 0B       		.uleb128 0xb
 3486 00ad 49       		.uleb128 0x49
 3487 00ae 13       		.uleb128 0x13
 3488 00af 02       		.uleb128 0x2
 3489 00b0 17       		.uleb128 0x17
 3490 00b1 00       		.byte	0
 3491 00b2 00       		.byte	0
 3492 00b3 0F       		.uleb128 0xf
 3493 00b4 34       		.uleb128 0x34
 3494 00b5 00       		.byte	0
 3495 00b6 03       		.uleb128 0x3
 3496 00b7 0E       		.uleb128 0xe
 3497 00b8 3A       		.uleb128 0x3a
 3498 00b9 0B       		.uleb128 0xb
 3499 00ba 3B       		.uleb128 0x3b
 3500 00bb 0B       		.uleb128 0xb
 3501 00bc 49       		.uleb128 0x49
 3502 00bd 13       		.uleb128 0x13
 3503 00be 02       		.uleb128 0x2
 3504 00bf 17       		.uleb128 0x17
 3505 00c0 00       		.byte	0
 3506 00c1 00       		.byte	0
 3507 00c2 10       		.uleb128 0x10
 3508 00c3 898201   		.uleb128 0x4109
 3509 00c6 01       		.byte	0x1
 3510 00c7 11       		.uleb128 0x11
 3511 00c8 01       		.uleb128 0x1
 3512 00c9 31       		.uleb128 0x31
 3513 00ca 13       		.uleb128 0x13
 3514 00cb 01       		.uleb128 0x1
 3515 00cc 13       		.uleb128 0x13
 3516 00cd 00       		.byte	0
 3517 00ce 00       		.byte	0
 3518 00cf 11       		.uleb128 0x11
 3519 00d0 8A8201   		.uleb128 0x410a
 3520 00d3 00       		.byte	0
 3521 00d4 02       		.uleb128 0x2
 3522 00d5 18       		.uleb128 0x18
 3523 00d6 9142     		.uleb128 0x2111
 3524 00d8 18       		.uleb128 0x18
 3525 00d9 00       		.byte	0
 3526 00da 00       		.byte	0
 3527 00db 12       		.uleb128 0x12
 3528 00dc 898201   		.uleb128 0x4109
 3529 00df 00       		.byte	0
 3530 00e0 11       		.uleb128 0x11
 3531 00e1 01       		.uleb128 0x1
 3532 00e2 31       		.uleb128 0x31
 3533 00e3 13       		.uleb128 0x13
 3534 00e4 00       		.byte	0
 3535 00e5 00       		.byte	0
 3536 00e6 13       		.uleb128 0x13
 3537 00e7 898201   		.uleb128 0x4109
 3538 00ea 01       		.byte	0x1
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 114


 3539 00eb 11       		.uleb128 0x11
 3540 00ec 01       		.uleb128 0x1
 3541 00ed 31       		.uleb128 0x31
 3542 00ee 13       		.uleb128 0x13
 3543 00ef 00       		.byte	0
 3544 00f0 00       		.byte	0
 3545 00f1 14       		.uleb128 0x14
 3546 00f2 34       		.uleb128 0x34
 3547 00f3 00       		.byte	0
 3548 00f4 03       		.uleb128 0x3
 3549 00f5 08       		.uleb128 0x8
 3550 00f6 3A       		.uleb128 0x3a
 3551 00f7 0B       		.uleb128 0xb
 3552 00f8 3B       		.uleb128 0x3b
 3553 00f9 0B       		.uleb128 0xb
 3554 00fa 49       		.uleb128 0x49
 3555 00fb 13       		.uleb128 0x13
 3556 00fc 02       		.uleb128 0x2
 3557 00fd 17       		.uleb128 0x17
 3558 00fe 00       		.byte	0
 3559 00ff 00       		.byte	0
 3560 0100 15       		.uleb128 0x15
 3561 0101 2E       		.uleb128 0x2e
 3562 0102 01       		.byte	0x1
 3563 0103 3F       		.uleb128 0x3f
 3564 0104 19       		.uleb128 0x19
 3565 0105 03       		.uleb128 0x3
 3566 0106 0E       		.uleb128 0xe
 3567 0107 3A       		.uleb128 0x3a
 3568 0108 0B       		.uleb128 0xb
 3569 0109 3B       		.uleb128 0x3b
 3570 010a 05       		.uleb128 0x5
 3571 010b 27       		.uleb128 0x27
 3572 010c 19       		.uleb128 0x19
 3573 010d 11       		.uleb128 0x11
 3574 010e 01       		.uleb128 0x1
 3575 010f 12       		.uleb128 0x12
 3576 0110 06       		.uleb128 0x6
 3577 0111 40       		.uleb128 0x40
 3578 0112 18       		.uleb128 0x18
 3579 0113 9742     		.uleb128 0x2117
 3580 0115 19       		.uleb128 0x19
 3581 0116 01       		.uleb128 0x1
 3582 0117 13       		.uleb128 0x13
 3583 0118 00       		.byte	0
 3584 0119 00       		.byte	0
 3585 011a 16       		.uleb128 0x16
 3586 011b 34       		.uleb128 0x34
 3587 011c 00       		.byte	0
 3588 011d 03       		.uleb128 0x3
 3589 011e 08       		.uleb128 0x8
 3590 011f 3A       		.uleb128 0x3a
 3591 0120 0B       		.uleb128 0xb
 3592 0121 3B       		.uleb128 0x3b
 3593 0122 05       		.uleb128 0x5
 3594 0123 49       		.uleb128 0x49
 3595 0124 13       		.uleb128 0x13
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 115


 3596 0125 02       		.uleb128 0x2
 3597 0126 17       		.uleb128 0x17
 3598 0127 00       		.byte	0
 3599 0128 00       		.byte	0
 3600 0129 17       		.uleb128 0x17
 3601 012a 34       		.uleb128 0x34
 3602 012b 00       		.byte	0
 3603 012c 03       		.uleb128 0x3
 3604 012d 0E       		.uleb128 0xe
 3605 012e 3A       		.uleb128 0x3a
 3606 012f 0B       		.uleb128 0xb
 3607 0130 3B       		.uleb128 0x3b
 3608 0131 05       		.uleb128 0x5
 3609 0132 49       		.uleb128 0x49
 3610 0133 13       		.uleb128 0x13
 3611 0134 02       		.uleb128 0x2
 3612 0135 17       		.uleb128 0x17
 3613 0136 00       		.byte	0
 3614 0137 00       		.byte	0
 3615 0138 18       		.uleb128 0x18
 3616 0139 2E       		.uleb128 0x2e
 3617 013a 01       		.byte	0x1
 3618 013b 3F       		.uleb128 0x3f
 3619 013c 19       		.uleb128 0x19
 3620 013d 03       		.uleb128 0x3
 3621 013e 0E       		.uleb128 0xe
 3622 013f 3A       		.uleb128 0x3a
 3623 0140 0B       		.uleb128 0xb
 3624 0141 3B       		.uleb128 0x3b
 3625 0142 05       		.uleb128 0x5
 3626 0143 27       		.uleb128 0x27
 3627 0144 19       		.uleb128 0x19
 3628 0145 49       		.uleb128 0x49
 3629 0146 13       		.uleb128 0x13
 3630 0147 11       		.uleb128 0x11
 3631 0148 01       		.uleb128 0x1
 3632 0149 12       		.uleb128 0x12
 3633 014a 06       		.uleb128 0x6
 3634 014b 40       		.uleb128 0x40
 3635 014c 18       		.uleb128 0x18
 3636 014d 9742     		.uleb128 0x2117
 3637 014f 19       		.uleb128 0x19
 3638 0150 01       		.uleb128 0x1
 3639 0151 13       		.uleb128 0x13
 3640 0152 00       		.byte	0
 3641 0153 00       		.byte	0
 3642 0154 19       		.uleb128 0x19
 3643 0155 05       		.uleb128 0x5
 3644 0156 00       		.byte	0
 3645 0157 03       		.uleb128 0x3
 3646 0158 0E       		.uleb128 0xe
 3647 0159 3A       		.uleb128 0x3a
 3648 015a 0B       		.uleb128 0xb
 3649 015b 3B       		.uleb128 0x3b
 3650 015c 05       		.uleb128 0x5
 3651 015d 49       		.uleb128 0x49
 3652 015e 13       		.uleb128 0x13
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 116


 3653 015f 02       		.uleb128 0x2
 3654 0160 17       		.uleb128 0x17
 3655 0161 00       		.byte	0
 3656 0162 00       		.byte	0
 3657 0163 1A       		.uleb128 0x1a
 3658 0164 05       		.uleb128 0x5
 3659 0165 00       		.byte	0
 3660 0166 03       		.uleb128 0x3
 3661 0167 0E       		.uleb128 0xe
 3662 0168 3A       		.uleb128 0x3a
 3663 0169 0B       		.uleb128 0xb
 3664 016a 3B       		.uleb128 0x3b
 3665 016b 05       		.uleb128 0x5
 3666 016c 49       		.uleb128 0x49
 3667 016d 13       		.uleb128 0x13
 3668 016e 02       		.uleb128 0x2
 3669 016f 18       		.uleb128 0x18
 3670 0170 00       		.byte	0
 3671 0171 00       		.byte	0
 3672 0172 1B       		.uleb128 0x1b
 3673 0173 34       		.uleb128 0x34
 3674 0174 00       		.byte	0
 3675 0175 03       		.uleb128 0x3
 3676 0176 0E       		.uleb128 0xe
 3677 0177 3A       		.uleb128 0x3a
 3678 0178 0B       		.uleb128 0xb
 3679 0179 3B       		.uleb128 0x3b
 3680 017a 05       		.uleb128 0x5
 3681 017b 49       		.uleb128 0x49
 3682 017c 13       		.uleb128 0x13
 3683 017d 00       		.byte	0
 3684 017e 00       		.byte	0
 3685 017f 1C       		.uleb128 0x1c
 3686 0180 05       		.uleb128 0x5
 3687 0181 00       		.byte	0
 3688 0182 03       		.uleb128 0x3
 3689 0183 08       		.uleb128 0x8
 3690 0184 3A       		.uleb128 0x3a
 3691 0185 0B       		.uleb128 0xb
 3692 0186 3B       		.uleb128 0x3b
 3693 0187 05       		.uleb128 0x5
 3694 0188 49       		.uleb128 0x49
 3695 0189 13       		.uleb128 0x13
 3696 018a 02       		.uleb128 0x2
 3697 018b 17       		.uleb128 0x17
 3698 018c 00       		.byte	0
 3699 018d 00       		.byte	0
 3700 018e 1D       		.uleb128 0x1d
 3701 018f 05       		.uleb128 0x5
 3702 0190 00       		.byte	0
 3703 0191 03       		.uleb128 0x3
 3704 0192 08       		.uleb128 0x8
 3705 0193 3A       		.uleb128 0x3a
 3706 0194 0B       		.uleb128 0xb
 3707 0195 3B       		.uleb128 0x3b
 3708 0196 05       		.uleb128 0x5
 3709 0197 49       		.uleb128 0x49
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 117


 3710 0198 13       		.uleb128 0x13
 3711 0199 02       		.uleb128 0x2
 3712 019a 18       		.uleb128 0x18
 3713 019b 00       		.byte	0
 3714 019c 00       		.byte	0
 3715 019d 1E       		.uleb128 0x1e
 3716 019e 34       		.uleb128 0x34
 3717 019f 00       		.byte	0
 3718 01a0 03       		.uleb128 0x3
 3719 01a1 08       		.uleb128 0x8
 3720 01a2 3A       		.uleb128 0x3a
 3721 01a3 0B       		.uleb128 0xb
 3722 01a4 3B       		.uleb128 0x3b
 3723 01a5 05       		.uleb128 0x5
 3724 01a6 49       		.uleb128 0x49
 3725 01a7 13       		.uleb128 0x13
 3726 01a8 00       		.byte	0
 3727 01a9 00       		.byte	0
 3728 01aa 1F       		.uleb128 0x1f
 3729 01ab 34       		.uleb128 0x34
 3730 01ac 00       		.byte	0
 3731 01ad 03       		.uleb128 0x3
 3732 01ae 0E       		.uleb128 0xe
 3733 01af 3A       		.uleb128 0x3a
 3734 01b0 0B       		.uleb128 0xb
 3735 01b1 3B       		.uleb128 0x3b
 3736 01b2 05       		.uleb128 0x5
 3737 01b3 49       		.uleb128 0x49
 3738 01b4 13       		.uleb128 0x13
 3739 01b5 02       		.uleb128 0x2
 3740 01b6 18       		.uleb128 0x18
 3741 01b7 00       		.byte	0
 3742 01b8 00       		.byte	0
 3743 01b9 20       		.uleb128 0x20
 3744 01ba 2E       		.uleb128 0x2e
 3745 01bb 00       		.byte	0
 3746 01bc 3F       		.uleb128 0x3f
 3747 01bd 19       		.uleb128 0x19
 3748 01be 03       		.uleb128 0x3
 3749 01bf 0E       		.uleb128 0xe
 3750 01c0 3A       		.uleb128 0x3a
 3751 01c1 0B       		.uleb128 0xb
 3752 01c2 3B       		.uleb128 0x3b
 3753 01c3 05       		.uleb128 0x5
 3754 01c4 27       		.uleb128 0x27
 3755 01c5 19       		.uleb128 0x19
 3756 01c6 11       		.uleb128 0x11
 3757 01c7 01       		.uleb128 0x1
 3758 01c8 12       		.uleb128 0x12
 3759 01c9 06       		.uleb128 0x6
 3760 01ca 40       		.uleb128 0x40
 3761 01cb 18       		.uleb128 0x18
 3762 01cc 9742     		.uleb128 0x2117
 3763 01ce 19       		.uleb128 0x19
 3764 01cf 00       		.byte	0
 3765 01d0 00       		.byte	0
 3766 01d1 21       		.uleb128 0x21
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 118


 3767 01d2 01       		.uleb128 0x1
 3768 01d3 01       		.byte	0x1
 3769 01d4 49       		.uleb128 0x49
 3770 01d5 13       		.uleb128 0x13
 3771 01d6 01       		.uleb128 0x1
 3772 01d7 13       		.uleb128 0x13
 3773 01d8 00       		.byte	0
 3774 01d9 00       		.byte	0
 3775 01da 22       		.uleb128 0x22
 3776 01db 21       		.uleb128 0x21
 3777 01dc 00       		.byte	0
 3778 01dd 49       		.uleb128 0x49
 3779 01de 13       		.uleb128 0x13
 3780 01df 2F       		.uleb128 0x2f
 3781 01e0 0B       		.uleb128 0xb
 3782 01e1 00       		.byte	0
 3783 01e2 00       		.byte	0
 3784 01e3 23       		.uleb128 0x23
 3785 01e4 34       		.uleb128 0x34
 3786 01e5 00       		.byte	0
 3787 01e6 03       		.uleb128 0x3
 3788 01e7 0E       		.uleb128 0xe
 3789 01e8 3A       		.uleb128 0x3a
 3790 01e9 0B       		.uleb128 0xb
 3791 01ea 3B       		.uleb128 0x3b
 3792 01eb 0B       		.uleb128 0xb
 3793 01ec 49       		.uleb128 0x49
 3794 01ed 13       		.uleb128 0x13
 3795 01ee 02       		.uleb128 0x2
 3796 01ef 18       		.uleb128 0x18
 3797 01f0 00       		.byte	0
 3798 01f1 00       		.byte	0
 3799 01f2 24       		.uleb128 0x24
 3800 01f3 34       		.uleb128 0x34
 3801 01f4 00       		.byte	0
 3802 01f5 03       		.uleb128 0x3
 3803 01f6 0E       		.uleb128 0xe
 3804 01f7 3A       		.uleb128 0x3a
 3805 01f8 0B       		.uleb128 0xb
 3806 01f9 3B       		.uleb128 0x3b
 3807 01fa 0B       		.uleb128 0xb
 3808 01fb 49       		.uleb128 0x49
 3809 01fc 13       		.uleb128 0x13
 3810 01fd 3F       		.uleb128 0x3f
 3811 01fe 19       		.uleb128 0x19
 3812 01ff 3C       		.uleb128 0x3c
 3813 0200 19       		.uleb128 0x19
 3814 0201 00       		.byte	0
 3815 0202 00       		.byte	0
 3816 0203 25       		.uleb128 0x25
 3817 0204 34       		.uleb128 0x34
 3818 0205 00       		.byte	0
 3819 0206 03       		.uleb128 0x3
 3820 0207 0E       		.uleb128 0xe
 3821 0208 3A       		.uleb128 0x3a
 3822 0209 0B       		.uleb128 0xb
 3823 020a 3B       		.uleb128 0x3b
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 119


 3824 020b 0B       		.uleb128 0xb
 3825 020c 49       		.uleb128 0x49
 3826 020d 13       		.uleb128 0x13
 3827 020e 3F       		.uleb128 0x3f
 3828 020f 19       		.uleb128 0x19
 3829 0210 02       		.uleb128 0x2
 3830 0211 18       		.uleb128 0x18
 3831 0212 00       		.byte	0
 3832 0213 00       		.byte	0
 3833 0214 26       		.uleb128 0x26
 3834 0215 2E       		.uleb128 0x2e
 3835 0216 00       		.byte	0
 3836 0217 3F       		.uleb128 0x3f
 3837 0218 19       		.uleb128 0x19
 3838 0219 3C       		.uleb128 0x3c
 3839 021a 19       		.uleb128 0x19
 3840 021b 6E       		.uleb128 0x6e
 3841 021c 0E       		.uleb128 0xe
 3842 021d 03       		.uleb128 0x3
 3843 021e 0E       		.uleb128 0xe
 3844 021f 3A       		.uleb128 0x3a
 3845 0220 0B       		.uleb128 0xb
 3846 0221 3B       		.uleb128 0x3b
 3847 0222 0B       		.uleb128 0xb
 3848 0223 00       		.byte	0
 3849 0224 00       		.byte	0
 3850 0225 00       		.byte	0
 3851              		.section	.debug_loc,"",%progbits
 3852              	.Ldebug_loc0:
 3853              	.LLST0:
 3854 0000 00000000 		.4byte	.LVL0
 3855 0004 12000000 		.4byte	.LVL2
 3856 0008 0100     		.2byte	0x1
 3857 000a 50       		.byte	0x50
 3858 000b 12000000 		.4byte	.LVL2
 3859 000f 3C000000 		.4byte	.LFE32
 3860 0013 0400     		.2byte	0x4
 3861 0015 F3       		.byte	0xf3
 3862 0016 01       		.uleb128 0x1
 3863 0017 50       		.byte	0x50
 3864 0018 9F       		.byte	0x9f
 3865 0019 00000000 		.4byte	0
 3866 001d 00000000 		.4byte	0
 3867              	.LLST1:
 3868 0021 06000000 		.4byte	.LVL1
 3869 0025 1E000000 		.4byte	.LVL3
 3870 0029 0100     		.2byte	0x1
 3871 002b 53       		.byte	0x53
 3872 002c 00000000 		.4byte	0
 3873 0030 00000000 		.4byte	0
 3874              	.LLST2:
 3875 0034 00000000 		.4byte	.LVL4
 3876 0038 07000000 		.4byte	.LVL5-1
 3877 003c 0100     		.2byte	0x1
 3878 003e 50       		.byte	0x50
 3879 003f 07000000 		.4byte	.LVL5-1
 3880 0043 16000000 		.4byte	.LVL8
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 120


 3881 0047 0100     		.2byte	0x1
 3882 0049 54       		.byte	0x54
 3883 004a 16000000 		.4byte	.LVL8
 3884 004e 18000000 		.4byte	.LFE33
 3885 0052 0400     		.2byte	0x4
 3886 0054 F3       		.byte	0xf3
 3887 0055 01       		.uleb128 0x1
 3888 0056 50       		.byte	0x50
 3889 0057 9F       		.byte	0x9f
 3890 0058 00000000 		.4byte	0
 3891 005c 00000000 		.4byte	0
 3892              	.LLST3:
 3893 0060 02000000 		.4byte	.LVL9
 3894 0064 06000000 		.4byte	.LVL10
 3895 0068 0200     		.2byte	0x2
 3896 006a 30       		.byte	0x30
 3897 006b 9F       		.byte	0x9f
 3898 006c 06000000 		.4byte	.LVL10
 3899 0070 12000000 		.4byte	.LVL13
 3900 0074 0100     		.2byte	0x1
 3901 0076 54       		.byte	0x54
 3902 0077 00000000 		.4byte	0
 3903 007b 00000000 		.4byte	0
 3904              	.LLST4:
 3905 007f 12000000 		.4byte	.LVL16
 3906 0083 2A000000 		.4byte	.LVL21
 3907 0087 0100     		.2byte	0x1
 3908 0089 54       		.byte	0x54
 3909 008a 00000000 		.4byte	0
 3910 008e 00000000 		.4byte	0
 3911              	.LLST5:
 3912 0092 1A000000 		.4byte	.LVL17
 3913 0096 20000000 		.4byte	.LVL18
 3914 009a 0100     		.2byte	0x1
 3915 009c 50       		.byte	0x50
 3916 009d 00000000 		.4byte	0
 3917 00a1 00000000 		.4byte	0
 3918              	.LLST6:
 3919 00a5 00000000 		.4byte	.LVL22
 3920 00a9 02000000 		.4byte	.LVL23
 3921 00ad 0100     		.2byte	0x1
 3922 00af 50       		.byte	0x50
 3923 00b0 02000000 		.4byte	.LVL23
 3924 00b4 0C000000 		.4byte	.LFE40
 3925 00b8 0400     		.2byte	0x4
 3926 00ba F3       		.byte	0xf3
 3927 00bb 01       		.uleb128 0x1
 3928 00bc 50       		.byte	0x50
 3929 00bd 9F       		.byte	0x9f
 3930 00be 00000000 		.4byte	0
 3931 00c2 00000000 		.4byte	0
 3932              	.LLST7:
 3933 00c6 00000000 		.4byte	.LVL24
 3934 00ca 02000000 		.4byte	.LVL25
 3935 00ce 0100     		.2byte	0x1
 3936 00d0 50       		.byte	0x50
 3937 00d1 02000000 		.4byte	.LVL25
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 121


 3938 00d5 0C000000 		.4byte	.LFE41
 3939 00d9 0400     		.2byte	0x4
 3940 00db F3       		.byte	0xf3
 3941 00dc 01       		.uleb128 0x1
 3942 00dd 50       		.byte	0x50
 3943 00de 9F       		.byte	0x9f
 3944 00df 00000000 		.4byte	0
 3945 00e3 00000000 		.4byte	0
 3946              	.LLST8:
 3947 00e7 00000000 		.4byte	.LVL26
 3948 00eb 04000000 		.4byte	.LVL27
 3949 00ef 0100     		.2byte	0x1
 3950 00f1 50       		.byte	0x50
 3951 00f2 04000000 		.4byte	.LVL27
 3952 00f6 0C000000 		.4byte	.LFE42
 3953 00fa 0400     		.2byte	0x4
 3954 00fc F3       		.byte	0xf3
 3955 00fd 01       		.uleb128 0x1
 3956 00fe 50       		.byte	0x50
 3957 00ff 9F       		.byte	0x9f
 3958 0100 00000000 		.4byte	0
 3959 0104 00000000 		.4byte	0
 3960              	.LLST9:
 3961 0108 00000000 		.4byte	.LVL28
 3962 010c 04000000 		.4byte	.LVL29
 3963 0110 0100     		.2byte	0x1
 3964 0112 50       		.byte	0x50
 3965 0113 04000000 		.4byte	.LVL29
 3966 0117 0C000000 		.4byte	.LFE43
 3967 011b 0400     		.2byte	0x4
 3968 011d F3       		.byte	0xf3
 3969 011e 01       		.uleb128 0x1
 3970 011f 50       		.byte	0x50
 3971 0120 9F       		.byte	0x9f
 3972 0121 00000000 		.4byte	0
 3973 0125 00000000 		.4byte	0
 3974              	.LLST10:
 3975 0129 00000000 		.4byte	.LVL30
 3976 012d 04000000 		.4byte	.LVL31
 3977 0131 0100     		.2byte	0x1
 3978 0133 50       		.byte	0x50
 3979 0134 04000000 		.4byte	.LVL31
 3980 0138 0C000000 		.4byte	.LFE44
 3981 013c 0400     		.2byte	0x4
 3982 013e F3       		.byte	0xf3
 3983 013f 01       		.uleb128 0x1
 3984 0140 50       		.byte	0x50
 3985 0141 9F       		.byte	0x9f
 3986 0142 00000000 		.4byte	0
 3987 0146 00000000 		.4byte	0
 3988              	.LLST11:
 3989 014a 00000000 		.4byte	.LVL32
 3990 014e 04000000 		.4byte	.LVL33
 3991 0152 0100     		.2byte	0x1
 3992 0154 50       		.byte	0x50
 3993 0155 04000000 		.4byte	.LVL33
 3994 0159 0C000000 		.4byte	.LFE45
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 122


 3995 015d 0400     		.2byte	0x4
 3996 015f F3       		.byte	0xf3
 3997 0160 01       		.uleb128 0x1
 3998 0161 50       		.byte	0x50
 3999 0162 9F       		.byte	0x9f
 4000 0163 00000000 		.4byte	0
 4001 0167 00000000 		.4byte	0
 4002              	.LLST12:
 4003 016b 00000000 		.4byte	.LVL34
 4004 016f 04000000 		.4byte	.LVL35
 4005 0173 0100     		.2byte	0x1
 4006 0175 50       		.byte	0x50
 4007 0176 04000000 		.4byte	.LVL35
 4008 017a 0C000000 		.4byte	.LFE46
 4009 017e 0400     		.2byte	0x4
 4010 0180 F3       		.byte	0xf3
 4011 0181 01       		.uleb128 0x1
 4012 0182 50       		.byte	0x50
 4013 0183 9F       		.byte	0x9f
 4014 0184 00000000 		.4byte	0
 4015 0188 00000000 		.4byte	0
 4016              	.LLST13:
 4017 018c 00000000 		.4byte	.LVL36
 4018 0190 04000000 		.4byte	.LVL37
 4019 0194 0100     		.2byte	0x1
 4020 0196 50       		.byte	0x50
 4021 0197 04000000 		.4byte	.LVL37
 4022 019b 0C000000 		.4byte	.LFE47
 4023 019f 0400     		.2byte	0x4
 4024 01a1 F3       		.byte	0xf3
 4025 01a2 01       		.uleb128 0x1
 4026 01a3 50       		.byte	0x50
 4027 01a4 9F       		.byte	0x9f
 4028 01a5 00000000 		.4byte	0
 4029 01a9 00000000 		.4byte	0
 4030              	.LLST14:
 4031 01ad 00000000 		.4byte	.LVL43
 4032 01b1 04000000 		.4byte	.LVL44
 4033 01b5 0100     		.2byte	0x1
 4034 01b7 50       		.byte	0x50
 4035 01b8 04000000 		.4byte	.LVL44
 4036 01bc 0C000000 		.4byte	.LFE53
 4037 01c0 0400     		.2byte	0x4
 4038 01c2 F3       		.byte	0xf3
 4039 01c3 01       		.uleb128 0x1
 4040 01c4 50       		.byte	0x50
 4041 01c5 9F       		.byte	0x9f
 4042 01c6 00000000 		.4byte	0
 4043 01ca 00000000 		.4byte	0
 4044              	.LLST15:
 4045 01ce 00000000 		.4byte	.LVL45
 4046 01d2 1E000000 		.4byte	.LVL49
 4047 01d6 0100     		.2byte	0x1
 4048 01d8 50       		.byte	0x50
 4049 01d9 1E000000 		.4byte	.LVL49
 4050 01dd 23000000 		.4byte	.LVL50-1
 4051 01e1 0100     		.2byte	0x1
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 123


 4052 01e3 51       		.byte	0x51
 4053 01e4 23000000 		.4byte	.LVL50-1
 4054 01e8 8C000000 		.4byte	.LVL57
 4055 01ec 0100     		.2byte	0x1
 4056 01ee 54       		.byte	0x54
 4057 01ef 8C000000 		.4byte	.LVL57
 4058 01f3 A8000000 		.4byte	.LFE54
 4059 01f7 0400     		.2byte	0x4
 4060 01f9 F3       		.byte	0xf3
 4061 01fa 01       		.uleb128 0x1
 4062 01fb 50       		.byte	0x50
 4063 01fc 9F       		.byte	0x9f
 4064 01fd 00000000 		.4byte	0
 4065 0201 00000000 		.4byte	0
 4066              	.LLST16:
 4067 0205 1A000000 		.4byte	.LVL48
 4068 0209 8C000000 		.4byte	.LVL59
 4069 020d 0100     		.2byte	0x1
 4070 020f 58       		.byte	0x58
 4071 0210 00000000 		.4byte	0
 4072 0214 00000000 		.4byte	0
 4073              	.LLST17:
 4074 0218 10000000 		.4byte	.LVL46
 4075 021c 8C000000 		.4byte	.LVL58
 4076 0220 0100     		.2byte	0x1
 4077 0222 57       		.byte	0x57
 4078 0223 00000000 		.4byte	0
 4079 0227 00000000 		.4byte	0
 4080              	.LLST18:
 4081 022b 14000000 		.4byte	.LVL47
 4082 022f 30000000 		.4byte	.LVL51
 4083 0233 0100     		.2byte	0x1
 4084 0235 56       		.byte	0x56
 4085 0236 4A000000 		.4byte	.LVL53
 4086 023a 52000000 		.4byte	.LVL54
 4087 023e 0100     		.2byte	0x1
 4088 0240 56       		.byte	0x56
 4089 0241 00000000 		.4byte	0
 4090 0245 00000000 		.4byte	0
 4091              	.LLST19:
 4092 0249 00000000 		.4byte	.LVL60
 4093 024d 08000000 		.4byte	.LVL62
 4094 0251 0100     		.2byte	0x1
 4095 0253 50       		.byte	0x50
 4096 0254 08000000 		.4byte	.LVL62
 4097 0258 28000000 		.4byte	.LFE55
 4098 025c 0400     		.2byte	0x4
 4099 025e F3       		.byte	0xf3
 4100 025f 01       		.uleb128 0x1
 4101 0260 50       		.byte	0x50
 4102 0261 9F       		.byte	0x9f
 4103 0262 00000000 		.4byte	0
 4104 0266 00000000 		.4byte	0
 4105              	.LLST20:
 4106 026a 06000000 		.4byte	.LVL61
 4107 026e 22000000 		.4byte	.LVL68
 4108 0272 0100     		.2byte	0x1
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 124


 4109 0274 54       		.byte	0x54
 4110 0275 00000000 		.4byte	0
 4111 0279 00000000 		.4byte	0
 4112              	.LLST21:
 4113 027d 0C000000 		.4byte	.LVL63
 4114 0281 22000000 		.4byte	.LVL69
 4115 0285 0100     		.2byte	0x1
 4116 0287 55       		.byte	0x55
 4117 0288 22000000 		.4byte	.LVL69
 4118 028c 28000000 		.4byte	.LFE55
 4119 0290 1E00     		.2byte	0x1e
 4120 0292 F3       		.byte	0xf3
 4121 0293 01       		.uleb128 0x1
 4122 0294 50       		.byte	0x50
 4123 0295 03       		.byte	0x3
 4124 0296 00000000 		.4byte	.LANCHOR2
 4125 029a 22       		.byte	0x22
 4126 029b 94       		.byte	0x94
 4127 029c 01       		.byte	0x1
 4128 029d 08       		.byte	0x8
 4129 029e FF       		.byte	0xff
 4130 029f 1A       		.byte	0x1a
 4131 02a0 F3       		.byte	0xf3
 4132 02a1 01       		.uleb128 0x1
 4133 02a2 50       		.byte	0x50
 4134 02a3 03       		.byte	0x3
 4135 02a4 04000000 		.4byte	.LANCHOR2+4
 4136 02a8 22       		.byte	0x22
 4137 02a9 94       		.byte	0x94
 4138 02aa 01       		.byte	0x1
 4139 02ab 08       		.byte	0x8
 4140 02ac FF       		.byte	0xff
 4141 02ad 1A       		.byte	0x1a
 4142 02ae 22       		.byte	0x22
 4143 02af 9F       		.byte	0x9f
 4144 02b0 00000000 		.4byte	0
 4145 02b4 00000000 		.4byte	0
 4146              	.LLST22:
 4147 02b8 0C000000 		.4byte	.LVL63
 4148 02bc 0E000000 		.4byte	.LVL64
 4149 02c0 0200     		.2byte	0x2
 4150 02c2 30       		.byte	0x30
 4151 02c3 9F       		.byte	0x9f
 4152 02c4 0E000000 		.4byte	.LVL64
 4153 02c8 22000000 		.4byte	.LVL70
 4154 02cc 0100     		.2byte	0x1
 4155 02ce 56       		.byte	0x56
 4156 02cf 22000000 		.4byte	.LVL70
 4157 02d3 28000000 		.4byte	.LFE55
 4158 02d7 0100     		.2byte	0x1
 4159 02d9 50       		.byte	0x50
 4160 02da 00000000 		.4byte	0
 4161 02de 00000000 		.4byte	0
 4162              	.LLST23:
 4163 02e2 02000000 		.4byte	.LVL71
 4164 02e6 08000000 		.4byte	.LVL72
 4165 02ea 0200     		.2byte	0x2
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 125


 4166 02ec 30       		.byte	0x30
 4167 02ed 9F       		.byte	0x9f
 4168 02ee 08000000 		.4byte	.LVL72
 4169 02f2 1C000000 		.4byte	.LVL76
 4170 02f6 0100     		.2byte	0x1
 4171 02f8 54       		.byte	0x54
 4172 02f9 00000000 		.4byte	0
 4173 02fd 00000000 		.4byte	0
 4174              	.LLST24:
 4175 0301 02000000 		.4byte	.LVL71
 4176 0305 08000000 		.4byte	.LVL72
 4177 0309 0200     		.2byte	0x2
 4178 030b 30       		.byte	0x30
 4179 030c 9F       		.byte	0x9f
 4180 030d 08000000 		.4byte	.LVL72
 4181 0311 1C000000 		.4byte	.LVL77
 4182 0315 0100     		.2byte	0x1
 4183 0317 55       		.byte	0x55
 4184 0318 1C000000 		.4byte	.LVL77
 4185 031c 1E000000 		.4byte	.LFE56
 4186 0320 0100     		.2byte	0x1
 4187 0322 50       		.byte	0x50
 4188 0323 00000000 		.4byte	0
 4189 0327 00000000 		.4byte	0
 4190              	.LLST25:
 4191 032b 00000000 		.4byte	.LVL78
 4192 032f 08000000 		.4byte	.LVL80
 4193 0333 0100     		.2byte	0x1
 4194 0335 50       		.byte	0x50
 4195 0336 08000000 		.4byte	.LVL80
 4196 033a 2C000000 		.4byte	.LFE57
 4197 033e 0400     		.2byte	0x4
 4198 0340 F3       		.byte	0xf3
 4199 0341 01       		.uleb128 0x1
 4200 0342 50       		.byte	0x50
 4201 0343 9F       		.byte	0x9f
 4202 0344 00000000 		.4byte	0
 4203 0348 00000000 		.4byte	0
 4204              	.LLST26:
 4205 034c 06000000 		.4byte	.LVL79
 4206 0350 1A000000 		.4byte	.LVL83
 4207 0354 0100     		.2byte	0x1
 4208 0356 54       		.byte	0x54
 4209 0357 1C000000 		.4byte	.LVL84
 4210 035b 20000000 		.4byte	.LVL85
 4211 035f 0100     		.2byte	0x1
 4212 0361 54       		.byte	0x54
 4213 0362 00000000 		.4byte	0
 4214 0366 00000000 		.4byte	0
 4215              	.LLST27:
 4216 036a 0E000000 		.4byte	.LVL81
 4217 036e 20000000 		.4byte	.LVL86
 4218 0372 0100     		.2byte	0x1
 4219 0374 55       		.byte	0x55
 4220 0375 20000000 		.4byte	.LVL86
 4221 0379 2C000000 		.4byte	.LFE57
 4222 037d 1E00     		.2byte	0x1e
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 126


 4223 037f F3       		.byte	0xf3
 4224 0380 01       		.uleb128 0x1
 4225 0381 50       		.byte	0x50
 4226 0382 03       		.byte	0x3
 4227 0383 00000000 		.4byte	.LANCHOR2
 4228 0387 22       		.byte	0x22
 4229 0388 94       		.byte	0x94
 4230 0389 01       		.byte	0x1
 4231 038a 08       		.byte	0x8
 4232 038b FF       		.byte	0xff
 4233 038c 1A       		.byte	0x1a
 4234 038d F3       		.byte	0xf3
 4235 038e 01       		.uleb128 0x1
 4236 038f 50       		.byte	0x50
 4237 0390 03       		.byte	0x3
 4238 0391 04000000 		.4byte	.LANCHOR2+4
 4239 0395 22       		.byte	0x22
 4240 0396 94       		.byte	0x94
 4241 0397 01       		.byte	0x1
 4242 0398 08       		.byte	0x8
 4243 0399 FF       		.byte	0xff
 4244 039a 1A       		.byte	0x1a
 4245 039b 22       		.byte	0x22
 4246 039c 9F       		.byte	0x9f
 4247 039d 00000000 		.4byte	0
 4248 03a1 00000000 		.4byte	0
 4249              	.LLST28:
 4250 03a5 00000000 		.4byte	.LVL87
 4251 03a9 08000000 		.4byte	.LVL89
 4252 03ad 0100     		.2byte	0x1
 4253 03af 50       		.byte	0x50
 4254 03b0 08000000 		.4byte	.LVL89
 4255 03b4 2C000000 		.4byte	.LFE58
 4256 03b8 0400     		.2byte	0x4
 4257 03ba F3       		.byte	0xf3
 4258 03bb 01       		.uleb128 0x1
 4259 03bc 50       		.byte	0x50
 4260 03bd 9F       		.byte	0x9f
 4261 03be 00000000 		.4byte	0
 4262 03c2 00000000 		.4byte	0
 4263              	.LLST29:
 4264 03c6 06000000 		.4byte	.LVL88
 4265 03ca 1A000000 		.4byte	.LVL92
 4266 03ce 0100     		.2byte	0x1
 4267 03d0 54       		.byte	0x54
 4268 03d1 1C000000 		.4byte	.LVL93
 4269 03d5 20000000 		.4byte	.LVL94
 4270 03d9 0100     		.2byte	0x1
 4271 03db 54       		.byte	0x54
 4272 03dc 00000000 		.4byte	0
 4273 03e0 00000000 		.4byte	0
 4274              	.LLST30:
 4275 03e4 0E000000 		.4byte	.LVL90
 4276 03e8 20000000 		.4byte	.LVL95
 4277 03ec 0100     		.2byte	0x1
 4278 03ee 55       		.byte	0x55
 4279 03ef 20000000 		.4byte	.LVL95
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 127


 4280 03f3 2C000000 		.4byte	.LFE58
 4281 03f7 1E00     		.2byte	0x1e
 4282 03f9 F3       		.byte	0xf3
 4283 03fa 01       		.uleb128 0x1
 4284 03fb 50       		.byte	0x50
 4285 03fc 03       		.byte	0x3
 4286 03fd 00000000 		.4byte	.LANCHOR2
 4287 0401 22       		.byte	0x22
 4288 0402 94       		.byte	0x94
 4289 0403 01       		.byte	0x1
 4290 0404 08       		.byte	0x8
 4291 0405 FF       		.byte	0xff
 4292 0406 1A       		.byte	0x1a
 4293 0407 F3       		.byte	0xf3
 4294 0408 01       		.uleb128 0x1
 4295 0409 50       		.byte	0x50
 4296 040a 03       		.byte	0x3
 4297 040b 04000000 		.4byte	.LANCHOR2+4
 4298 040f 22       		.byte	0x22
 4299 0410 94       		.byte	0x94
 4300 0411 01       		.byte	0x1
 4301 0412 08       		.byte	0x8
 4302 0413 FF       		.byte	0xff
 4303 0414 1A       		.byte	0x1a
 4304 0415 22       		.byte	0x22
 4305 0416 9F       		.byte	0x9f
 4306 0417 00000000 		.4byte	0
 4307 041b 00000000 		.4byte	0
 4308              	.LLST31:
 4309 041f 00000000 		.4byte	.LVL96
 4310 0423 08000000 		.4byte	.LVL97
 4311 0427 0100     		.2byte	0x1
 4312 0429 50       		.byte	0x50
 4313 042a 08000000 		.4byte	.LVL97
 4314 042e 0A000000 		.4byte	.LVL98
 4315 0432 0400     		.2byte	0x4
 4316 0434 F3       		.byte	0xf3
 4317 0435 01       		.uleb128 0x1
 4318 0436 50       		.byte	0x50
 4319 0437 9F       		.byte	0x9f
 4320 0438 0A000000 		.4byte	.LVL98
 4321 043c 1A000000 		.4byte	.LVL100
 4322 0440 0100     		.2byte	0x1
 4323 0442 50       		.byte	0x50
 4324 0443 00000000 		.4byte	0
 4325 0447 00000000 		.4byte	0
 4326              	.LLST32:
 4327 044b 00000000 		.4byte	.LVL96
 4328 044f 0A000000 		.4byte	.LVL98
 4329 0453 0100     		.2byte	0x1
 4330 0455 51       		.byte	0x51
 4331 0456 0A000000 		.4byte	.LVL98
 4332 045a 1C000000 		.4byte	.LFE59
 4333 045e 0100     		.2byte	0x1
 4334 0460 51       		.byte	0x51
 4335 0461 00000000 		.4byte	0
 4336 0465 00000000 		.4byte	0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 128


 4337              	.LLST33:
 4338 0469 00000000 		.4byte	.LVL101
 4339 046d 02000000 		.4byte	.LVL102
 4340 0471 0100     		.2byte	0x1
 4341 0473 50       		.byte	0x50
 4342 0474 02000000 		.4byte	.LVL102
 4343 0478 0C000000 		.4byte	.LFE60
 4344 047c 0400     		.2byte	0x4
 4345 047e F3       		.byte	0xf3
 4346 047f 01       		.uleb128 0x1
 4347 0480 50       		.byte	0x50
 4348 0481 9F       		.byte	0x9f
 4349 0482 00000000 		.4byte	0
 4350 0486 00000000 		.4byte	0
 4351              	.LLST34:
 4352 048a 00000000 		.4byte	.LVL101
 4353 048e 04000000 		.4byte	.LVL103
 4354 0492 0100     		.2byte	0x1
 4355 0494 51       		.byte	0x51
 4356 0495 04000000 		.4byte	.LVL103
 4357 0499 0C000000 		.4byte	.LFE60
 4358 049d 0400     		.2byte	0x4
 4359 049f F3       		.byte	0xf3
 4360 04a0 01       		.uleb128 0x1
 4361 04a1 51       		.byte	0x51
 4362 04a2 9F       		.byte	0x9f
 4363 04a3 00000000 		.4byte	0
 4364 04a7 00000000 		.4byte	0
 4365              	.LLST35:
 4366 04ab 02000000 		.4byte	.LVL102
 4367 04af 0A000000 		.4byte	.LVL106
 4368 04b3 0100     		.2byte	0x1
 4369 04b5 50       		.byte	0x50
 4370 04b6 00000000 		.4byte	0
 4371 04ba 00000000 		.4byte	0
 4372              	.LLST36:
 4373 04be 00000000 		.4byte	.LVL107
 4374 04c2 2A000000 		.4byte	.LVL110
 4375 04c6 0100     		.2byte	0x1
 4376 04c8 50       		.byte	0x50
 4377 04c9 2A000000 		.4byte	.LVL110
 4378 04cd DE000000 		.4byte	.LVL128
 4379 04d1 0100     		.2byte	0x1
 4380 04d3 54       		.byte	0x54
 4381 04d4 DE000000 		.4byte	.LVL128
 4382 04d8 E4000000 		.4byte	.LVL129
 4383 04dc 0400     		.2byte	0x4
 4384 04de F3       		.byte	0xf3
 4385 04df 01       		.uleb128 0x1
 4386 04e0 50       		.byte	0x50
 4387 04e1 9F       		.byte	0x9f
 4388 04e2 E4000000 		.4byte	.LVL129
 4389 04e6 E8000000 		.4byte	.LVL131
 4390 04ea 0100     		.2byte	0x1
 4391 04ec 54       		.byte	0x54
 4392 04ed E8000000 		.4byte	.LVL131
 4393 04f1 EC000000 		.4byte	.LVL132
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 129


 4394 04f5 0400     		.2byte	0x4
 4395 04f7 F3       		.byte	0xf3
 4396 04f8 01       		.uleb128 0x1
 4397 04f9 50       		.byte	0x50
 4398 04fa 9F       		.byte	0x9f
 4399 04fb EC000000 		.4byte	.LVL132
 4400 04ff F0000000 		.4byte	.LVL133
 4401 0503 0100     		.2byte	0x1
 4402 0505 54       		.byte	0x54
 4403 0506 F0000000 		.4byte	.LVL133
 4404 050a 20010000 		.4byte	.LFE36
 4405 050e 0400     		.2byte	0x4
 4406 0510 F3       		.byte	0xf3
 4407 0511 01       		.uleb128 0x1
 4408 0512 50       		.byte	0x50
 4409 0513 9F       		.byte	0x9f
 4410 0514 00000000 		.4byte	0
 4411 0518 00000000 		.4byte	0
 4412              	.LLST37:
 4413 051c AC000000 		.4byte	.LVL120
 4414 0520 B2000000 		.4byte	.LVL121
 4415 0524 0100     		.2byte	0x1
 4416 0526 53       		.byte	0x53
 4417 0527 B2000000 		.4byte	.LVL121
 4418 052b B6000000 		.4byte	.LVL122
 4419 052f 0100     		.2byte	0x1
 4420 0531 5C       		.byte	0x5c
 4421 0532 B6000000 		.4byte	.LVL122
 4422 0536 B8000000 		.4byte	.LVL123
 4423 053a 0100     		.2byte	0x1
 4424 053c 53       		.byte	0x53
 4425 053d B8000000 		.4byte	.LVL123
 4426 0541 C8000000 		.4byte	.LVL125
 4427 0545 0100     		.2byte	0x1
 4428 0547 57       		.byte	0x57
 4429 0548 00000000 		.4byte	0
 4430 054c 00000000 		.4byte	0
 4431              	.LLST38:
 4432 0550 52000000 		.4byte	.LVL115
 4433 0554 58000000 		.4byte	.LVL116
 4434 0558 0200     		.2byte	0x2
 4435 055a 31       		.byte	0x31
 4436 055b 9F       		.byte	0x9f
 4437 055c 5C000000 		.4byte	.LVL117
 4438 0560 60000000 		.4byte	.LVL118
 4439 0564 0200     		.2byte	0x2
 4440 0566 30       		.byte	0x30
 4441 0567 9F       		.byte	0x9f
 4442 0568 60000000 		.4byte	.LVL118
 4443 056c D6000000 		.4byte	.LVL126
 4444 0570 0100     		.2byte	0x1
 4445 0572 58       		.byte	0x58
 4446 0573 D6000000 		.4byte	.LVL126
 4447 0577 DC000000 		.4byte	.LVL127
 4448 057b 0100     		.2byte	0x1
 4449 057d 53       		.byte	0x53
 4450 057e DC000000 		.4byte	.LVL127
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 130


 4451 0582 E4000000 		.4byte	.LVL129
 4452 0586 0100     		.2byte	0x1
 4453 0588 58       		.byte	0x58
 4454 0589 E4000000 		.4byte	.LVL129
 4455 058d E6000000 		.4byte	.LVL130
 4456 0591 0100     		.2byte	0x1
 4457 0593 53       		.byte	0x53
 4458 0594 E6000000 		.4byte	.LVL130
 4459 0598 F6000000 		.4byte	.LVL135
 4460 059c 0100     		.2byte	0x1
 4461 059e 58       		.byte	0x58
 4462 059f 00000000 		.4byte	0
 4463 05a3 00000000 		.4byte	0
 4464              	.LLST39:
 4465 05a7 52000000 		.4byte	.LVL115
 4466 05ab 58000000 		.4byte	.LVL116
 4467 05af 0100     		.2byte	0x1
 4468 05b1 55       		.byte	0x55
 4469 05b2 5C000000 		.4byte	.LVL117
 4470 05b6 F6000000 		.4byte	.LVL134
 4471 05ba 0100     		.2byte	0x1
 4472 05bc 55       		.byte	0x55
 4473 05bd 00000000 		.4byte	0
 4474 05c1 00000000 		.4byte	0
 4475              	.LLST40:
 4476 05c5 1A000000 		.4byte	.LVL109
 4477 05c9 30000000 		.4byte	.LVL112
 4478 05cd 0100     		.2byte	0x1
 4479 05cf 57       		.byte	0x57
 4480 05d0 30000000 		.4byte	.LVL112
 4481 05d4 34000000 		.4byte	.LVL113
 4482 05d8 0100     		.2byte	0x1
 4483 05da 50       		.byte	0x50
 4484 05db 34000000 		.4byte	.LVL113
 4485 05df B8000000 		.4byte	.LVL123
 4486 05e3 0100     		.2byte	0x1
 4487 05e5 57       		.byte	0x57
 4488 05e6 00000000 		.4byte	0
 4489 05ea 00000000 		.4byte	0
 4490              	.LLST41:
 4491 05ee 00000000 		.4byte	.LVL136
 4492 05f2 07000000 		.4byte	.LVL137-1
 4493 05f6 0100     		.2byte	0x1
 4494 05f8 50       		.byte	0x50
 4495 05f9 07000000 		.4byte	.LVL137-1
 4496 05fd 0E000000 		.4byte	.LVL139
 4497 0601 0100     		.2byte	0x1
 4498 0603 54       		.byte	0x54
 4499 0604 0E000000 		.4byte	.LVL139
 4500 0608 10000000 		.4byte	.LFE37
 4501 060c 0400     		.2byte	0x4
 4502 060e F3       		.byte	0xf3
 4503 060f 01       		.uleb128 0x1
 4504 0610 50       		.byte	0x50
 4505 0611 9F       		.byte	0x9f
 4506 0612 00000000 		.4byte	0
 4507 0616 00000000 		.4byte	0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 131


 4508              	.LLST42:
 4509 061a 02000000 		.4byte	.LVL140
 4510 061e 06000000 		.4byte	.LVL141
 4511 0622 0200     		.2byte	0x2
 4512 0624 30       		.byte	0x30
 4513 0625 9F       		.byte	0x9f
 4514 0626 06000000 		.4byte	.LVL141
 4515 062a 1E000000 		.4byte	.LVL146
 4516 062e 0100     		.2byte	0x1
 4517 0630 54       		.byte	0x54
 4518 0631 00000000 		.4byte	0
 4519 0635 00000000 		.4byte	0
 4520              	.LLST43:
 4521 0639 0E000000 		.4byte	.LVL142
 4522 063d 14000000 		.4byte	.LVL143
 4523 0641 0100     		.2byte	0x1
 4524 0643 50       		.byte	0x50
 4525 0644 00000000 		.4byte	0
 4526 0648 00000000 		.4byte	0
 4527              	.LLST44:
 4528 064c 00000000 		.4byte	.LVL147
 4529 0650 0E000000 		.4byte	.LVL151
 4530 0654 0100     		.2byte	0x1
 4531 0656 50       		.byte	0x50
 4532 0657 0E000000 		.4byte	.LVL151
 4533 065b 30000000 		.4byte	.LFE39
 4534 065f 0400     		.2byte	0x4
 4535 0661 F3       		.byte	0xf3
 4536 0662 01       		.uleb128 0x1
 4537 0663 50       		.byte	0x50
 4538 0664 9F       		.byte	0x9f
 4539 0665 00000000 		.4byte	0
 4540 0669 00000000 		.4byte	0
 4541              	.LLST45:
 4542 066d 08000000 		.4byte	.LVL148
 4543 0671 0C000000 		.4byte	.LVL150
 4544 0675 0100     		.2byte	0x1
 4545 0677 55       		.byte	0x55
 4546 0678 0C000000 		.4byte	.LVL150
 4547 067c 0E000000 		.4byte	.LVL151
 4548 0680 0800     		.2byte	0x8
 4549 0682 72       		.byte	0x72
 4550 0683 04       		.sleb128 4
 4551 0684 94       		.byte	0x94
 4552 0685 01       		.byte	0x1
 4553 0686 08       		.byte	0x8
 4554 0687 FF       		.byte	0xff
 4555 0688 1A       		.byte	0x1a
 4556 0689 9F       		.byte	0x9f
 4557 068a 0E000000 		.4byte	.LVL151
 4558 068e 30000000 		.4byte	.LFE39
 4559 0692 0F00     		.2byte	0xf
 4560 0694 F3       		.byte	0xf3
 4561 0695 01       		.uleb128 0x1
 4562 0696 50       		.byte	0x50
 4563 0697 03       		.byte	0x3
 4564 0698 04000000 		.4byte	.LANCHOR2+4
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 132


 4565 069c 22       		.byte	0x22
 4566 069d 94       		.byte	0x94
 4567 069e 01       		.byte	0x1
 4568 069f 08       		.byte	0x8
 4569 06a0 FF       		.byte	0xff
 4570 06a1 1A       		.byte	0x1a
 4571 06a2 9F       		.byte	0x9f
 4572 06a3 00000000 		.4byte	0
 4573 06a7 00000000 		.4byte	0
 4574              	.LLST46:
 4575 06ab 0A000000 		.4byte	.LVL149
 4576 06af 0E000000 		.4byte	.LVL151
 4577 06b3 0100     		.2byte	0x1
 4578 06b5 54       		.byte	0x54
 4579 06b6 0E000000 		.4byte	.LVL151
 4580 06ba 30000000 		.4byte	.LFE39
 4581 06be 0F00     		.2byte	0xf
 4582 06c0 F3       		.byte	0xf3
 4583 06c1 01       		.uleb128 0x1
 4584 06c2 50       		.byte	0x50
 4585 06c3 03       		.byte	0x3
 4586 06c4 00000000 		.4byte	.LANCHOR2
 4587 06c8 22       		.byte	0x22
 4588 06c9 94       		.byte	0x94
 4589 06ca 01       		.byte	0x1
 4590 06cb 08       		.byte	0x8
 4591 06cc FF       		.byte	0xff
 4592 06cd 1A       		.byte	0x1a
 4593 06ce 9F       		.byte	0x9f
 4594 06cf 00000000 		.4byte	0
 4595 06d3 00000000 		.4byte	0
 4596              	.LLST47:
 4597 06d7 0C000000 		.4byte	.LVL150
 4598 06db 26000000 		.4byte	.LVL157
 4599 06df 0100     		.2byte	0x1
 4600 06e1 55       		.byte	0x55
 4601 06e2 26000000 		.4byte	.LVL157
 4602 06e6 30000000 		.4byte	.LFE39
 4603 06ea 1E00     		.2byte	0x1e
 4604 06ec F3       		.byte	0xf3
 4605 06ed 01       		.uleb128 0x1
 4606 06ee 50       		.byte	0x50
 4607 06ef 03       		.byte	0x3
 4608 06f0 04000000 		.4byte	.LANCHOR2+4
 4609 06f4 22       		.byte	0x22
 4610 06f5 94       		.byte	0x94
 4611 06f6 01       		.byte	0x1
 4612 06f7 08       		.byte	0x8
 4613 06f8 FF       		.byte	0xff
 4614 06f9 1A       		.byte	0x1a
 4615 06fa F3       		.byte	0xf3
 4616 06fb 01       		.uleb128 0x1
 4617 06fc 50       		.byte	0x50
 4618 06fd 03       		.byte	0x3
 4619 06fe 00000000 		.4byte	.LANCHOR2
 4620 0702 22       		.byte	0x22
 4621 0703 94       		.byte	0x94
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 133


 4622 0704 01       		.byte	0x1
 4623 0705 08       		.byte	0x8
 4624 0706 FF       		.byte	0xff
 4625 0707 1A       		.byte	0x1a
 4626 0708 22       		.byte	0x22
 4627 0709 9F       		.byte	0x9f
 4628 070a 00000000 		.4byte	0
 4629 070e 00000000 		.4byte	0
 4630              	.LLST48:
 4631 0712 0C000000 		.4byte	.LVL150
 4632 0716 26000000 		.4byte	.LVL156
 4633 071a 0100     		.2byte	0x1
 4634 071c 54       		.byte	0x54
 4635 071d 00000000 		.4byte	0
 4636 0721 00000000 		.4byte	0
 4637              	.LLST49:
 4638 0725 16000000 		.4byte	.LVL152
 4639 0729 1C000000 		.4byte	.LVL153
 4640 072d 0100     		.2byte	0x1
 4641 072f 50       		.byte	0x50
 4642 0730 00000000 		.4byte	0
 4643 0734 00000000 		.4byte	0
 4644              	.LLST50:
 4645 0738 00000000 		.4byte	.LVL158
 4646 073c 04000000 		.4byte	.LVL159
 4647 0740 0100     		.2byte	0x1
 4648 0742 50       		.byte	0x50
 4649 0743 04000000 		.4byte	.LVL159
 4650 0747 0C000000 		.4byte	.LFE61
 4651 074b 0400     		.2byte	0x4
 4652 074d F3       		.byte	0xf3
 4653 074e 01       		.uleb128 0x1
 4654 074f 50       		.byte	0x50
 4655 0750 9F       		.byte	0x9f
 4656 0751 00000000 		.4byte	0
 4657 0755 00000000 		.4byte	0
 4658              	.LLST51:
 4659 0759 00000000 		.4byte	.LVL160
 4660 075d 04000000 		.4byte	.LVL161
 4661 0761 0100     		.2byte	0x1
 4662 0763 50       		.byte	0x50
 4663 0764 04000000 		.4byte	.LVL161
 4664 0768 0C000000 		.4byte	.LFE62
 4665 076c 0400     		.2byte	0x4
 4666 076e F3       		.byte	0xf3
 4667 076f 01       		.uleb128 0x1
 4668 0770 50       		.byte	0x50
 4669 0771 9F       		.byte	0x9f
 4670 0772 00000000 		.4byte	0
 4671 0776 00000000 		.4byte	0
 4672              	.LLST52:
 4673 077a 00000000 		.4byte	.LVL162
 4674 077e 04000000 		.4byte	.LVL163
 4675 0782 0100     		.2byte	0x1
 4676 0784 50       		.byte	0x50
 4677 0785 04000000 		.4byte	.LVL163
 4678 0789 0C000000 		.4byte	.LFE63
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 134


 4679 078d 0400     		.2byte	0x4
 4680 078f F3       		.byte	0xf3
 4681 0790 01       		.uleb128 0x1
 4682 0791 50       		.byte	0x50
 4683 0792 9F       		.byte	0x9f
 4684 0793 00000000 		.4byte	0
 4685 0797 00000000 		.4byte	0
 4686              		.section	.debug_aranges,"",%progbits
 4687 0000 24010000 		.4byte	0x124
 4688 0004 0200     		.2byte	0x2
 4689 0006 00000000 		.4byte	.Ldebug_info0
 4690 000a 04       		.byte	0x4
 4691 000b 00       		.byte	0
 4692 000c 0000     		.2byte	0
 4693 000e 0000     		.2byte	0
 4694 0010 00000000 		.4byte	.LFB32
 4695 0014 3C000000 		.4byte	.LFE32-.LFB32
 4696 0018 00000000 		.4byte	.LFB33
 4697 001c 18000000 		.4byte	.LFE33-.LFB33
 4698 0020 00000000 		.4byte	.LFB34
 4699 0024 14000000 		.4byte	.LFE34-.LFB34
 4700 0028 00000000 		.4byte	.LFB35
 4701 002c 30000000 		.4byte	.LFE35-.LFB35
 4702 0030 00000000 		.4byte	.LFB40
 4703 0034 0C000000 		.4byte	.LFE40-.LFB40
 4704 0038 00000000 		.4byte	.LFB41
 4705 003c 0C000000 		.4byte	.LFE41-.LFB41
 4706 0040 00000000 		.4byte	.LFB42
 4707 0044 0C000000 		.4byte	.LFE42-.LFB42
 4708 0048 00000000 		.4byte	.LFB43
 4709 004c 0C000000 		.4byte	.LFE43-.LFB43
 4710 0050 00000000 		.4byte	.LFB44
 4711 0054 0C000000 		.4byte	.LFE44-.LFB44
 4712 0058 00000000 		.4byte	.LFB45
 4713 005c 0C000000 		.4byte	.LFE45-.LFB45
 4714 0060 00000000 		.4byte	.LFB46
 4715 0064 0C000000 		.4byte	.LFE46-.LFB46
 4716 0068 00000000 		.4byte	.LFB47
 4717 006c 0C000000 		.4byte	.LFE47-.LFB47
 4718 0070 00000000 		.4byte	.LFB48
 4719 0074 0C000000 		.4byte	.LFE48-.LFB48
 4720 0078 00000000 		.4byte	.LFB49
 4721 007c 0C000000 		.4byte	.LFE49-.LFB49
 4722 0080 00000000 		.4byte	.LFB50
 4723 0084 0C000000 		.4byte	.LFE50-.LFB50
 4724 0088 00000000 		.4byte	.LFB51
 4725 008c 0C000000 		.4byte	.LFE51-.LFB51
 4726 0090 00000000 		.4byte	.LFB52
 4727 0094 0C000000 		.4byte	.LFE52-.LFB52
 4728 0098 00000000 		.4byte	.LFB53
 4729 009c 0C000000 		.4byte	.LFE53-.LFB53
 4730 00a0 00000000 		.4byte	.LFB54
 4731 00a4 A8000000 		.4byte	.LFE54-.LFB54
 4732 00a8 00000000 		.4byte	.LFB55
 4733 00ac 28000000 		.4byte	.LFE55-.LFB55
 4734 00b0 00000000 		.4byte	.LFB56
 4735 00b4 1E000000 		.4byte	.LFE56-.LFB56
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 135


 4736 00b8 00000000 		.4byte	.LFB57
 4737 00bc 2C000000 		.4byte	.LFE57-.LFB57
 4738 00c0 00000000 		.4byte	.LFB58
 4739 00c4 2C000000 		.4byte	.LFE58-.LFB58
 4740 00c8 00000000 		.4byte	.LFB59
 4741 00cc 1C000000 		.4byte	.LFE59-.LFB59
 4742 00d0 00000000 		.4byte	.LFB60
 4743 00d4 0C000000 		.4byte	.LFE60-.LFB60
 4744 00d8 00000000 		.4byte	.LFB36
 4745 00dc 20010000 		.4byte	.LFE36-.LFB36
 4746 00e0 00000000 		.4byte	.LFB37
 4747 00e4 10000000 		.4byte	.LFE37-.LFB37
 4748 00e8 00000000 		.4byte	.LFB38
 4749 00ec 24000000 		.4byte	.LFE38-.LFB38
 4750 00f0 00000000 		.4byte	.LFB39
 4751 00f4 30000000 		.4byte	.LFE39-.LFB39
 4752 00f8 00000000 		.4byte	.LFB61
 4753 00fc 0C000000 		.4byte	.LFE61-.LFB61
 4754 0100 00000000 		.4byte	.LFB62
 4755 0104 0C000000 		.4byte	.LFE62-.LFB62
 4756 0108 00000000 		.4byte	.LFB63
 4757 010c 0C000000 		.4byte	.LFE63-.LFB63
 4758 0110 00000000 		.4byte	.LFB64
 4759 0114 0C000000 		.4byte	.LFE64-.LFB64
 4760 0118 00000000 		.4byte	.LFB65
 4761 011c 0C000000 		.4byte	.LFE65-.LFB65
 4762 0120 00000000 		.4byte	0
 4763 0124 00000000 		.4byte	0
 4764              		.section	.debug_ranges,"",%progbits
 4765              	.Ldebug_ranges0:
 4766 0000 00000000 		.4byte	.LFB32
 4767 0004 3C000000 		.4byte	.LFE32
 4768 0008 00000000 		.4byte	.LFB33
 4769 000c 18000000 		.4byte	.LFE33
 4770 0010 00000000 		.4byte	.LFB34
 4771 0014 14000000 		.4byte	.LFE34
 4772 0018 00000000 		.4byte	.LFB35
 4773 001c 30000000 		.4byte	.LFE35
 4774 0020 00000000 		.4byte	.LFB40
 4775 0024 0C000000 		.4byte	.LFE40
 4776 0028 00000000 		.4byte	.LFB41
 4777 002c 0C000000 		.4byte	.LFE41
 4778 0030 00000000 		.4byte	.LFB42
 4779 0034 0C000000 		.4byte	.LFE42
 4780 0038 00000000 		.4byte	.LFB43
 4781 003c 0C000000 		.4byte	.LFE43
 4782 0040 00000000 		.4byte	.LFB44
 4783 0044 0C000000 		.4byte	.LFE44
 4784 0048 00000000 		.4byte	.LFB45
 4785 004c 0C000000 		.4byte	.LFE45
 4786 0050 00000000 		.4byte	.LFB46
 4787 0054 0C000000 		.4byte	.LFE46
 4788 0058 00000000 		.4byte	.LFB47
 4789 005c 0C000000 		.4byte	.LFE47
 4790 0060 00000000 		.4byte	.LFB48
 4791 0064 0C000000 		.4byte	.LFE48
 4792 0068 00000000 		.4byte	.LFB49
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 136


 4793 006c 0C000000 		.4byte	.LFE49
 4794 0070 00000000 		.4byte	.LFB50
 4795 0074 0C000000 		.4byte	.LFE50
 4796 0078 00000000 		.4byte	.LFB51
 4797 007c 0C000000 		.4byte	.LFE51
 4798 0080 00000000 		.4byte	.LFB52
 4799 0084 0C000000 		.4byte	.LFE52
 4800 0088 00000000 		.4byte	.LFB53
 4801 008c 0C000000 		.4byte	.LFE53
 4802 0090 00000000 		.4byte	.LFB54
 4803 0094 A8000000 		.4byte	.LFE54
 4804 0098 00000000 		.4byte	.LFB55
 4805 009c 28000000 		.4byte	.LFE55
 4806 00a0 00000000 		.4byte	.LFB56
 4807 00a4 1E000000 		.4byte	.LFE56
 4808 00a8 00000000 		.4byte	.LFB57
 4809 00ac 2C000000 		.4byte	.LFE57
 4810 00b0 00000000 		.4byte	.LFB58
 4811 00b4 2C000000 		.4byte	.LFE58
 4812 00b8 00000000 		.4byte	.LFB59
 4813 00bc 1C000000 		.4byte	.LFE59
 4814 00c0 00000000 		.4byte	.LFB60
 4815 00c4 0C000000 		.4byte	.LFE60
 4816 00c8 00000000 		.4byte	.LFB36
 4817 00cc 20010000 		.4byte	.LFE36
 4818 00d0 00000000 		.4byte	.LFB37
 4819 00d4 10000000 		.4byte	.LFE37
 4820 00d8 00000000 		.4byte	.LFB38
 4821 00dc 24000000 		.4byte	.LFE38
 4822 00e0 00000000 		.4byte	.LFB39
 4823 00e4 30000000 		.4byte	.LFE39
 4824 00e8 00000000 		.4byte	.LFB61
 4825 00ec 0C000000 		.4byte	.LFE61
 4826 00f0 00000000 		.4byte	.LFB62
 4827 00f4 0C000000 		.4byte	.LFE62
 4828 00f8 00000000 		.4byte	.LFB63
 4829 00fc 0C000000 		.4byte	.LFE63
 4830 0100 00000000 		.4byte	.LFB64
 4831 0104 0C000000 		.4byte	.LFE64
 4832 0108 00000000 		.4byte	.LFB65
 4833 010c 0C000000 		.4byte	.LFE65
 4834 0110 00000000 		.4byte	0
 4835 0114 00000000 		.4byte	0
 4836              		.section	.debug_line,"",%progbits
 4837              	.Ldebug_line0:
 4838 0000 CD030000 		.section	.debug_str,"MS",%progbits,1
 4838      02006A00 
 4838      00000201 
 4838      FB0E0D00 
 4838      01010101 
 4839              	.LASF107:
 4840 0000 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 4840      656E7365 
 4840      5F73656E 
 4840      736F7242 
 4840      6173656C 
 4841              	.LASF84:
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 137


 4842 001b 43617053 		.ascii	"CapSense_IIR4Filter\000"
 4842      656E7365 
 4842      5F494952 
 4842      3446696C 
 4842      74657200 
 4843              	.LASF102:
 4844 002f 43617053 		.ascii	"CapSense_debounceCounter\000"
 4844      656E7365 
 4844      5F646562 
 4844      6F756E63 
 4844      65436F75 
 4845              	.LASF31:
 4846 0048 7363616E 		.ascii	"scanSpeedTbl\000"
 4846      53706565 
 4846      6454626C 
 4846      00
 4847              	.LASF110:
 4848 0055 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 4848      656E7365 
 4848      5F6C6F77 
 4848      42617365 
 4848      6C696E65 
 4849              	.LASF85:
 4850 0072 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold\000"
 4850      656E7365 
 4850      5F557064 
 4850      61746542 
 4850      6173656C 
 4851              	.LASF34:
 4852 0095 6E756D62 		.ascii	"numberOfSensors\000"
 4852      65724F66 
 4852      53656E73 
 4852      6F727300 
 4853              	.LASF38:
 4854 00a5 70747247 		.ascii	"ptrGetBitValue\000"
 4854      65744269 
 4854      7456616C 
 4854      756500
 4855              	.LASF82:
 4856 00b4 43617053 		.ascii	"CapSense_DisableWidget\000"
 4856      656E7365 
 4856      5F446973 
 4856      61626C65 
 4856      57696467 
 4857              	.LASF92:
 4858 00cb 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 4858      656E7365 
 4858      5F557064 
 4858      61746545 
 4858      6E61626C 
 4859              	.LASF120:
 4860 00eb 43617053 		.ascii	"CapSense_config\000"
 4860      656E7365 
 4860      5F636F6E 
 4860      66696700 
 4861              	.LASF54:
 4862 00fb 69735365 		.ascii	"isSensorEnabled\000"
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 138


 4862      6E736F72 
 4862      456E6162 
 4862      6C656400 
 4863              	.LASF78:
 4864 010b 6E756D4F 		.ascii	"numOfSensors\000"
 4864      6653656E 
 4864      736F7273 
 4864      00
 4865              	.LASF40:
 4866 0118 43617053 		.ascii	"CapSense_CONFIG_TYPE_POINTERS_P4_v2_60\000"
 4866      656E7365 
 4866      5F434F4E 
 4866      4649475F 
 4866      54595045 
 4867              	.LASF8:
 4868 013f 756E7369 		.ascii	"unsigned int\000"
 4868      676E6564 
 4868      20696E74 
 4868      00
 4869              	.LASF43:
 4870 014c 746F7461 		.ascii	"totalSensorsNum\000"
 4870      6C53656E 
 4870      736F7273 
 4870      4E756D00 
 4871              	.LASF28:
 4872 015c 73616D70 		.ascii	"sampleMaxTbl\000"
 4872      6C654D61 
 4872      7854626C 
 4872      00
 4873              	.LASF53:
 4874 0169 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 4874      656E7365 
 4874      5F496E69 
 4874      7469616C 
 4874      697A6545 
 4875              	.LASF26:
 4876 018d 7369676E 		.ascii	"signRegisterTbl\000"
 4876      52656769 
 4876      73746572 
 4876      54626C00 
 4877              	.LASF49:
 4878 019d 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 4878      656E7365 
 4878      5F496E69 
 4878      7469616C 
 4878      697A6553 
 4879              	.LASF123:
 4880 01bf 43617053 		.ascii	"CapSense_IsBusy\000"
 4880      656E7365 
 4880      5F497342 
 4880      75737900 
 4881              	.LASF55:
 4882 01cf 43617053 		.ascii	"CapSense_SetBaselineData\000"
 4882      656E7365 
 4882      5F536574 
 4882      42617365 
 4882      6C696E65 
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 139


 4883              	.LASF33:
 4884 01e8 72617744 		.ascii	"rawDataIndex\000"
 4884      61746149 
 4884      6E646578 
 4884      00
 4885              	.LASF42:
 4886 01f5 746F7461 		.ascii	"totalWidgetsNum\000"
 4886      6C576964 
 4886      67657473 
 4886      4E756D00 
 4887              	.LASF59:
 4888 0205 43617053 		.ascii	"CapSense_SetDiffCountData\000"
 4888      656E7365 
 4888      5F536574 
 4888      44696666 
 4888      436F756E 
 4889              	.LASF108:
 4890 021f 43617053 		.ascii	"CapSense_sensorSignal\000"
 4890      656E7365 
 4890      5F73656E 
 4890      736F7253 
 4890      69676E61 
 4891              	.LASF117:
 4892 0235 43617053 		.ascii	"CapSense_rawDataIndex\000"
 4892      656E7365 
 4892      5F726177 
 4892      44617461 
 4892      496E6465 
 4893              	.LASF66:
 4894 024b 43617053 		.ascii	"CapSense_SetNoiseThreshold\000"
 4894      656E7365 
 4894      5F536574 
 4894      4E6F6973 
 4894      65546872 
 4895              	.LASF93:
 4896 0266 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 4896      656E7365 
 4896      5F557064 
 4896      61746557 
 4896      69646765 
 4897              	.LASF115:
 4898 0284 43617053 		.ascii	"CapSense_hysteresis\000"
 4898      656E7365 
 4898      5F687973 
 4898      74657265 
 4898      73697300 
 4899              	.LASF12:
 4900 0298 666C6F61 		.ascii	"float\000"
 4900      7400
 4901              	.LASF23:
 4902 029e 7265736F 		.ascii	"resolutionsTbl\000"
 4902      6C757469 
 4902      6F6E7354 
 4902      626C00
 4903              	.LASF62:
 4904 02ad 43617053 		.ascii	"CapSense_GetNoiseThreshold\000"
 4904      656E7365 
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 140


 4904      5F476574 
 4904      4E6F6973 
 4904      65546872 
 4905              	.LASF25:
 4906 02c8 72756E6E 		.ascii	"runningDifferenceTbl\000"
 4906      696E6744 
 4906      69666665 
 4906      72656E63 
 4906      6554626C 
 4907              	.LASF7:
 4908 02dd 6C6F6E67 		.ascii	"long long unsigned int\000"
 4908      206C6F6E 
 4908      6720756E 
 4908      7369676E 
 4908      65642069 
 4909              	.LASF104:
 4910 02f4 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 4910      656E7365 
 4910      5F73656E 
 4910      736F7245 
 4910      6E61626C 
 4911              	.LASF52:
 4912 030e 77696467 		.ascii	"widget\000"
 4912      657400
 4913              	.LASF112:
 4914 0315 43617053 		.ascii	"CapSense_fingerThreshold\000"
 4914      656E7365 
 4914      5F66696E 
 4914      67657254 
 4914      68726573 
 4915              	.LASF47:
 4916 032e 43617053 		.ascii	"CapSense_CONFIG_TYPE_P4_v2_60\000"
 4916      656E7365 
 4916      5F434F4E 
 4916      4649475F 
 4916      54595045 
 4917              	.LASF105:
 4918 034c 43617053 		.ascii	"CapSense_widgetNumber\000"
 4918      656E7365 
 4918      5F776964 
 4918      6765744E 
 4918      756D6265 
 4919              	.LASF65:
 4920 0362 43617053 		.ascii	"CapSense_SetFingerThreshold\000"
 4920      656E7365 
 4920      5F536574 
 4920      46696E67 
 4920      65725468 
 4921              	.LASF101:
 4922 037e 43617053 		.ascii	"CapSense_DisableRawDataFilters\000"
 4922      656E7365 
 4922      5F446973 
 4922      61626C65 
 4922      52617744 
 4923              	.LASF60:
 4924 039d 76616C75 		.ascii	"value\000"
 4924      6500
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 141


 4925              	.LASF63:
 4926 03a3 43617053 		.ascii	"CapSense_GetFingerHysteresis\000"
 4926      656E7365 
 4926      5F476574 
 4926      46696E67 
 4926      65724879 
 4927              	.LASF129:
 4928 03c0 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4928      43313120 
 4928      352E342E 
 4928      31203230 
 4928      31363036 
 4929 03f3 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4929      20726576 
 4929      6973696F 
 4929      6E203233 
 4929      37373135 
 4930 0426 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4930      66756E63 
 4930      74696F6E 
 4930      2D736563 
 4930      74696F6E 
 4931              	.LASF58:
 4932 044e 43617053 		.ascii	"CapSense_GetDiffCountData\000"
 4932      656E7365 
 4932      5F476574 
 4932      44696666 
 4932      436F756E 
 4933              	.LASF87:
 4934 0468 7369676E 		.ascii	"sign\000"
 4934      00
 4935              	.LASF24:
 4936 046d 6E6F6973 		.ascii	"noiseEnvelopeTbl\000"
 4936      65456E76 
 4936      656C6F70 
 4936      6554626C 
 4936      00
 4937              	.LASF86:
 4938 047e 63616C63 		.ascii	"calc\000"
 4938      00
 4939              	.LASF37:
 4940 0483 70747252 		.ascii	"ptrReadSensorRaw\000"
 4940      65616453 
 4940      656E736F 
 4940      72526177 
 4940      00
 4941              	.LASF75:
 4942 0494 68797374 		.ascii	"hysteresis\000"
 4942      65726573 
 4942      697300
 4943              	.LASF122:
 4944 049f 43617053 		.ascii	"CapSense_ScanSensor\000"
 4944      656E7365 
 4944      5F536361 
 4944      6E53656E 
 4944      736F7200 
 4945              	.LASF89:
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 142


 4946 04b3 66696C74 		.ascii	"filteredRawData\000"
 4946      65726564 
 4946      52617744 
 4946      61746100 
 4947              	.LASF94:
 4948 04c3 73656E73 		.ascii	"sensorsPerWidget\000"
 4948      6F727350 
 4948      65725769 
 4948      64676574 
 4948      00
 4949              	.LASF80:
 4950 04d4 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 4950      656E7365 
 4950      5F436865 
 4950      636B4973 
 4950      416E7957 
 4951              	.LASF118:
 4952 04f4 43617053 		.ascii	"CapSense_numberOfSensors\000"
 4952      656E7365 
 4952      5F6E756D 
 4952      6265724F 
 4952      6653656E 
 4953              	.LASF114:
 4954 050d 43617053 		.ascii	"CapSense_negativeNoiseThreshold\000"
 4954      656E7365 
 4954      5F6E6567 
 4954      61746976 
 4954      654E6F69 
 4955              	.LASF41:
 4956 052d 746F7461 		.ascii	"totalScanslotsNum\000"
 4956      6C536361 
 4956      6E736C6F 
 4956      74734E75 
 4956      6D00
 4957              	.LASF127:
 4958 053f 4D656173 		.ascii	"MeasureNoiseEnvelope_P4_v2_60\000"
 4958      7572654E 
 4958      6F697365 
 4958      456E7665 
 4958      6C6F7065 
 4959              	.LASF50:
 4960 055d 73656E73 		.ascii	"sensor\000"
 4960      6F7200
 4961              	.LASF44:
 4962 0564 73656E73 		.ascii	"sensetivitySeed\000"
 4962      65746976 
 4962      69747953 
 4962      65656400 
 4963              	.LASF81:
 4964 0574 43617053 		.ascii	"CapSense_EnableWidget\000"
 4964      656E7365 
 4964      5F456E61 
 4964      626C6557 
 4964      69646765 
 4965              	.LASF14:
 4966 058a 63686172 		.ascii	"char\000"
 4966      00
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 143


 4967              	.LASF64:
 4968 058f 43617053 		.ascii	"CapSense_GetNegativeNoiseThreshold\000"
 4968      656E7365 
 4968      5F476574 
 4968      4E656761 
 4968      74697665 
 4969              	.LASF32:
 4970 05b2 70726573 		.ascii	"prescalerTable\000"
 4970      63616C65 
 4970      72546162 
 4970      6C6500
 4971              	.LASF10:
 4972 05c1 75696E74 		.ascii	"uint16\000"
 4972      313600
 4973              	.LASF56:
 4974 05c8 64617461 		.ascii	"data\000"
 4974      00
 4975              	.LASF17:
 4976 05cd 69646163 		.ascii	"idac1LevelsTbl\000"
 4976      314C6576 
 4976      656C7354 
 4976      626C00
 4977              	.LASF77:
 4978 05dc 72617749 		.ascii	"rawIndex\000"
 4978      6E646578 
 4978      00
 4979              	.LASF128:
 4980 05e5 43617053 		.ascii	"CapSense_UpdateThresholds\000"
 4980      656E7365 
 4980      5F557064 
 4980      61746554 
 4980      68726573 
 4981              	.LASF124:
 4982 05ff 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 4982      656E7365 
 4982      5F536361 
 4982      6E456E61 
 4982      626C6564 
 4983              	.LASF6:
 4984 061b 6C6F6E67 		.ascii	"long long int\000"
 4984      206C6F6E 
 4984      6720696E 
 4984      7400
 4985              	.LASF97:
 4986 0629 43617053 		.ascii	"CapSense_GetWidgetNumber\000"
 4986      656E7365 
 4986      5F476574 
 4986      57696467 
 4986      65744E75 
 4987              	.LASF72:
 4988 0642 6465626F 		.ascii	"debounce\000"
 4988      756E6365 
 4988      00
 4989              	.LASF36:
 4990 064b 70747250 		.ascii	"ptrPreScan\000"
 4990      72655363 
 4990      616E00
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 144


 4991              	.LASF71:
 4992 0656 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 4992      656E7365 
 4992      5F436865 
 4992      636B4973 
 4992      53656E73 
 4993              	.LASF35:
 4994 0673 70747247 		.ascii	"ptrGetRaw\000"
 4994      65745261 
 4994      7700
 4995              	.LASF91:
 4996 067d 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 4996      656E7365 
 4996      5F557064 
 4996      61746553 
 4996      656E736F 
 4997              	.LASF48:
 4998 069b 43617053 		.ascii	"CapSense_BaseInit\000"
 4998      656E7365 
 4998      5F426173 
 4998      65496E69 
 4998      7400
 4999              	.LASF27:
 5000 06ad 73616D70 		.ascii	"sampleMinTbl\000"
 5000      6C654D69 
 5000      6E54626C 
 5000      00
 5001              	.LASF103:
 5002 06ba 43617053 		.ascii	"CapSense_sensorRaw\000"
 5002      656E7365 
 5002      5F73656E 
 5002      736F7252 
 5002      617700
 5003              	.LASF98:
 5004 06cd 43617053 		.ascii	"CapSense_GetLowBaselineReset\000"
 5004      656E7365 
 5004      5F476574 
 5004      4C6F7742 
 5004      6173656C 
 5005              	.LASF68:
 5006 06ea 43617053 		.ascii	"CapSense_SetNegativeNoiseThreshold\000"
 5006      656E7365 
 5006      5F536574 
 5006      4E656761 
 5006      74697665 
 5007              	.LASF11:
 5008 070d 75696E74 		.ascii	"uint32\000"
 5008      333200
 5009              	.LASF67:
 5010 0714 43617053 		.ascii	"CapSense_SetFingerHysteresis\000"
 5010      656E7365 
 5010      5F536574 
 5010      46696E67 
 5010      65724879 
 5011              	.LASF61:
 5012 0731 43617053 		.ascii	"CapSense_GetFingerThreshold\000"
 5012      656E7365 
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 145


 5012      5F476574 
 5012      46696E67 
 5012      65725468 
 5013              	.LASF16:
 5014 074d 6C6F6E67 		.ascii	"long double\000"
 5014      20646F75 
 5014      626C6500 
 5015              	.LASF96:
 5016 0759 6C617374 		.ascii	"lastSensor\000"
 5016      53656E73 
 5016      6F7200
 5017              	.LASF45:
 5018 0764 6866636C 		.ascii	"hfclkFreq_MHz\000"
 5018      6B467265 
 5018      715F4D48 
 5018      7A00
 5019              	.LASF18:
 5020 0772 69646163 		.ascii	"idac2LevelsTbl\000"
 5020      324C6576 
 5020      656C7354 
 5020      626C00
 5021              	.LASF2:
 5022 0781 73686F72 		.ascii	"short int\000"
 5022      7420696E 
 5022      7400
 5023              	.LASF4:
 5024 078b 6C6F6E67 		.ascii	"long int\000"
 5024      20696E74 
 5024      00
 5025              	.LASF95:
 5026 0794 66697273 		.ascii	"firstSensor\000"
 5026      7453656E 
 5026      736F7200 
 5027              	.LASF116:
 5028 07a0 43617053 		.ascii	"CapSense_debounce\000"
 5028      656E7365 
 5028      5F646562 
 5028      6F756E63 
 5028      6500
 5029              	.LASF22:
 5030 07b2 77696467 		.ascii	"widgetNubmersTbl\000"
 5030      65744E75 
 5030      626D6572 
 5030      7354626C 
 5030      00
 5031              	.LASF100:
 5032 07c3 43617053 		.ascii	"CapSense_EnableRawDataFilters\000"
 5032      656E7365 
 5032      5F456E61 
 5032      626C6552 
 5032      61774461 
 5033              	.LASF111:
 5034 07e1 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 5034      656E7365 
 5034      5F6C6F77 
 5034      42617365 
 5034      6C696E65 
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 146


 5035              	.LASF30:
 5036 07fb 6B56616C 		.ascii	"kValueTbl\000"
 5036      75655462 
 5036      6C00
 5037              	.LASF106:
 5038 0805 43617053 		.ascii	"CapSense_sensorBaseline\000"
 5038      656E7365 
 5038      5F73656E 
 5038      736F7242 
 5038      6173656C 
 5039              	.LASF15:
 5040 081d 73697A65 		.ascii	"sizetype\000"
 5040      74797065 
 5040      00
 5041              	.LASF5:
 5042 0826 6C6F6E67 		.ascii	"long unsigned int\000"
 5042      20756E73 
 5042      69676E65 
 5042      6420696E 
 5042      7400
 5043              	.LASF46:
 5044 0838 706F696E 		.ascii	"pointers\000"
 5044      74657273 
 5044      00
 5045              	.LASF90:
 5046 0841 6E6F6973 		.ascii	"noiseThreshold\000"
 5046      65546872 
 5046      6573686F 
 5046      6C6400
 5047              	.LASF29:
 5048 0850 70726576 		.ascii	"previousSampleTbl\000"
 5048      696F7573 
 5048      53616D70 
 5048      6C655462 
 5048      6C00
 5049              	.LASF69:
 5050 0862 43617053 		.ascii	"CapSense_SetDebounce\000"
 5050      656E7365 
 5050      5F536574 
 5050      4465626F 
 5050      756E6365 
 5051              	.LASF74:
 5052 0877 66696E67 		.ascii	"fingerThreshold\000"
 5052      65725468 
 5052      72657368 
 5052      6F6C6400 
 5053              	.LASF20:
 5054 0887 63686172 		.ascii	"chargeDivTbl\000"
 5054      67654469 
 5054      7654626C 
 5054      00
 5055              	.LASF1:
 5056 0894 756E7369 		.ascii	"unsigned char\000"
 5056      676E6564 
 5056      20636861 
 5056      7200
 5057              	.LASF113:
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 147


 5058 08a2 43617053 		.ascii	"CapSense_noiseThreshold\000"
 5058      656E7365 
 5058      5F6E6F69 
 5058      73655468 
 5058      72657368 
 5059              	.LASF73:
 5060 08ba 6465626F 		.ascii	"debounceIndex\000"
 5060      756E6365 
 5060      496E6465 
 5060      7800
 5061              	.LASF51:
 5062 08c8 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 5062      656E7365 
 5062      5F496E69 
 5062      7469616C 
 5062      697A6541 
 5063              	.LASF57:
 5064 08e8 43617053 		.ascii	"CapSense_GetBaselineData\000"
 5064      656E7365 
 5064      5F476574 
 5064      42617365 
 5064      6C696E65 
 5065              	.LASF70:
 5066 0901 43617053 		.ascii	"CapSense_SetLowBaselineReset\000"
 5066      656E7365 
 5066      5F536574 
 5066      4C6F7742 
 5066      6173656C 
 5067              	.LASF19:
 5068 091e 73656E73 		.ascii	"sensetivityTbl\000"
 5068      65746976 
 5068      69747954 
 5068      626C00
 5069              	.LASF126:
 5070 092d 43617053 		.ascii	"CapSense_SetBitValue\000"
 5070      656E7365 
 5070      5F536574 
 5070      42697456 
 5070      616C7565 
 5071              	.LASF130:
 5072 0942 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_CSHL.c\000"
 5072      72617465 
 5072      645F536F 
 5072      75726365 
 5072      5C50536F 
 5073              	.LASF125:
 5074 0969 43617053 		.ascii	"CapSense_GetBitValue\000"
 5074      656E7365 
 5074      5F476574 
 5074      42697456 
 5074      616C7565 
 5075              	.LASF79:
 5076 097e 73746174 		.ascii	"state\000"
 5076      6500
 5077              	.LASF121:
 5078 0984 43617053 		.ascii	"CapSense_enableRawFilters\000"
 5078      656E7365 
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 148


 5078      5F656E61 
 5078      626C6552 
 5078      61774669 
 5079              	.LASF21:
 5080 099e 6D6F6444 		.ascii	"modDivTbl\000"
 5080      69765462 
 5080      6C00
 5081              	.LASF0:
 5082 09a8 7369676E 		.ascii	"signed char\000"
 5082      65642063 
 5082      68617200 
 5083              	.LASF3:
 5084 09b4 73686F72 		.ascii	"short unsigned int\000"
 5084      7420756E 
 5084      7369676E 
 5084      65642069 
 5084      6E7400
 5085              	.LASF39:
 5086 09c7 70747253 		.ascii	"ptrSetBitValue\000"
 5086      65744269 
 5086      7456616C 
 5086      756500
 5087              	.LASF83:
 5088 09d6 43617053 		.ascii	"CapSense_MedianFilter\000"
 5088      656E7365 
 5088      5F4D6564 
 5088      69616E46 
 5088      696C7465 
 5089              	.LASF88:
 5090 09ec 74656D70 		.ascii	"tempRaw\000"
 5090      52617700 
 5091              	.LASF99:
 5092 09f4 43617053 		.ascii	"CapSense_GetDebounce\000"
 5092      656E7365 
 5092      5F476574 
 5092      4465626F 
 5092      756E6365 
 5093              	.LASF76:
 5094 0a09 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 5094      656E7365 
 5094      5F436865 
 5094      636B4973 
 5094      57696467 
 5095              	.LASF9:
 5096 0a26 75696E74 		.ascii	"uint8\000"
 5096      3800
 5097              	.LASF13:
 5098 0a2c 646F7562 		.ascii	"double\000"
 5098      6C6500
 5099              	.LASF119:
 5100 0a33 43617053 		.ascii	"CapSense_rawFilterData1\000"
 5100      656E7365 
 5100      5F726177 
 5100      46696C74 
 5100      65724461 
 5101              	.LASF131:
 5102 0a4b 433A5C55 		.ascii	"C:\\Users\\srhi\\Desktop\\PSOC\\FINAL_GAME.cydsn\000"
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccBcKAdU.s 			page 149


 5102      73657273 
 5102      5C737268 
 5102      695C4465 
 5102      736B746F 
 5103              	.LASF109:
 5104 0a77 43617053 		.ascii	"CapSense_sensorOnMask\000"
 5104      656E7365 
 5104      5F73656E 
 5104      736F724F 
 5104      6E4D6173 
 5105              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
