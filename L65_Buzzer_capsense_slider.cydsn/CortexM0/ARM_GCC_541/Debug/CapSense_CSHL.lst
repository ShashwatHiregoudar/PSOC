ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_CSHL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_BaseInit,"ax",%progbits
  20              		.align	2
  21              		.global	CapSense_BaseInit
  22              		.code	16
  23              		.thumb_func
  24              		.type	CapSense_BaseInit, %function
  25              	CapSense_BaseInit:
  26              	.LFB32:
  27              		.file 1 "Generated_Source\\PSoC4\\CapSense_CSHL.c"
   1:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:Generated_Source\PSoC4/CapSense_CSHL.c **** * Version 2.60
   4:Generated_Source\PSoC4/CapSense_CSHL.c **** *
   5:Generated_Source\PSoC4/CapSense_CSHL.c **** * Description:
   6:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CSD component.
   8:Generated_Source\PSoC4/CapSense_CSHL.c **** *
   9:Generated_Source\PSoC4/CapSense_CSHL.c **** * Note:
  10:Generated_Source\PSoC4/CapSense_CSHL.c **** *
  11:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CapSense_CSHL.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  18:Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_PVT.h"
  20:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  21:Generated_Source\PSoC4/CapSense_CSHL.c **** /* SmartSense functions */
  22:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  23:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern void CapSense_UpdateThresholds(uint32 sensor);
  24:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  25:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  26:Generated_Source\PSoC4/CapSense_CSHL.c **** /* Storage of filters data */
  27:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
  28:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) )
  29:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  30:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 2


  31:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  32:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  33:Generated_Source\PSoC4/CapSense_CSHL.c **** #elif ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER))   || \
  34:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER))   || \
  35:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
  36:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))   || \
  37:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)) )
  38:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  39:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  40:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  41:Generated_Source\PSoC4/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  42:Generated_Source\PSoC4/CapSense_CSHL.c ****         */
  43:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  44:Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  45:Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint8 CapSense_sensorEnableMask[CapSense_TOTAL_SENSOR_MASK];
  46:Generated_Source\PSoC4/CapSense_CSHL.c **** extern const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT];
  47:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  48:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
  49:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE];
  50:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
  51:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  52:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  53:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  54:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  55:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[CapSense_TOTAL_SENSOR_MASK] = {0u};
  56:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  57:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  58:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineReset[CapSense_TOTAL_SENSOR_COUNT] = {
  59:Generated_Source\PSoC4/CapSense_CSHL.c ****     30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 
  60:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  61:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  62:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  63:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  64:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  65:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern CapSense_CONFIG_TYPE_P4_v2_60 CapSense_config;
  66:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  67:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  68:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
  69:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
  70:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
  71:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  72:Generated_Source\PSoC4/CapSense_CSHL.c **** /* Generated by Customizer */
  73:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[CapSense_THRESHOLD_TBL_SIZE];
  74:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  75:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  76:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  77:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_negativeNoiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  78:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  79:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_hysteresis[CapSense_WIDGET_PARAM_TBL_SIZE];
  80:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  81:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  82:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, 
  83:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  84:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  85:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_rawDataIndex[] = {
  86:Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* LinearSlider0__LS */
  87:Generated_Source\PSoC4/CapSense_CSHL.c **** };
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 3


  88:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  89:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_numberOfSensors[] = {
  90:Generated_Source\PSoC4/CapSense_CSHL.c ****     10u, /* LinearSlider0__LS */
  91:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  92:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  93:Generated_Source\PSoC4/CapSense_CSHL.c **** static const uint16 CapSense_centroidMult[] = {
  94:Generated_Source\PSoC4/CapSense_CSHL.c ****     2844u, 
  95:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  96:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  97:Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_posFiltersMask[] = {
  98:Generated_Source\PSoC4/CapSense_CSHL.c ****     0x8u, 
  99:Generated_Source\PSoC4/CapSense_CSHL.c **** };
 100:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 101:Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_posFiltersData[] = {
 102:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, 0u, 0u, 
 103:Generated_Source\PSoC4/CapSense_CSHL.c **** };
 104:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 105:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 106:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 107:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 108:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 109:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 110:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 111:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 112:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 113:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 114:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value.
 115:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and
 116:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 117:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and
 118:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an
 119:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 120:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 121:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 122:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 123:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 124:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 125:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 126:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 127:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 128:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store the baseline value.
 129:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store the fraction byte of
 130:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the baseline value.
 131:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store a difference between
 132:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 133:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store a previous sample of
 134:Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 135:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before a previous sample
 136:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 137:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 138:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 139:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 140:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 141:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 142:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_BaseInit(uint32 sensor)
 143:Generated_Source\PSoC4/CapSense_CSHL.c **** {
  28              		.loc 1 143 0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 4


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 10B5     		push	{r4, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
 144:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 145:Generated_Source\PSoC4/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 146:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
 147:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 148:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 149:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 150:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 debounceIndex;
 151:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 152:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 153:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 154:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 155:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 156:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 157:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 158:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 159:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline */
 160:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
  37              		.loc 1 160 0
  38 0002 4300     		lsls	r3, r0, #1
  39 0004 054A     		ldr	r2, .L2
  40 0006 9A5A     		ldrh	r2, [r3, r2]
  41 0008 0549     		ldr	r1, .L2+4
  42 000a 5A52     		strh	r2, [r3, r1]
 161:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
  43              		.loc 1 161 0
  44 000c 0818     		adds	r0, r1, r0
  45              	.LVL1:
  46 000e 0021     		movs	r1, #0
  47 0010 0175     		strb	r1, [r0, #20]
 162:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
  48              		.loc 1 162 0
  49 0012 2024     		movs	r4, #32
  50 0014 0155     		strb	r1, [r0, r4]
 163:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 164:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 165:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 166:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) ||\
 167:Generated_Source\PSoC4/CapSense_CSHL.c ****          (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)))
 168:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 169:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 170:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 171:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 172:Generated_Source\PSoC4/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 173:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 174:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 175:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 176:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 177:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 178:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 5


  51              		.loc 1 178 0
  52 0016 0349     		ldr	r1, .L2+8
  53 0018 5A52     		strh	r2, [r3, r1]
 179:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 180:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 181:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* No Raw filters */
 182:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 183:Generated_Source\PSoC4/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 184:Generated_Source\PSoC4/CapSense_CSHL.c ****             */
 185:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 186:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 187:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 188:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 189:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 190:Generated_Source\PSoC4/CapSense_CSHL.c **** }
  54              		.loc 1 190 0
  55              		@ sp needed
  56 001a 10BD     		pop	{r4, pc}
  57              	.L3:
  58              		.align	2
  59              	.L2:
  60 001c 00000000 		.word	CapSense_sensorRaw
  61 0020 00000000 		.word	.LANCHOR0
  62 0024 00000000 		.word	CapSense_rawFilterData1
  63              		.cfi_endproc
  64              	.LFE32:
  65              		.size	CapSense_BaseInit, .-CapSense_BaseInit
  66              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
  67              		.align	2
  68              		.global	CapSense_InitializeSensorBaseline
  69              		.code	16
  70              		.thumb_func
  71              		.type	CapSense_InitializeSensorBaseline, %function
  72              	CapSense_InitializeSensorBaseline:
  73              	.LFB33:
 191:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 192:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 193:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 194:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 195:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 196:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 197:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 198:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 199:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair
 200:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the
 201:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if
 202:Generated_Source\PSoC4/CapSense_CSHL.c **** *  enabled.
 203:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 204:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 205:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 206:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 207:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 208:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 209:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 210:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 211:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 212:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 6


 213:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 214:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 215:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 216:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 217:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint32 sensor)
 218:Generated_Source\PSoC4/CapSense_CSHL.c **** {
  74              		.loc 1 218 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              	.LVL2:
  79 0000 10B5     		push	{r4, lr}
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 4, -8
  82              		.cfi_offset 14, -4
  83 0002 0400     		movs	r4, r0
 219:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Scan sensor */
 220:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
  84              		.loc 1 220 0
  85 0004 FFF7FEFF 		bl	CapSense_ScanSensor
  86              	.LVL3:
  87              	.L5:
 221:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
  88              		.loc 1 221 0 discriminator 1
  89 0008 FFF7FEFF 		bl	CapSense_IsBusy
  90              	.LVL4:
  91 000c 0028     		cmp	r0, #0
  92 000e FBD1     		bne	.L5
 222:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 223:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 224:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 225:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 226:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */
 227:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_BaseInit(sensor);
  93              		.loc 1 227 0
  94 0010 2000     		movs	r0, r4
  95 0012 FFF7FEFF 		bl	CapSense_BaseInit
  96              	.LVL5:
 228:Generated_Source\PSoC4/CapSense_CSHL.c **** }
  97              		.loc 1 228 0
  98              		@ sp needed
  99              	.LVL6:
 100 0016 10BD     		pop	{r4, pc}
 101              		.cfi_endproc
 102              	.LFE33:
 103              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 104              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 105              		.align	2
 106              		.global	CapSense_InitializeAllBaselines
 107              		.code	16
 108              		.thumb_func
 109              		.type	CapSense_InitializeAllBaselines, %function
 110              	CapSense_InitializeAllBaselines:
 111              	.LFB34:
 229:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 230:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 231:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 7


 232:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 233:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 234:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 235:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 236:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to load the
 237:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning
 238:Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for
 239:Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 240:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 241:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 242:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 243:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 244:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 245:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 246:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 247:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 248:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 249:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 250:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 251:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 252:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 253:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 254:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 255:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 112              		.loc 1 255 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116 0000 10B5     		push	{r4, lr}
 117              		.cfi_def_cfa_offset 8
 118              		.cfi_offset 4, -8
 119              		.cfi_offset 14, -4
 120              	.LVL7:
 256:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 257:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 258:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 121              		.loc 1 258 0
 122 0002 0024     		movs	r4, #0
 123 0004 03E0     		b	.L7
 124              	.LVL8:
 125              	.L8:
 259:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 260:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_InitializeSensorBaseline(i);
 126              		.loc 1 260 0 discriminator 3
 127 0006 2000     		movs	r0, r4
 128 0008 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 129              	.LVL9:
 258:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 130              		.loc 1 258 0 discriminator 3
 131 000c 0134     		adds	r4, r4, #1
 132              	.LVL10:
 133              	.L7:
 258:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 134              		.loc 1 258 0 is_stmt 0 discriminator 1
 135 000e 092C     		cmp	r4, #9
 136 0010 F9D9     		bls	.L8
 261:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 8


 262:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 137              		.loc 1 262 0 is_stmt 1
 138              		@ sp needed
 139              	.LVL11:
 140 0012 10BD     		pop	{r4, pc}
 141              		.cfi_endproc
 142              	.LFE34:
 143              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 144              		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 145              		.align	2
 146              		.global	CapSense_InitializeEnabledBaselines
 147              		.code	16
 148              		.thumb_func
 149              		.type	CapSense_InitializeEnabledBaselines, %function
 150              	CapSense_InitializeEnabledBaselines:
 151              	.LFB35:
 263:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 264:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 265:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 266:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 267:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 268:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 269:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 270:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the
 271:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines
 272:Generated_Source\PSoC4/CapSense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process.
 273:Generated_Source\PSoC4/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 274:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 275:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 276:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 277:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 278:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 279:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 280:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 281:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 282:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorRaw[] - used to store the sensors raw data.
 283:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 284:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 285:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 286:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 287:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 288:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 289:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 290:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 152              		.loc 1 290 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156 0000 10B5     		push	{r4, lr}
 157              		.cfi_def_cfa_offset 8
 158              		.cfi_offset 4, -8
 159              		.cfi_offset 14, -4
 291:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 292:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 293:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 294:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 160              		.loc 1 294 0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 9


 161 0002 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 162              	.LVL12:
 163              	.L10:
 295:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 164              		.loc 1 295 0 discriminator 1
 165 0006 FFF7FEFF 		bl	CapSense_IsBusy
 166              	.LVL13:
 167 000a 0028     		cmp	r0, #0
 168 000c FBD1     		bne	.L10
 169 000e 0024     		movs	r4, #0
 170 0010 09E0     		b	.L11
 171              	.LVL14:
 172              	.L13:
 296:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 297:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 298:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 299:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 300:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 301:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 302:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 173              		.loc 1 302 0
 174 0012 2100     		movs	r1, r4
 175 0014 0548     		ldr	r0, .L14
 176 0016 FFF7FEFF 		bl	CapSense_GetBitValue
 177              	.LVL15:
 303:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 304:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 305:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(isSensorEnabled != 0u)
 178              		.loc 1 305 0
 179 001a 0028     		cmp	r0, #0
 180 001c 02D0     		beq	.L12
 306:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 307:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Initialize baselines */
 308:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(i);
 181              		.loc 1 308 0
 182 001e 2000     		movs	r0, r4
 183              	.LVL16:
 184 0020 FFF7FEFF 		bl	CapSense_BaseInit
 185              	.LVL17:
 186              	.L12:
 300:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 187              		.loc 1 300 0 discriminator 2
 188 0024 0134     		adds	r4, r4, #1
 189              	.LVL18:
 190              	.L11:
 300:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 191              		.loc 1 300 0 is_stmt 0 discriminator 1
 192 0026 092C     		cmp	r4, #9
 193 0028 F3D9     		bls	.L13
 309:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 310:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 311:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 194              		.loc 1 311 0 is_stmt 1
 195              		@ sp needed
 196              	.LVL19:
 197 002a 10BD     		pop	{r4, pc}
 198              	.L15:
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 10


 199              		.align	2
 200              	.L14:
 201 002c 00000000 		.word	CapSense_sensorEnableMask
 202              		.cfi_endproc
 203              	.LFE35:
 204              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 205              		.section	.text.CapSense_GetBaselineData,"ax",%progbits
 206              		.align	2
 207              		.global	CapSense_GetBaselineData
 208              		.code	16
 209              		.thumb_func
 210              		.type	CapSense_GetBaselineData, %function
 211              	CapSense_GetBaselineData:
 212              	.LFB40:
 312:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 313:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 314:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 315:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateBaselineNoThreshold
 316:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 317:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 318:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 319:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 320:Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 321:Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 322:Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 323:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 324:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded
 325:Generated_Source\PSoC4/CapSense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less
 326:Generated_Source\PSoC4/CapSense_CSHL.c **** *  than noise threshold.
 327:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 328:Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 329:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 330:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 331:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 332:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 333:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 334:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 335:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 336:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 337:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 338:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 339:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 340:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 341:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of
 342:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline value.
 343:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store difference between
 344:Generated_Source\PSoC4/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 345:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of
 346:Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 347:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 348:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 349:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 350:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 351:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 352:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 353:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 354:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateBaselineNoThreshold(uint32 sensor)
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 11


 355:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 356:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 357:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sign;
 358:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 tempRaw;
 359:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 filteredRawData;
 360:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 361:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold;
 362:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 363:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 364:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 365:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 366:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 367:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 368:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 369:Generated_Source\PSoC4/CapSense_CSHL.c ****     noiseThreshold = CapSense_noiseThreshold[widget];
 370:Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 371:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 372:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_RAW_FILTER_MASK != 0u)
 373:Generated_Source\PSoC4/CapSense_CSHL.c ****     if(CapSense_enableRawFilters != 0u)
 374:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 375:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 376:Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 377:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor
 378:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                             CapSense_rawFilterData2[sensor]);
 379:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 380:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 381:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 382:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 383:Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 384:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sen
 385:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                CapSense_rawFilterData2[sensor]);
 386:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 387:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 388:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 389:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 390:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 391:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 392:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 393:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 394:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 395:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 396:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 397:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 398:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor
 399:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 400:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 401:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 402:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 403:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 404:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 405:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 406:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]
 407:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 408:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 409:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 410:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No Raw filters */
 411:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 12


 412:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 413:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 414:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 415:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 416:Generated_Source\PSoC4/CapSense_CSHL.c ****         MeasureNoiseEnvelope_P4_v2_60(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 417:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 418:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 419:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Baseline calculation */
 420:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 421:Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 422:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 423:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineResetCnt[sensor] = 0u;
 424:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 425:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 426:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 427:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 428:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 429:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 430:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 431:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 432:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 433:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 434:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 435:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 436:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 437:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 438:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 439:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 440:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 441:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 442:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 443:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 444:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
 445:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 446:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 447:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 448:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 449:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 450:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 451:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 452:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 453:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 454:Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 455:Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 456:Generated_Source\PSoC4/CapSense_CSHL.c ****                && (sign == 0u)))
 457:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 458:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 459:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 460:Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 461:Generated_Source\PSoC4/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 462:Generated_Source\PSoC4/CapSense_CSHL.c ****                    && (sign == 0u)))
 463:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 464:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 465:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 466:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 467:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 468:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 13


 469:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 470:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 471:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 472:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 473:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 474:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 475:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 476:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 477:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 478:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 479:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 480:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 481:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 482:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 483:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 484:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 485:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 486:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 487:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 488:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 489:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 490:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 491:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 492:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 493:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 494:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 495:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
 496:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 497:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 498:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 499:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 500:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 501:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 502:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 503:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 504:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 505:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Signal is zero */
 506:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 507:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 508:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 509:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 510:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 511:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 512:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 513:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 514:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 515:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 516:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 517:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 518:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 519:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 520:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 521:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 522:Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 523:Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 524:Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 525:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 14


 526:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating.
 527:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and
 528:Generated_Source\PSoC4/CapSense_CSHL.c **** *  if signal is less than noise threshold.
 529:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 530:Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 531:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 532:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 533:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 534:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 535:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 536:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 537:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 538:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 539:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 540:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 541:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 542:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 543:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 544:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 545:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 546:Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint32 sensor)
 547:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 548:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 549:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 widget;
 550:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 551:Generated_Source\PSoC4/CapSense_CSHL.c ****         widget = CapSense_widgetNumber[sensor];
 552:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 553:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 554:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 555:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 556:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 557:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 558:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 559:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_UpdateThresholds(sensor);
 560:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 561:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 562:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 563:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 564:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 565:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 566:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 567:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 568:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 569:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 570:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 571:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 572:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 573:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 574:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 575:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 576:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 577:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 578:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors.
 579:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 580:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 581:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 582:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 15


 583:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 584:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 585:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 586:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 587:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 588:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 589:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 590:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 591:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 592:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 593:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 594:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 595:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 596:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 597:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 598:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 599:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 600:Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 601:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 602:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 603:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 604:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 605:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 606:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 607:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 608:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 609:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 610:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 611:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 612:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 613:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 614:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 615:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 616:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 617:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateWidgetBaseline
 618:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 619:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 620:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 621:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 622:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 623:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors that belong to widget.
 624:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 625:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 626:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  Widget number.
 627:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 628:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 629:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 630:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 631:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 632:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 633:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 634:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 635:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 636:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 637:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 638:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 639:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 16


 640:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 641:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 642:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 643:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 644:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 645:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateWidgetBaseline(uint32 widget)
 646:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 647:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 648:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 firstSensor;
 649:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 lastSensor;
 650:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 651:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 652:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 653:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get number of sensors in widget */
 654:Generated_Source\PSoC4/CapSense_CSHL.c ****     sensorsPerWidget = CapSense_numberOfSensors[widget];
 655:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 656:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get first sensor in widget */
 657:Generated_Source\PSoC4/CapSense_CSHL.c ****     firstSensor = CapSense_rawDataIndex[widget];
 658:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 659:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get last sensor in widget */
 660:Generated_Source\PSoC4/CapSense_CSHL.c ****     lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 661:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 662:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 663:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 664:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 665:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 666:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 667:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 668:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 669:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 670:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 671:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 672:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 673:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 674:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 675:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetBaselineData
 676:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 677:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 678:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 679:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the sensor baseline from the component.
 680:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 681:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 682:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 683:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 684:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 685:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 686:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 687:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 688:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with an initial values by scanning
 689:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 690:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 691:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 692:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 693:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 694:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetBaselineData(uint32 sensor)
 695:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 213              		.loc 1 695 0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 17


 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217              		@ link register save eliminated.
 218              	.LVL20:
 696:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorBaseline[sensor]);
 219              		.loc 1 696 0
 220 0000 4000     		lsls	r0, r0, #1
 221              	.LVL21:
 222 0002 014B     		ldr	r3, .L17
 223 0004 185A     		ldrh	r0, [r3, r0]
 697:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 224              		.loc 1 697 0
 225              		@ sp needed
 226 0006 7047     		bx	lr
 227              	.L18:
 228              		.align	2
 229              	.L17:
 230 0008 00000000 		.word	.LANCHOR0
 231              		.cfi_endproc
 232              	.LFE40:
 233              		.size	CapSense_GetBaselineData, .-CapSense_GetBaselineData
 234              		.section	.text.CapSense_SetBaselineData,"ax",%progbits
 235              		.align	2
 236              		.global	CapSense_SetBaselineData
 237              		.code	16
 238              		.thumb_func
 239              		.type	CapSense_SetBaselineData, %function
 240              	CapSense_SetBaselineData:
 241              	.LFB41:
 698:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 699:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 700:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 701:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetBaselineData
 702:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 703:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 704:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 705:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 706:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 707:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 708:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 709:Generated_Source\PSoC4/CapSense_CSHL.c **** *  data:    Sensor baseline.
 710:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 711:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 712:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 713:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 714:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 715:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with initial values by scanning
 716:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 717:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 718:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 719:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 720:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 721:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetBaselineData(uint32 sensor, uint16 data)
 722:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 242              		.loc 1 722 0
 243              		.cfi_startproc
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 18


 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246              		@ link register save eliminated.
 247              	.LVL22:
 723:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = data;
 248              		.loc 1 723 0
 249 0000 4000     		lsls	r0, r0, #1
 250              	.LVL23:
 251 0002 014B     		ldr	r3, .L20
 252 0004 C152     		strh	r1, [r0, r3]
 724:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 253              		.loc 1 724 0
 254              		@ sp needed
 255 0006 7047     		bx	lr
 256              	.L21:
 257              		.align	2
 258              	.L20:
 259 0008 00000000 		.word	.LANCHOR0
 260              		.cfi_endproc
 261              	.LFE41:
 262              		.size	CapSense_SetBaselineData, .-CapSense_SetBaselineData
 263              		.section	.text.CapSense_GetDiffCountData,"ax",%progbits
 264              		.align	2
 265              		.global	CapSense_GetDiffCountData
 266              		.code	16
 267              		.thumb_func
 268              		.type	CapSense_GetDiffCountData, %function
 269              	CapSense_GetDiffCountData:
 270              	.LFB42:
 725:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 726:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 727:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 728:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDiffCountData
 729:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 730:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 731:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 732:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 733:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 734:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 735:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 736:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 737:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 738:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the
 739:Generated_Source\PSoC4/CapSense_CSHL.c **** *  argument.
 740:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 741:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 742:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 743:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 744:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 745:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 746:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 747:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 748:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDiffCountData(uint32 sensor)
 749:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 271              		.loc 1 749 0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 19


 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275              		@ link register save eliminated.
 276              	.LVL24:
 750:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorSignal[sensor]);
 277              		.loc 1 750 0
 278 0000 024B     		ldr	r3, .L23
 279 0002 1818     		adds	r0, r3, r0
 280              	.LVL25:
 281 0004 2023     		movs	r3, #32
 282 0006 C05C     		ldrb	r0, [r0, r3]
 751:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 283              		.loc 1 751 0
 284              		@ sp needed
 285 0008 7047     		bx	lr
 286              	.L24:
 287 000a C046     		.align	2
 288              	.L23:
 289 000c 00000000 		.word	.LANCHOR0
 290              		.cfi_endproc
 291              	.LFE42:
 292              		.size	CapSense_GetDiffCountData, .-CapSense_GetDiffCountData
 293              		.section	.text.CapSense_SetDiffCountData,"ax",%progbits
 294              		.align	2
 295              		.global	CapSense_SetDiffCountData
 296              		.code	16
 297              		.thumb_func
 298              		.type	CapSense_SetDiffCountData, %function
 299              	CapSense_SetDiffCountData:
 300              	.LFB43:
 752:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 753:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 754:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 755:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetDiffCountData
 756:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 757:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 758:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 759:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 760:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 761:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 762:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 763:Generated_Source\PSoC4/CapSense_CSHL.c **** *  value:   Sensor signal.
 764:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 765:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 766:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 767:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 768:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 769:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 770:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 771:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 772:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 773:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 774:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 775:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetDiffCountData(uint32 sensor, uint8 value)
 776:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 301              		.loc 1 776 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 20


 304              		@ frame_needed = 0, uses_anonymous_args = 0
 305              		@ link register save eliminated.
 306              	.LVL26:
 777:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 307              		.loc 1 777 0
 308 0000 024B     		ldr	r3, .L26
 309 0002 1818     		adds	r0, r3, r0
 310              	.LVL27:
 311 0004 2023     		movs	r3, #32
 312 0006 C154     		strb	r1, [r0, r3]
 778:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 313              		.loc 1 778 0
 314              		@ sp needed
 315 0008 7047     		bx	lr
 316              	.L27:
 317 000a C046     		.align	2
 318              	.L26:
 319 000c 00000000 		.word	.LANCHOR0
 320              		.cfi_endproc
 321              	.LFE43:
 322              		.size	CapSense_SetDiffCountData, .-CapSense_SetDiffCountData
 323              		.section	.text.CapSense_GetFingerThreshold,"ax",%progbits
 324              		.align	2
 325              		.global	CapSense_GetFingerThreshold
 326              		.code	16
 327              		.thumb_func
 328              		.type	CapSense_GetFingerThreshold, %function
 329              	CapSense_GetFingerThreshold:
 330              	.LFB44:
 779:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 780:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 781:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 782:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerThreshold
 783:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 784:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 785:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 786:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the finger threshold from the component.
 787:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 788:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 789:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 790:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 791:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 792:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument.
 793:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 794:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 795:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_fingerThreshold[] - This array contains the level of signal
 796:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 797:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 798:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 799:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 800:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 801:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 802:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerThreshold(uint32 widget)
 803:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 331              		.loc 1 803 0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 21


 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335              		@ link register save eliminated.
 336              	.LVL28:
 804:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_fingerThreshold[widget]);
 337              		.loc 1 804 0
 338 0000 014B     		ldr	r3, .L29
 339 0002 185C     		ldrb	r0, [r3, r0]
 340              	.LVL29:
 805:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 341              		.loc 1 805 0
 342              		@ sp needed
 343 0004 7047     		bx	lr
 344              	.L30:
 345 0006 C046     		.align	2
 346              	.L29:
 347 0008 00000000 		.word	CapSense_fingerThreshold
 348              		.cfi_endproc
 349              	.LFE44:
 350              		.size	CapSense_GetFingerThreshold, .-CapSense_GetFingerThreshold
 351              		.section	.text.CapSense_GetNoiseThreshold,"ax",%progbits
 352              		.align	2
 353              		.global	CapSense_GetNoiseThreshold
 354              		.code	16
 355              		.thumb_func
 356              		.type	CapSense_GetNoiseThreshold, %function
 357              	CapSense_GetNoiseThreshold:
 358              	.LFB45:
 806:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 807:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 808:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 809:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNoiseThreshold
 810:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 811:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 812:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 813:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the noise threshold from the component.
 814:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 815:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 816:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 817:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 818:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 819:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument.
 820:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 821:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 822:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_noiseThreshold[] - This array contains the level of signal
 823:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 824:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 825:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 826:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 827:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 828:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 829:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNoiseThreshold(uint32 widget)
 830:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 359              		.loc 1 830 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363              		@ link register save eliminated.
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 22


 364              	.LVL30:
 831:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_noiseThreshold[widget]);
 365              		.loc 1 831 0
 366 0000 014B     		ldr	r3, .L32
 367 0002 185C     		ldrb	r0, [r3, r0]
 368              	.LVL31:
 832:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 369              		.loc 1 832 0
 370              		@ sp needed
 371 0004 7047     		bx	lr
 372              	.L33:
 373 0006 C046     		.align	2
 374              	.L32:
 375 0008 00000000 		.word	CapSense_noiseThreshold
 376              		.cfi_endproc
 377              	.LFE45:
 378              		.size	CapSense_GetNoiseThreshold, .-CapSense_GetNoiseThreshold
 379              		.section	.text.CapSense_GetFingerHysteresis,"ax",%progbits
 380              		.align	2
 381              		.global	CapSense_GetFingerHysteresis
 382              		.code	16
 383              		.thumb_func
 384              		.type	CapSense_GetFingerHysteresis, %function
 385              	CapSense_GetFingerHysteresis:
 386              	.LFB46:
 833:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 834:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 835:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 836:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerHysteresis
 837:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 838:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 839:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 840:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 841:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 842:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 843:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 844:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 845:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 846:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument.
 847:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 848:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 849:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_hysteresis[] - This array contains the hysteresis value
 850:Generated_Source\PSoC4/CapSense_CSHL.c **** *   for each widget.
 851:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 852:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 853:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 854:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 855:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 856:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 857:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerHysteresis(uint32 widget)
 858:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 387              		.loc 1 858 0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391              		@ link register save eliminated.
 392              	.LVL32:
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 23


 859:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_hysteresis[widget]);
 393              		.loc 1 859 0
 394 0000 014B     		ldr	r3, .L35
 395 0002 185C     		ldrb	r0, [r3, r0]
 396              	.LVL33:
 860:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 397              		.loc 1 860 0
 398              		@ sp needed
 399 0004 7047     		bx	lr
 400              	.L36:
 401 0006 C046     		.align	2
 402              	.L35:
 403 0008 00000000 		.word	CapSense_hysteresis
 404              		.cfi_endproc
 405              	.LFE46:
 406              		.size	CapSense_GetFingerHysteresis, .-CapSense_GetFingerHysteresis
 407              		.section	.text.CapSense_GetNegativeNoiseThreshold,"ax",%progbits
 408              		.align	2
 409              		.global	CapSense_GetNegativeNoiseThreshold
 410              		.code	16
 411              		.thumb_func
 412              		.type	CapSense_GetNegativeNoiseThreshold, %function
 413              	CapSense_GetNegativeNoiseThreshold:
 414              	.LFB47:
 861:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 862:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 863:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 864:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNegativeNoiseThreshold
 865:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 866:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 867:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 868:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the negative noise threshold from the component.
 869:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 870:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 871:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 872:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 873:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return Value:
 874:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the negative noise threshold
 875:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 876:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 877:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_negativeNoiseThreshold - This variable specifies the negative
 878:Generated_Source\PSoC4/CapSense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 879:Generated_Source\PSoC4/CapSense_CSHL.c **** *   to the raw count level.
 880:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 881:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 882:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 883:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 884:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 885:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNegativeNoiseThreshold(uint32 widget)
 886:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 415              		.loc 1 886 0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 0
 418              		@ frame_needed = 0, uses_anonymous_args = 0
 419              		@ link register save eliminated.
 420              	.LVL34:
 887:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 24


 888:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_negativeNoiseThreshold[widget]);
 421              		.loc 1 888 0
 422 0000 014B     		ldr	r3, .L38
 423 0002 185C     		ldrb	r0, [r3, r0]
 424              	.LVL35:
 889:Generated_Source\PSoC4/CapSense_CSHL.c **** #else
 890:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_NEGATIVE_NOISE_THRESHOLD);
 891:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 892:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 425              		.loc 1 892 0
 426              		@ sp needed
 427 0004 7047     		bx	lr
 428              	.L39:
 429 0006 C046     		.align	2
 430              	.L38:
 431 0008 00000000 		.word	CapSense_negativeNoiseThreshold
 432              		.cfi_endproc
 433              	.LFE47:
 434              		.size	CapSense_GetNegativeNoiseThreshold, .-CapSense_GetNegativeNoiseThreshold
 435              		.section	.text.CapSense_SetFingerThreshold,"ax",%progbits
 436              		.align	2
 437              		.global	CapSense_SetFingerThreshold
 438              		.code	16
 439              		.thumb_func
 440              		.type	CapSense_SetFingerThreshold, %function
 441              	CapSense_SetFingerThreshold:
 442              	.LFB48:
 893:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 894:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 895:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 896:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 897:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerThreshold
 898:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 899:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 900:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 901:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the finger threshold value for a widget.
 902:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 903:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 904:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensorNumber:  widget index.
 905:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Finger threshold value for the widget.
 906:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 907:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 908:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 909:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 910:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 911:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[] - This array contains the level of signal
 912:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines if a finger is present on the widget.
 913:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 914:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 915:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 916:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 917:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 918:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerThreshold(uint32 widget, uint8 value)
 919:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 443              		.loc 1 919 0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 25


 446              		@ frame_needed = 0, uses_anonymous_args = 0
 447              		@ link register save eliminated.
 448              	.LVL36:
 920:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_fingerThreshold[widget] = value;
 449              		.loc 1 920 0
 450 0000 014B     		ldr	r3, .L41
 451 0002 1954     		strb	r1, [r3, r0]
 921:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 452              		.loc 1 921 0
 453              		@ sp needed
 454 0004 7047     		bx	lr
 455              	.L42:
 456 0006 C046     		.align	2
 457              	.L41:
 458 0008 00000000 		.word	CapSense_fingerThreshold
 459              		.cfi_endproc
 460              	.LFE48:
 461              		.size	CapSense_SetFingerThreshold, .-CapSense_SetFingerThreshold
 462              		.section	.text.CapSense_SetNoiseThreshold,"ax",%progbits
 463              		.align	2
 464              		.global	CapSense_SetNoiseThreshold
 465              		.code	16
 466              		.thumb_func
 467              		.type	CapSense_SetNoiseThreshold, %function
 468              	CapSense_SetNoiseThreshold:
 469              	.LFB49:
 922:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 923:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 924:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 925:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNoiseThreshold
 926:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 927:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 928:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 929:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Noise Threshold value for each widget.
 930:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 931:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 932:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Sensor index number.
 933:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:   Noise Threshold value for widget.
 934:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 935:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 936:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 937:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 938:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 939:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_noiseThreshold[] - This array contains the level of signal
 940:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines the level of noise in the capacitive scan.
 941:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 942:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 943:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 944:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 945:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 946:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNoiseThreshold(uint32 widget, uint8 value)
 947:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 470              		.loc 1 947 0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 0
 473              		@ frame_needed = 0, uses_anonymous_args = 0
 474              		@ link register save eliminated.
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 26


 475              	.LVL37:
 948:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_noiseThreshold[widget] = value;
 476              		.loc 1 948 0
 477 0000 014B     		ldr	r3, .L44
 478 0002 1954     		strb	r1, [r3, r0]
 949:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 479              		.loc 1 949 0
 480              		@ sp needed
 481 0004 7047     		bx	lr
 482              	.L45:
 483 0006 C046     		.align	2
 484              	.L44:
 485 0008 00000000 		.word	CapSense_noiseThreshold
 486              		.cfi_endproc
 487              	.LFE49:
 488              		.size	CapSense_SetNoiseThreshold, .-CapSense_SetNoiseThreshold
 489              		.section	.text.CapSense_SetFingerHysteresis,"ax",%progbits
 490              		.align	2
 491              		.global	CapSense_SetFingerHysteresis
 492              		.code	16
 493              		.thumb_func
 494              		.type	CapSense_SetFingerHysteresis, %function
 495              	CapSense_SetFingerHysteresis:
 496              	.LFB50:
 950:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 951:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 952:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 953:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerHysteresis
 954:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 955:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 956:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 957:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Hysteresis value of a widget
 958:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 959:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 960:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Hysteresis value for widgets.
 961:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number
 962:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 963:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 964:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 965:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 966:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 967:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_hysteresis[] - This array contains the hysteresis value for each widget.
 968:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 969:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 970:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 971:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 972:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 973:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 974:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerHysteresis(uint32 widget, uint8 value)
 975:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 497              		.loc 1 975 0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501              		@ link register save eliminated.
 502              	.LVL38:
 976:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_hysteresis[widget] = value;
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 27


 503              		.loc 1 976 0
 504 0000 014B     		ldr	r3, .L47
 505 0002 1954     		strb	r1, [r3, r0]
 977:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 506              		.loc 1 977 0
 507              		@ sp needed
 508 0004 7047     		bx	lr
 509              	.L48:
 510 0006 C046     		.align	2
 511              	.L47:
 512 0008 00000000 		.word	CapSense_hysteresis
 513              		.cfi_endproc
 514              	.LFE50:
 515              		.size	CapSense_SetFingerHysteresis, .-CapSense_SetFingerHysteresis
 516              		.section	.text.CapSense_SetNegativeNoiseThreshold,"ax",%progbits
 517              		.align	2
 518              		.global	CapSense_SetNegativeNoiseThreshold
 519              		.code	16
 520              		.thumb_func
 521              		.type	CapSense_SetNegativeNoiseThreshold, %function
 522              	CapSense_SetNegativeNoiseThreshold:
 523              	.LFB51:
 978:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 979:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 980:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 981:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNegativeNoiseThreshold
 982:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 983:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 984:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 985:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Negative Noise Threshold value of a widget
 986:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 987:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 988:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Negative Noise Threshold value for widgets.
 989:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget number
 990:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 991:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 992:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 993:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 994:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 995:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_negativeNoiseThreshold  - This parameter specifies the negative
 996:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   difference between the raw count and baseline levels for Baseline resetting to
 997:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   the raw count level.
 998:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 999:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1000:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1001:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1002:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1003:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
1004:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 524              		.loc 1 1004 0
 525              		.cfi_startproc
 526              		@ args = 0, pretend = 0, frame = 0
 527              		@ frame_needed = 0, uses_anonymous_args = 0
 528              		@ link register save eliminated.
 529              	.LVL39:
1005:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_negativeNoiseThreshold[widget] = value;
 530              		.loc 1 1005 0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 28


 531 0000 014B     		ldr	r3, .L50
 532 0002 1954     		strb	r1, [r3, r0]
1006:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 533              		.loc 1 1006 0
 534              		@ sp needed
 535 0004 7047     		bx	lr
 536              	.L51:
 537 0006 C046     		.align	2
 538              	.L50:
 539 0008 00000000 		.word	CapSense_negativeNoiseThreshold
 540              		.cfi_endproc
 541              	.LFE51:
 542              		.size	CapSense_SetNegativeNoiseThreshold, .-CapSense_SetNegativeNoiseThreshold
 543              		.section	.text.CapSense_SetDebounce,"ax",%progbits
 544              		.align	2
 545              		.global	CapSense_SetDebounce
 546              		.code	16
 547              		.thumb_func
 548              		.type	CapSense_SetDebounce, %function
 549              	CapSense_SetDebounce:
 550              	.LFB52:
1007:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1008:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1009:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1010:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetDebounce
1011:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1012:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1013:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1014:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the debounce value for a widget.
1015:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1016:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1017:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Debounce value for widget.
1018:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget index.
1019:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1020:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1021:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1022:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1023:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1024:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_debounce[] - This array contains the debounce value for each widget.
1025:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
1026:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1027:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1028:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1029:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1030:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1031:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetDebounce(uint32 widget, uint8 value)
1032:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 551              		.loc 1 1032 0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 0
 554              		@ frame_needed = 0, uses_anonymous_args = 0
 555              		@ link register save eliminated.
 556              	.LVL40:
1033:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_debounce[widget] = value;
 557              		.loc 1 1033 0
 558 0000 014B     		ldr	r3, .L53
 559 0002 1954     		strb	r1, [r3, r0]
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 29


1034:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 560              		.loc 1 1034 0
 561              		@ sp needed
 562 0004 7047     		bx	lr
 563              	.L54:
 564 0006 C046     		.align	2
 565              	.L53:
 566 0008 00000000 		.word	.LANCHOR1
 567              		.cfi_endproc
 568              	.LFE52:
 569              		.size	CapSense_SetDebounce, .-CapSense_SetDebounce
 570              		.section	.text.CapSense_SetLowBaselineReset,"ax",%progbits
 571              		.align	2
 572              		.global	CapSense_SetLowBaselineReset
 573              		.code	16
 574              		.thumb_func
 575              		.type	CapSense_SetLowBaselineReset, %function
 576              	CapSense_SetLowBaselineReset:
 577              	.LFB53:
1035:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1036:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1037:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1038:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetLowBaselineReset
1039:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1040:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1041:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1042:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the low baseline reset threshold value for the sensor.
1043:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1044:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1045:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value: low baseline reset threshold value.
1046:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensor: Sensor index.
1047:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1048:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1049:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1050:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1051:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1052:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_lowBaselineReset[] - This array contains the Baseline update
1053:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold value for each sensor.
1054:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1055:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1056:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1057:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1058:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1059:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetLowBaselineReset(uint32 sensor, uint8 value)
1060:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 578              		.loc 1 1060 0
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 0
 581              		@ frame_needed = 0, uses_anonymous_args = 0
 582              		@ link register save eliminated.
 583              	.LVL41:
1061:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineReset[sensor] = value;
 584              		.loc 1 1061 0
 585 0000 014B     		ldr	r3, .L56
 586 0002 1818     		adds	r0, r3, r0
 587              	.LVL42:
 588 0004 0171     		strb	r1, [r0, #4]
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 30


1062:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 589              		.loc 1 1062 0
 590              		@ sp needed
 591 0006 7047     		bx	lr
 592              	.L57:
 593              		.align	2
 594              	.L56:
 595 0008 00000000 		.word	.LANCHOR1
 596              		.cfi_endproc
 597              	.LFE53:
 598              		.size	CapSense_SetLowBaselineReset, .-CapSense_SetLowBaselineReset
 599              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 600              		.align	2
 601              		.global	CapSense_CheckIsSensorActive
 602              		.code	16
 603              		.thumb_func
 604              		.type	CapSense_CheckIsSensorActive, %function
 605              	CapSense_CheckIsSensorActive:
 606              	.LFB54:
1063:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1064:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1065:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1066:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1067:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
1068:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1069:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1070:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1071:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[sensor] array element to the finger
1072:Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into
1073:Generated_Source\PSoC4/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold
1074:Generated_Source\PSoC4/CapSense_CSHL.c **** *  based on whether the sensor is currently active.
1075:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1076:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1077:Generated_Source\PSoC4/CapSense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1078:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function updates the CapSense_sensorOnMask[] array element.
1079:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1080:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1081:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
1082:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1083:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1084:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1085:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1086:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1087:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - used to store the difference between
1088:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1089:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store the current debounce
1090:Generated_Source\PSoC4/CapSense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix
1091:Generated_Source\PSoC4/CapSense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1092:Generated_Source\PSoC4/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1093:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store the sensors on/off state.
1094:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors
1095:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1096:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1097:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1098:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor is inactive.
1099:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is active.
1100:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 31


1101:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1102:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1103:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1104:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1105:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsSensorActive(uint32 sensor)
1106:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 607              		.loc 1 1106 0
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 0
 610              		@ frame_needed = 0, uses_anonymous_args = 0
 611              	.LVL43:
 612 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 613              		.cfi_def_cfa_offset 24
 614              		.cfi_offset 3, -24
 615              		.cfi_offset 4, -20
 616              		.cfi_offset 5, -16
 617              		.cfi_offset 6, -12
 618              		.cfi_offset 7, -8
 619              		.cfi_offset 14, -4
 620 0002 0400     		movs	r4, r0
1107:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget;
1108:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounce;
1109:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounceIndex;
1110:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1111:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 fingerThreshold;
1112:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 hysteresis;
1113:Generated_Source\PSoC4/CapSense_CSHL.c ****     static uint8 CapSense_debounceCounter[] = {
1114:Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 
1115:Generated_Source\PSoC4/CapSense_CSHL.c **** };
1116:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1117:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1118:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1119:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
1120:Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
 621              		.loc 1 1120 0
 622 0004 224B     		ldr	r3, .L63
 623 0006 1B5C     		ldrb	r3, [r3, r0]
 624              	.LVL44:
1121:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1122:Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
 625              		.loc 1 1122 0
 626 0008 224A     		ldr	r2, .L63+4
 627 000a D65C     		ldrb	r6, [r2, r3]
 628              	.LVL45:
1123:Generated_Source\PSoC4/CapSense_CSHL.c ****     hysteresis = CapSense_hysteresis[widget];
 629              		.loc 1 1123 0
 630 000c 224A     		ldr	r2, .L63+8
 631 000e D55C     		ldrb	r5, [r2, r3]
 632              	.LVL46:
1124:Generated_Source\PSoC4/CapSense_CSHL.c ****     debounce = CapSense_debounce[widget];
 633              		.loc 1 1124 0
 634 0010 224A     		ldr	r2, .L63+12
 635 0012 D75C     		ldrb	r7, [r2, r3]
 636              	.LVL47:
1125:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1126:Generated_Source\PSoC4/CapSense_CSHL.c ****         debounceIndex = CapSense_UNUSED_DEBOUNCE_COUNTER_INDEX;
1127:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_debounceCounter[debounceIndex] = 1u;
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 32


 637              		.loc 1 1127 0
 638 0014 2248     		ldr	r0, .L63+16
 639              	.LVL48:
 640 0016 0122     		movs	r2, #1
 641 0018 2C23     		movs	r3, #44
 642              	.LVL49:
 643 001a C254     		strb	r2, [r0, r3]
1128:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1129:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1130:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Was on */
1131:Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 644              		.loc 1 1131 0
 645 001c 3030     		adds	r0, r0, #48
 646 001e 2100     		movs	r1, r4
 647 0020 FFF7FEFF 		bl	CapSense_GetBitValue
 648              	.LVL50:
 649 0024 0028     		cmp	r0, #0
 650 0026 10D0     		beq	.L59
1132:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1133:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis minus */
1134:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 651              		.loc 1 1134 0
 652 0028 1D4B     		ldr	r3, .L63+16
 653 002a 1B19     		adds	r3, r3, r4
 654 002c 2022     		movs	r2, #32
 655 002e 9B5C     		ldrb	r3, [r3, r2]
 656 0030 751B     		subs	r5, r6, r5
 657              	.LVL51:
 658 0032 AB42     		cmp	r3, r5
 659 0034 22DA     		bge	.L60
1135:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1136:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
 660              		.loc 1 1136 0
 661 0036 1A4D     		ldr	r5, .L63+16
 662 0038 2800     		movs	r0, r5
 663 003a 3030     		adds	r0, r0, #48
 664 003c 0022     		movs	r2, #0
 665 003e 2100     		movs	r1, r4
 666 0040 FFF7FEFF 		bl	CapSense_SetBitValue
 667              	.LVL52:
1137:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1138:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 668              		.loc 1 1138 0
 669 0044 2C23     		movs	r3, #44
 670 0046 EF54     		strb	r7, [r5, r3]
 671 0048 18E0     		b	.L60
 672              	.LVL53:
 673              	.L59:
1139:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1140:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1141:Generated_Source\PSoC4/CapSense_CSHL.c ****     else    /* Was off */
1142:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1143:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis plus */
1144:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 674              		.loc 1 1144 0
 675 004a 154B     		ldr	r3, .L63+16
 676 004c 1B19     		adds	r3, r3, r4
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 33


 677 004e 2022     		movs	r2, #32
 678 0050 9B5C     		ldrb	r3, [r3, r2]
 679 0052 7519     		adds	r5, r6, r5
 680              	.LVL54:
 681 0054 AB42     		cmp	r3, r5
 682 0056 0EDB     		blt	.L61
1145:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1146:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex]--;
 683              		.loc 1 1146 0
 684 0058 1149     		ldr	r1, .L63+16
 685 005a 0C32     		adds	r2, r2, #12
 686 005c 8B5C     		ldrb	r3, [r1, r2]
 687 005e 013B     		subs	r3, r3, #1
 688 0060 DBB2     		uxtb	r3, r3
 689 0062 8B54     		strb	r3, [r1, r2]
1147:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1148:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
 690              		.loc 1 1148 0
 691 0064 002B     		cmp	r3, #0
 692 0066 09D1     		bne	.L60
1149:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1150:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u);
 693              		.loc 1 1150 0
 694 0068 2B3A     		subs	r2, r2, #43
 695 006a 2100     		movs	r1, r4
 696 006c 0C48     		ldr	r0, .L63+16
 697 006e 3030     		adds	r0, r0, #48
 698 0070 FFF7FEFF 		bl	CapSense_SetBitValue
 699              	.LVL55:
 700 0074 02E0     		b	.L60
 701              	.L61:
1151:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1152:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1153:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1154:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1155:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1156:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 702              		.loc 1 1156 0
 703 0076 2C23     		movs	r3, #44
 704 0078 094A     		ldr	r2, .L63+16
 705 007a D754     		strb	r7, [r2, r3]
 706              	.L60:
1157:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1158:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1159:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1160:Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
 707              		.loc 1 1160 0
 708 007c 2100     		movs	r1, r4
 709 007e 0848     		ldr	r0, .L63+16
 710 0080 3030     		adds	r0, r0, #48
 711 0082 FFF7FEFF 		bl	CapSense_GetBitValue
 712              	.LVL56:
 713 0086 0028     		cmp	r0, #0
 714 0088 00D0     		beq	.L62
 715 008a 0120     		movs	r0, #1
 716              	.L62:
1161:Generated_Source\PSoC4/CapSense_CSHL.c **** }
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 34


 717              		.loc 1 1161 0 discriminator 4
 718              		@ sp needed
 719              	.LVL57:
 720              	.LVL58:
 721              	.LVL59:
 722 008c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 723              	.L64:
 724 008e C046     		.align	2
 725              	.L63:
 726 0090 00000000 		.word	CapSense_widgetNumber
 727 0094 00000000 		.word	CapSense_fingerThreshold
 728 0098 00000000 		.word	CapSense_hysteresis
 729 009c 00000000 		.word	.LANCHOR1
 730 00a0 00000000 		.word	.LANCHOR0
 731              		.cfi_endproc
 732              	.LFE54:
 733              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 734              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 735              		.align	2
 736              		.global	CapSense_CheckIsWidgetActive
 737              		.code	16
 738              		.thumb_func
 739              		.type	CapSense_CheckIsWidgetActive, %function
 740              	CapSense_CheckIsWidgetActive:
 741              	.LFB55:
1162:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1163:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1164:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1165:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
1166:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1167:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1168:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1169:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of
1170:Generated_Source\PSoC4/CapSense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account.
1171:Generated_Source\PSoC4/CapSense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1172:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is
1173:Generated_Source\PSoC4/CapSense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold
1174:Generated_Source\PSoC4/CapSense_CSHL.c **** *  is raised by the hysteresis amount.
1175:Generated_Source\PSoC4/CapSense_CSHL.c **** * The debounce counter added to the sensor active transition.
1176:Generated_Source\PSoC4/CapSense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1177:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1178:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1179:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1180:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1181:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1182:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are
1183:Generated_Source\PSoC4/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1184:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1185:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1186:Generated_Source\PSoC4/CapSense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1187:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1188:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1189:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1190:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1191:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1192:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsWidgetActive(uint32 widget)
1193:Generated_Source\PSoC4/CapSense_CSHL.c **** {
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 35


 742              		.loc 1 1193 0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 0, uses_anonymous_args = 0
 746              	.LVL60:
 747 0000 70B5     		push	{r4, r5, r6, lr}
 748              		.cfi_def_cfa_offset 16
 749              		.cfi_offset 4, -16
 750              		.cfi_offset 5, -12
 751              		.cfi_offset 6, -8
 752              		.cfi_offset 14, -4
 753              	.LVL61:
1194:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
1195:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
1196:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 754              		.loc 1 1196 0
 755 0002 0025     		movs	r5, #0
1194:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
 756              		.loc 1 1194 0
 757 0004 0024     		movs	r4, #0
 758              	.LVL62:
 759              	.L67:
1197:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1198:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Check all sensors of widget */
1199:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1200:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1201:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
 760              		.loc 1 1201 0
 761 0006 2000     		movs	r0, r4
 762 0008 FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 763              	.LVL63:
 764 000c 0028     		cmp	r0, #0
 765 000e 00D0     		beq	.L66
1202:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1203:Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
 766              		.loc 1 1203 0
 767 0010 0125     		movs	r5, #1
 768              	.LVL64:
 769              	.L66:
1204:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1205:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 770              		.loc 1 1205 0
 771 0012 0134     		adds	r4, r4, #1
 772              	.LVL65:
1206:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1207:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 773              		.loc 1 1207 0
 774 0014 092C     		cmp	r4, #9
 775 0016 F6D9     		bls	.L67
1208:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1209:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1210:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1211:Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
1212:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 776              		.loc 1 1212 0
 777 0018 2800     		movs	r0, r5
 778              		@ sp needed
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 36


 779              	.LVL66:
 780              	.LVL67:
 781 001a 70BD     		pop	{r4, r5, r6, pc}
 782              		.cfi_endproc
 783              	.LFE55:
 784              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 785              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 786              		.align	2
 787              		.global	CapSense_CheckIsAnyWidgetActive
 788              		.code	16
 789              		.thumb_func
 790              		.type	CapSense_CheckIsAnyWidgetActive, %function
 791              	CapSense_CheckIsAnyWidgetActive:
 792              	.LFB56:
1213:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1214:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1215:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1216:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
1217:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1218:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1219:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1220:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares all the sensors of the CapSense_Signal[] array to their finger
1221:Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so
1222:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the CapSense_sensorOnMask[] array is up to date after calling this
1223:Generated_Source\PSoC4/CapSense_CSHL.c **** *  function.
1224:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1225:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1226:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1227:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1228:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1229:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1230:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1231:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1232:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1233:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1234:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1235:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1236:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1237:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1238:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsAnyWidgetActive(void)
1239:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 793              		.loc 1 1239 0
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 0
 796              		@ frame_needed = 0, uses_anonymous_args = 0
 797 0000 70B5     		push	{r4, r5, r6, lr}
 798              		.cfi_def_cfa_offset 16
 799              		.cfi_offset 4, -16
 800              		.cfi_offset 5, -12
 801              		.cfi_offset 6, -8
 802              		.cfi_offset 14, -4
 803              	.LVL68:
1240:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1241:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 i;
1242:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 804              		.loc 1 1242 0
 805 0002 0025     		movs	r5, #0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 37


1243:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1244:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 806              		.loc 1 1244 0
 807 0004 0024     		movs	r4, #0
 808 0006 06E0     		b	.L70
 809              	.LVL69:
 810              	.L72:
1245:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1246:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 811              		.loc 1 1246 0
 812 0008 2000     		movs	r0, r4
 813 000a FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 814              	.LVL70:
 815 000e 0028     		cmp	r0, #0
 816 0010 00D0     		beq	.L71
1247:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1248:Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 817              		.loc 1 1248 0
 818 0012 0125     		movs	r5, #1
 819              	.LVL71:
 820              	.L71:
1244:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 821              		.loc 1 1244 0 discriminator 2
 822 0014 0134     		adds	r4, r4, #1
 823              	.LVL72:
 824              	.L70:
1244:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 825              		.loc 1 1244 0 is_stmt 0 discriminator 1
 826 0016 002C     		cmp	r4, #0
 827 0018 F6D0     		beq	.L72
1249:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1250:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1251:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1252:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1253:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1254:Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
1255:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 828              		.loc 1 1255 0 is_stmt 1
 829 001a 2800     		movs	r0, r5
 830              		@ sp needed
 831              	.LVL73:
 832              	.LVL74:
 833 001c 70BD     		pop	{r4, r5, r6, pc}
 834              		.cfi_endproc
 835              	.LFE56:
 836              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 837 001e C046     		.section	.text.CapSense_EnableWidget,"ax",%progbits
 838              		.align	2
 839              		.global	CapSense_EnableWidget
 840              		.code	16
 841              		.thumb_func
 842              		.type	CapSense_EnableWidget, %function
 843              	CapSense_EnableWidget:
 844              	.LFB57:
1256:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1257:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1258:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 38


1259:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
1260:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1261:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1262:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1263:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1264:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1265:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1266:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1267:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1268:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1269:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1270:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1271:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1272:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1273:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1274:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1275:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1276:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1277:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1278:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
1279:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
1280:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1281:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1282:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1283:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1284:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1285:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_EnableWidget(uint32 widget)
1286:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 845              		.loc 1 1286 0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 0
 848              		@ frame_needed = 0, uses_anonymous_args = 0
 849              	.LVL75:
 850 0000 10B5     		push	{r4, lr}
 851              		.cfi_def_cfa_offset 8
 852              		.cfi_offset 4, -8
 853              		.cfi_offset 14, -4
 854              	.LVL76:
1287:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1288:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 855              		.loc 1 1288 0
 856 0002 0024     		movs	r4, #0
 857              	.LVL77:
 858              	.L75:
1289:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
1290:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1291:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Enable all sensors of widget */
1292:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1293:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1294:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 859              		.loc 1 1294 0 discriminator 1
 860 0004 0122     		movs	r2, #1
 861 0006 2100     		movs	r1, r4
 862 0008 0348     		ldr	r0, .L76
 863 000a FFF7FEFF 		bl	CapSense_SetBitValue
 864              	.LVL78:
1295:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 39


 865              		.loc 1 1295 0 discriminator 1
 866 000e 0134     		adds	r4, r4, #1
 867              	.LVL79:
 868 0010 E4B2     		uxtb	r4, r4
 869              	.LVL80:
1296:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1297:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 870              		.loc 1 1297 0 discriminator 1
 871 0012 092C     		cmp	r4, #9
 872 0014 F6D9     		bls	.L75
1298:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 873              		.loc 1 1298 0
 874              		@ sp needed
 875              	.LVL81:
 876 0016 10BD     		pop	{r4, pc}
 877              	.L77:
 878              		.align	2
 879              	.L76:
 880 0018 00000000 		.word	CapSense_sensorEnableMask
 881              		.cfi_endproc
 882              	.LFE57:
 883              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 884              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 885              		.align	2
 886              		.global	CapSense_DisableWidget
 887              		.code	16
 888              		.thumb_func
 889              		.type	CapSense_DisableWidget, %function
 890              	CapSense_DisableWidget:
 891              	.LFB58:
1299:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1300:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1301:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1302:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
1303:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1304:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1305:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1306:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1307:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1308:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1309:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1310:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1311:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1312:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1313:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1314:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1315:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1316:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1317:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1318:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1319:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1320:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1321:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor isn't scanned by CapSense_ScanEnabledWidgets().
1322:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is scanned by CapSense_ScanEnabledWidgets().
1323:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1324:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1325:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 40


1326:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1327:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1328:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_DisableWidget(uint32 widget)
1329:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 892              		.loc 1 1329 0
 893              		.cfi_startproc
 894              		@ args = 0, pretend = 0, frame = 0
 895              		@ frame_needed = 0, uses_anonymous_args = 0
 896              	.LVL82:
 897 0000 10B5     		push	{r4, lr}
 898              		.cfi_def_cfa_offset 8
 899              		.cfi_offset 4, -8
 900              		.cfi_offset 14, -4
 901              	.LVL83:
1330:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 902              		.loc 1 1330 0
 903 0002 0024     		movs	r4, #0
 904              	.LVL84:
 905              	.L79:
1331:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
1332:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1333:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Disable all sensors of widget */
1334:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1335:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1336:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1337:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 906              		.loc 1 1337 0 discriminator 1
 907 0004 0022     		movs	r2, #0
 908 0006 2100     		movs	r1, r4
 909 0008 0348     		ldr	r0, .L80
 910 000a FFF7FEFF 		bl	CapSense_SetBitValue
 911              	.LVL85:
1338:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 912              		.loc 1 1338 0 discriminator 1
 913 000e 0134     		adds	r4, r4, #1
 914              	.LVL86:
 915 0010 E4B2     		uxtb	r4, r4
 916              	.LVL87:
1339:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1340:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 917              		.loc 1 1340 0 discriminator 1
 918 0012 092C     		cmp	r4, #9
 919 0014 F6D9     		bls	.L79
1341:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 920              		.loc 1 1341 0
 921              		@ sp needed
 922              	.LVL88:
 923 0016 10BD     		pop	{r4, pc}
 924              	.L81:
 925              		.align	2
 926              	.L80:
 927 0018 00000000 		.word	CapSense_sensorEnableMask
 928              		.cfi_endproc
 929              	.LFE58:
 930              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 931              		.section	.text.CapSense_FindMaximum,"ax",%progbits
 932              		.align	2
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 41


 933              		.global	CapSense_FindMaximum
 934              		.code	16
 935              		.thumb_func
 936              		.type	CapSense_FindMaximum, %function
 937              	CapSense_FindMaximum:
 938              	.LFB59:
1342:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1343:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1344:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1345:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1346:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
1347:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1348:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1349:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1350:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks
1351:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[] within a defined centroid and
1352:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are
1353:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  ignored.
1354:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1355:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1356:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1357:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1358:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1359:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:  Start index of centroid in CapSense_sensorSignal[] array.
1360:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
1361:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1362:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
1363:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1364:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1365:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1366:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1367:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1368:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1369:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_startOfSlider[] - contains the index of the first slider element
1370:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1371:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1372:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1373:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1374:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1375:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_IS_DIPLEX_SLIDER)
1376:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 *d
1377:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
1378:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1379:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1380:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 939              		.loc 1 1380 0
 940              		.cfi_startproc
 941              		@ args = 0, pretend = 0, frame = 0
 942              		@ frame_needed = 0, uses_anonymous_args = 0
 943              	.LVL89:
 944 0000 70B5     		push	{r4, r5, r6, lr}
 945              		.cfi_def_cfa_offset 16
 946              		.cfi_offset 4, -16
 947              		.cfi_offset 5, -12
 948              		.cfi_offset 6, -8
 949              		.cfi_offset 14, -4
 950              	.LVL90:
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 42


1381:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
1382:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1383:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curPos = 0u;
1384:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No centroid at Start */
1385:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
1386:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1387:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Biggest centroid is zero */
1388:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1389:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1390:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1391:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
1392:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1393:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 temp = 0u;
1394:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
 951              		.loc 1 1394 0
 952 0002 094D     		ldr	r5, .L87
 953 0004 2035     		adds	r5, r5, #32
 954 0006 2D18     		adds	r5, r5, r0
 955              	.LVL91:
1393:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
 956              		.loc 1 1393 0
 957 0008 0026     		movs	r6, #0
1391:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 958              		.loc 1 1391 0
 959 000a FF20     		movs	r0, #255
 960              	.LVL92:
1395:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1396:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1397:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(diplex != 0u)
1398:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1399:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Initialize */
1400:Generated_Source\PSoC4/CapSense_CSHL.c ****                 i = 0u;
1401:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1402:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
1403:Generated_Source\PSoC4/CapSense_CSHL.c ****                 count <<= 1u;
1404:Generated_Source\PSoC4/CapSense_CSHL.c ****                 while(1u)
1405:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1406:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1407:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1408:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (curCtrdStartPos == CapSense_MAXIMUM_CENTROID)
1409:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1410:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Start of centroid */
1411:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = i;
1412:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1413:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1414:Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
1415:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1416:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1417:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1418:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1419:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1420:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1421:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
1422:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1423:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* We are at the end of current */
1424:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1425:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 43


1426:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1427:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1428:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1429:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1430:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize = 0u;
1431:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1432:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1433:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1434:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1435:Generated_Source\PSoC4/CapSense_CSHL.c ****                     i++;
1436:Generated_Source\PSoC4/CapSense_CSHL.c ****                     curPos = diplex[i];
1437:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(i == count)
1438:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1439:Generated_Source\PSoC4/CapSense_CSHL.c ****                         break;
1440:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1441:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1442:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1443:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1444:Generated_Source\PSoC4/CapSense_CSHL.c ****                        We are at the end of current */
1445:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize)
1446:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1447:Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1448:Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1449:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1450:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1451:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1452:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1453:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Without diplexing */
1454:Generated_Source\PSoC4/CapSense_CSHL.c ****                 biggestCtrdSize = count;
1455:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1456:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1457:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1458:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Check centroid size */
1459:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
1460:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1461:Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
1462:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1463:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1464:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1465:Generated_Source\PSoC4/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1466:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1467:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1468:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (diplex == 0u)
1469:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1470:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = i;
1471:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1472:Generated_Source\PSoC4/CapSense_CSHL.c ****                             else
1473:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1474:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = diplex[i];
1475:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1476:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)
1477:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curPos = diplex[i];
1478:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1479:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Looking for greater element within centroid */
1480:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1481:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1482:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 44


1483:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1484:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 maximum = i;
1485:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1486:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1487:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1488:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1489:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1490:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1491:Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
 961              		.loc 1 1491 0
 962 000c 0023     		movs	r3, #0
 963 000e 08E0     		b	.L83
 964              	.LVL93:
 965              	.L85:
1492:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1493:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Looking for greater element within centroid */
1494:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 966              		.loc 1 1494 0
 967 0010 EC5C     		ldrb	r4, [r5, r3]
 968 0012 9442     		cmp	r4, r2
 969 0014 03D9     		bls	.L84
1495:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1496:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
 970              		.loc 1 1496 0
 971 0016 A642     		cmp	r6, r4
 972 0018 01D2     		bcs	.L84
1497:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1498:Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
1499:Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
 973              		.loc 1 1499 0
 974 001a 2600     		movs	r6, r4
 975              	.LVL94:
1498:Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
 976              		.loc 1 1498 0
 977 001c 1800     		movs	r0, r3
 978              	.LVL95:
 979              	.L84:
1491:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 980              		.loc 1 1491 0 discriminator 2
 981 001e 0133     		adds	r3, r3, #1
 982              	.LVL96:
 983 0020 DBB2     		uxtb	r3, r3
 984              	.LVL97:
 985              	.L83:
1491:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 986              		.loc 1 1491 0 is_stmt 0 discriminator 1
 987 0022 8B42     		cmp	r3, r1
 988 0024 F4D3     		bcc	.L85
1500:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1501:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1502:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1503:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1504:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (maximum);
1505:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 989              		.loc 1 1505 0 is_stmt 1
 990              		@ sp needed
 991              	.LVL98:
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 45


 992              	.LVL99:
 993 0026 70BD     		pop	{r4, r5, r6, pc}
 994              	.L88:
 995              		.align	2
 996              	.L87:
 997 0028 00000000 		.word	.LANCHOR0
 998              		.cfi_endproc
 999              	.LFE59:
 1000              		.size	CapSense_FindMaximum, .-CapSense_FindMaximum
 1001              		.global	__aeabi_idiv
 1002              		.section	.text.CapSense_CalcCentroid,"ax",%progbits
 1003              		.align	2
 1004              		.global	CapSense_CalcCentroid
 1005              		.code	16
 1006              		.thumb_func
 1007              		.type	CapSense_CalcCentroid, %function
 1008              	CapSense_CalcCentroid:
 1009              	.LFB60:
1506:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1507:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1508:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1509:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1510:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1511:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1512:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1513:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1514:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution.
1515:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1516:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1517:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  type:  widget type.
1518:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1519:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1520:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:   Start index of centroid in CapSense_sensorSignal[] array.
1521:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1522:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1523:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  API resolution.
1524:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1525:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1526:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1527:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the slider.
1528:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1529:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1530:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1531:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1532:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1533:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1534:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1535:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1536:Generated_Source\PSoC4/CapSense_CSHL.c **** #else
1537:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1538:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1539:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1540:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1010              		.loc 1 1540 0
 1011              		.cfi_startproc
 1012              		@ args = 4, pretend = 0, frame = 8
 1013              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 46


 1014              	.LVL100:
 1015 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1016              		.cfi_def_cfa_offset 20
 1017              		.cfi_offset 4, -20
 1018              		.cfi_offset 5, -16
 1019              		.cfi_offset 6, -12
 1020              		.cfi_offset 7, -8
 1021              		.cfi_offset 14, -4
 1022 0002 83B0     		sub	sp, sp, #12
 1023              		.cfi_def_cfa_offset 32
 1024 0004 0400     		movs	r4, r0
 1025 0006 0192     		str	r2, [sp, #4]
 1026 0008 0093     		str	r3, [sp]
 1027 000a 08AB     		add	r3, sp, #32
 1028              	.LVL101:
 1029 000c 1878     		ldrb	r0, [r3]
 1030              	.LVL102:
1541:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1542:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posPrev;
1543:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posNext;
1544:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1545:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1546:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Helps during centroid calculation */
1547:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1548:Generated_Source\PSoC4/CapSense_CSHL.c ****             static uint8 CapSense_centroid[3u];
1549:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1550:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1551:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1552:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 pos;
1553:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1554:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1555:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 position;
1556:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 numerator;
1557:Generated_Source\PSoC4/CapSense_CSHL.c ****         int32 denominator;
1558:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1559:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8  *startOfSlider = &CapSense_sensorSignal[offset];
 1031              		.loc 1 1559 0
 1032 000e 344B     		ldr	r3, .L99
 1033              	.LVL103:
 1034 0010 2033     		adds	r3, r3, #32
 1035 0012 5918     		adds	r1, r3, r1
 1036              	.LVL104:
1560:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1561:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1562:Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
1563:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1564:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1565:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1566:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1567:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1568:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1569:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1570:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1571:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1572:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1573:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1574:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 47


1575:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1576:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1577:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1578:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1579:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1580:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1581:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1582:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1583:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1584:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1585:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1586:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1587:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1588:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1589:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1590:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1591:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1592:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1593:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1594:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1595:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1596:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1597:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1598:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1599:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1600:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1601:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(diplex == 0u)
1602:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1603:Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = maximum;
1604:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1605:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = maximum + 1u;
1606:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1607:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1608:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1609:Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1610:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1611:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1612:Generated_Source\PSoC4/CapSense_CSHL.c ****                         count <<= 1u;
1613:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1614:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1615:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1616:Generated_Source\PSoC4/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1617:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1618:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1619:Generated_Source\PSoC4/CapSense_CSHL.c ****                     count <<= 1u;
1620:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1621:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1622:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (maximum >= 1u)
 1037              		.loc 1 1622 0
 1038 0014 002C     		cmp	r4, #0
 1039 0016 02D0     		beq	.L98
1623:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1624:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
 1040              		.loc 1 1624 0
 1041 0018 661E     		subs	r6, r4, #1
 1042 001a F6B2     		uxtb	r6, r6
 1043              	.LVL105:
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 48


 1044 001c 00E0     		b	.L90
 1045              	.LVL106:
 1046              	.L98:
1562:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
 1047              		.loc 1 1562 0
 1048 001e 0026     		movs	r6, #0
 1049              	.LVL107:
 1050              	.L90:
1625:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1626:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = maximum + 1u;
 1051              		.loc 1 1626 0
 1052 0020 631C     		adds	r3, r4, #1
 1053 0022 DDB2     		uxtb	r5, r3
 1054              	.LVL108:
1627:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1628:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1629:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1630:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1631:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1632:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1633:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
 1055              		.loc 1 1633 0
 1056 0024 0B5D     		ldrb	r3, [r1, r4]
 1057 0026 9C46     		mov	ip, r3
 1058 0028 2D4B     		ldr	r3, .L99
 1059 002a 3433     		adds	r3, r3, #52
 1060 002c 6246     		mov	r2, ip
 1061              	.LVL109:
 1062 002e 5A70     		strb	r2, [r3, #1]
1634:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1635:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1636:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1637:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 1063              		.loc 1 1637 0
 1064 0030 002C     		cmp	r4, #0
 1065 0032 07D1     		bne	.L91
1638:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1639:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
 1066              		.loc 1 1639 0
 1067 0034 2A4B     		ldr	r3, .L99
 1068 0036 0026     		movs	r6, #0
 1069              	.LVL110:
 1070 0038 3422     		movs	r2, #52
 1071 003a 9E54     		strb	r6, [r3, r2]
1640:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 1072              		.loc 1 1640 0
 1073 003c 4A5D     		ldrb	r2, [r1, r5]
 1074 003e 3433     		adds	r3, r3, #52
 1075 0040 9A70     		strb	r2, [r3, #2]
 1076 0042 12E0     		b	.L92
 1077              	.LVL111:
 1078              	.L91:
1641:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1642:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
 1079              		.loc 1 1642 0
 1080 0044 019A     		ldr	r2, [sp, #4]
 1081 0046 013A     		subs	r2, r2, #1
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 49


 1082 0048 9442     		cmp	r4, r2
 1083 004a 07D1     		bne	.L93
1643:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1644:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 1084              		.loc 1 1644 0
 1085 004c 895D     		ldrb	r1, [r1, r6]
 1086              	.LVL112:
 1087 004e 244B     		ldr	r3, .L99
 1088 0050 3422     		movs	r2, #52
 1089 0052 9954     		strb	r1, [r3, r2]
1645:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
 1090              		.loc 1 1645 0
 1091 0054 3433     		adds	r3, r3, #52
 1092 0056 0022     		movs	r2, #0
 1093 0058 9A70     		strb	r2, [r3, #2]
 1094 005a 06E0     		b	.L92
 1095              	.LVL113:
 1096              	.L93:
1646:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1647:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1648:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1649:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 1097              		.loc 1 1649 0
 1098 005c 8E5D     		ldrb	r6, [r1, r6]
 1099              	.LVL114:
 1100 005e 204B     		ldr	r3, .L99
 1101 0060 3422     		movs	r2, #52
 1102 0062 9E54     		strb	r6, [r3, r2]
1650:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 1103              		.loc 1 1650 0
 1104 0064 4A5D     		ldrb	r2, [r1, r5]
 1105 0066 3433     		adds	r3, r3, #52
 1106 0068 9A70     		strb	r2, [r3, #2]
 1107              	.LVL115:
 1108              	.L92:
1651:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1652:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_BASIC_C
1653:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1654:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1655:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1656:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1657:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1658:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1659:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
 1109              		.loc 1 1659 0
 1110 006a 3423     		movs	r3, #52
 1111 006c 1C4A     		ldr	r2, .L99
 1112 006e D35C     		ldrb	r3, [r2, r3]
 1113 0070 8342     		cmp	r3, r0
 1114 0072 04D9     		bls	.L94
1660:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1661:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
 1115              		.loc 1 1661 0
 1116 0074 1B1A     		subs	r3, r3, r0
 1117 0076 3422     		movs	r2, #52
 1118 0078 1949     		ldr	r1, .L99
 1119 007a 8B54     		strb	r3, [r1, r2]
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 50


 1120 007c 03E0     		b	.L95
 1121              	.L94:
1662:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1663:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1664:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1665:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
 1122              		.loc 1 1665 0
 1123 007e 0021     		movs	r1, #0
 1124 0080 3423     		movs	r3, #52
 1125 0082 174A     		ldr	r2, .L99
 1126 0084 D154     		strb	r1, [r2, r3]
 1127              	.L95:
1666:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1667:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1668:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1669:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
 1128              		.loc 1 1669 0
 1129 0086 164A     		ldr	r2, .L99
 1130 0088 3432     		adds	r2, r2, #52
 1131 008a 5378     		ldrb	r3, [r2, #1]
 1132 008c 1B1A     		subs	r3, r3, r0
 1133 008e DBB2     		uxtb	r3, r3
 1134 0090 5370     		strb	r3, [r2, #1]
1670:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1671:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1672:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
 1135              		.loc 1 1672 0
 1136 0092 9278     		ldrb	r2, [r2, #2]
 1137 0094 9042     		cmp	r0, r2
 1138 0096 04D2     		bcs	.L96
1673:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1674:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
 1139              		.loc 1 1674 0
 1140 0098 101A     		subs	r0, r2, r0
 1141 009a 114A     		ldr	r2, .L99
 1142 009c 3432     		adds	r2, r2, #52
 1143 009e 9070     		strb	r0, [r2, #2]
 1144 00a0 03E0     		b	.L97
 1145              	.L96:
1675:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1676:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1677:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1678:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
 1146              		.loc 1 1678 0
 1147 00a2 0021     		movs	r1, #0
 1148 00a4 0E4A     		ldr	r2, .L99
 1149 00a6 3432     		adds	r2, r2, #52
 1150 00a8 9170     		strb	r1, [r2, #2]
 1151              	.L97:
1679:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1680:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1681:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1682:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1683:Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
 1152              		.loc 1 1683 0
 1153 00aa 0D49     		ldr	r1, .L99
 1154 00ac 0A00     		movs	r2, r1
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 51


 1155 00ae 3432     		adds	r2, r2, #52
 1156 00b0 9278     		ldrb	r2, [r2, #2]
1684:Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
 1157              		.loc 1 1684 0
 1158 00b2 3420     		movs	r0, #52
 1159 00b4 095C     		ldrb	r1, [r1, r0]
1683:Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
 1160              		.loc 1 1683 0
 1161 00b6 501A     		subs	r0, r2, r1
 1162              	.LVL116:
1685:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1686:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1687:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] +
 1163              		.loc 1 1687 0
 1164 00b8 C918     		adds	r1, r1, r3
 1165 00ba 8918     		adds	r1, r1, r2
 1166              	.LVL117:
1688:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
1689:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
1690:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1691:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1692:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
 1167              		.loc 1 1692 0
 1168 00bc 0002     		lsls	r0, r0, #8
 1169              	.LVL118:
 1170 00be FFF7FEFF 		bl	__aeabi_idiv
 1171              	.LVL119:
 1172 00c2 2402     		lsls	r4, r4, #8
 1173 00c4 0019     		adds	r0, r0, r4
 1174              	.LVL120:
1693:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1694:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1695:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1696:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(denominator < 0)
1697:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1698:Generated_Source\PSoC4/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1699:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1700:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1701:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1702:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator *= (int16)resolution;
 1175              		.loc 1 1702 0
 1176 00c6 6B46     		mov	r3, sp
 1177 00c8 0025     		movs	r5, #0
 1178 00ca 5D5F     		ldrsh	r5, [r3, r5]
 1179              	.LVL121:
 1180 00cc 6843     		muls	r0, r5
 1181              	.LVL122:
1703:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1704:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Round result and put it to uint8 */
1705:Generated_Source\PSoC4/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
 1182              		.loc 1 1705 0
 1183 00ce FE23     		movs	r3, #254
 1184 00d0 DB01     		lsls	r3, r3, #7
 1185 00d2 9C46     		mov	ip, r3
 1186 00d4 6044     		add	r0, r0, ip
 1187              	.LVL123:
 1188 00d6 000C     		lsrs	r0, r0, #16
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 52


 1189              	.LVL124:
 1190 00d8 C0B2     		uxtb	r0, r0
 1191              	.LVL125:
1706:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1707:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1708:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1192              		.loc 1 1708 0
 1193 00da 03B0     		add	sp, sp, #12
 1194              		@ sp needed
 1195 00dc F0BD     		pop	{r4, r5, r6, r7, pc}
 1196              	.L100:
 1197 00de C046     		.align	2
 1198              	.L99:
 1199 00e0 00000000 		.word	.LANCHOR0
 1200              		.cfi_endproc
 1201              	.LFE60:
 1202              		.size	CapSense_CalcCentroid, .-CapSense_CalcCentroid
 1203              		.section	.text.CapSense_GetRadialCentroidPos,"ax",%progbits
 1204              		.align	2
 1205              		.global	CapSense_GetRadialCentroidPos
 1206              		.code	16
 1207              		.thumb_func
 1208              		.type	CapSense_GetRadialCentroidPos, %function
 1209              	CapSense_GetRadialCentroidPos:
 1210              	.LFB62:
1709:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1710:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1711:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1712:Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1713:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1714:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1715:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1716:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1717:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1718:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1719:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1720:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1721:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1722:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1723:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1724:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1725:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1726:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__LS           5
1727:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1728:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1729:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the linear slider.
1730:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1731:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1732:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1733:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1734:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1735:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1736:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1737:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1738:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1739:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1740:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 53


1741:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1742:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1743:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1744:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1745:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1746:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1747:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1748:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint32 widget)
1749:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1750:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1751:Generated_Source\PSoC4/CapSense_CSHL.c ****             const uint8 *diplex;
1752:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1753:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1754:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1755:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1756:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1757:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1758:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1759:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1760:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1761:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1762:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1763:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1764:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1765:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1766:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1767:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1768:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1769:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1770:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1771:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1772:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1773:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1774:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1775:Generated_Source\PSoC4/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1776:Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1777:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1778:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1779:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1780:Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = 0u;
1781:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1782:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1783:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1784:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1785:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1786:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1787:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1788:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
1789:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1790:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1791:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != 0xFFu)
1792:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1793:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1794:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
1795:Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1796:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1797:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 54


1798:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1799:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1800:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1801:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1802:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1803:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1804:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1805:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1806:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1807:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1808:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1809:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1810:Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1811:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1812:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1813:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
1814:Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1815:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1816:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1817:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1818:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1819:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1820:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1821:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1822:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1823:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1824:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1825:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1826:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1827:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1828:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
1829:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1830:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1831:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1832:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1833:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1834:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1835:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1836:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1837:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1838:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1839:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1840:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1841:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1842:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1843:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1844:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1845:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1846:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1847:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1848:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1849:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1850:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1851:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1852:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1853:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1854:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 55


1855:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1856:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1857:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1858:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1859:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1860:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1861:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1862:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1863:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1864:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1865:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1866:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1867:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1868:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1869:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1870:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1871:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1872:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1873:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1874:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1875:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1876:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1877:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1878:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1879:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1880:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1881:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1882:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1883:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1884:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1885:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1886:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1887:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1888:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1889:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1890:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1891:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1892:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1893:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1894:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1895:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1896:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1897:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found */
1898:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
1899:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1900:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1901:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
1902:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1903:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1904:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1905:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1906:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1907:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1908:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1909:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1910:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1911:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 56


1912:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1913:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1914:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1915:Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1916:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1917:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1918:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1919:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1920:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1921:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1922:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1923:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1924:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1925:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1926:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1927:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1928:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1929:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__RS           5
1930:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1931:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1932:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the radial slider.
1933:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1934:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1935:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
1936:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1937:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1938:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1939:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1940:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1941:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1942:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1943:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1944:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1945:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1946:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1947:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1948:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1949:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1950:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1951:Generated_Source\PSoC4/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint32 widget)
1952:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1211              		.loc 1 1952 0
 1212              		.cfi_startproc
 1213              		@ args = 0, pretend = 0, frame = 0
 1214              		@ frame_needed = 0, uses_anonymous_args = 0
 1215              	.LVL126:
 1216 0000 10B5     		push	{r4, lr}
 1217              		.cfi_def_cfa_offset 8
 1218              		.cfi_offset 4, -8
 1219              		.cfi_offset 14, -4
 1220 0002 82B0     		sub	sp, sp, #8
 1221              		.cfi_def_cfa_offset 16
 1222 0004 0400     		movs	r4, r0
 1223              	.LVL127:
1953:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1954:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1955:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 57


1956:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1957:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1958:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1959:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1960:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1961:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1962:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1963:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1964:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1965:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1966:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1967:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1968:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1969:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1970:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1971:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1972:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1973:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1974:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1975:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
 1224              		.loc 1 1975 0
 1225 0006 0A4B     		ldr	r3, .L104
 1226 0008 1A5C     		ldrb	r2, [r3, r0]
 1227 000a 0A21     		movs	r1, #10
 1228 000c 0020     		movs	r0, #0
 1229              	.LVL128:
 1230 000e FFF7FEFF 		bl	CapSense_FindMaximum
 1231              	.LVL129:
1976:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1977:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1978:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != CapSense_MAXIMUM_CENTROID)
 1232              		.loc 1 1978 0
 1233 0012 FF28     		cmp	r0, #255
 1234 0014 09D0     		beq	.L103
1979:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1980:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1981:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
 1235              		.loc 1 1981 0
 1236 0016 074B     		ldr	r3, .L104+4
 1237 0018 1B5D     		ldrb	r3, [r3, r4]
 1238 001a 0093     		str	r3, [sp]
 1239 001c 064B     		ldr	r3, .L104+8
 1240 001e 0A22     		movs	r2, #10
 1241 0020 0021     		movs	r1, #0
 1242 0022 FFF7FEFF 		bl	CapSense_CalcCentroid
 1243              	.LVL130:
 1244 0026 80B2     		uxth	r0, r0
 1245              	.LVL131:
 1246 0028 00E0     		b	.L102
 1247              	.LVL132:
 1248              	.L103:
1982:Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1983:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1984:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1985:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1986:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1987:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 58


1988:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1989:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1990:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1991:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1992:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1993:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1994:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1995:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1996:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1997:Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1998:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1999:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2000:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  ||
2001:Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2002:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2003:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
2004:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2005:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2006:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2007:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
2008:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2009:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2010:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2011:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
2012:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2013:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
2014:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2015:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
2016:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2017:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2018:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2019:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2020:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
2021:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2022:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2023:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
2024:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
2025:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2026:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2027:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER &
2028:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2029:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2030:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2031:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
2032:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2033:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2034:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2035:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2036:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
2037:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2038:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2039:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
2040:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2041:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2042:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2043:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2044:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 59


2045:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2046:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2047:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2048:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2049:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
2050:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2051:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2052:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2053:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER &
2054:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2055:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2056:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2057:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2058:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2059:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2060:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
2061:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2062:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2063:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2064:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER &
2065:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2066:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2067:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2068:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2069:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2070:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2071:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
2072:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
2073:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2074:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2075:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
2076:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2077:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2078:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2079:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2080:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2081:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2082:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2083:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2084:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2085:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum was not found */
2086:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
 1249              		.loc 1 2086 0
 1250 002a 0448     		ldr	r0, .L104+12
 1251              	.LVL133:
 1252              	.L102:
2087:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2088:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2089:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2090:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2091:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2092:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2093:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2094:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2095:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2096:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2097:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 60


2098:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1253              		.loc 1 2098 0
 1254 002c 02B0     		add	sp, sp, #8
 1255              		@ sp needed
 1256              	.LVL134:
 1257 002e 10BD     		pop	{r4, pc}
 1258              	.L105:
 1259              		.align	2
 1260              	.L104:
 1261 0030 00000000 		.word	CapSense_fingerThreshold
 1262 0034 00000000 		.word	CapSense_noiseThreshold
 1263 0038 1C0B0000 		.word	2844
 1264 003c FFFF0000 		.word	65535
 1265              		.cfi_endproc
 1266              	.LFE62:
 1267              		.size	CapSense_GetRadialCentroidPos, .-CapSense_GetRadialCentroidPos
 1268              		.section	.text.CapSense_MedianFilter,"ax",%progbits
 1269              		.align	2
 1270              		.global	CapSense_MedianFilter
 1271              		.code	16
 1272              		.thumb_func
 1273              		.type	CapSense_MedianFilter, %function
 1274              	CapSense_MedianFilter:
 1275              	.LFB63:
2099:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2100:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2101:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2102:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2103:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2104:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
2105:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2106:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2107:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2108:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2109:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2110:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2111:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2112:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
2113:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2114:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  customizer.
2115:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2116:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2117:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
2118:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2119:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__TP            5
2120:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2121:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2122:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
2123:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[0u]  - position of X
2124:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
2125:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2126:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2127:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2128:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2129:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2130:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2131:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 61


2132:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2133:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2134:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2135:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   calculations.
2136:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2137:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2138:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetTouchCentroidPos(uint32 widget, uint16* pos)
2139:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2140:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2141:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posXIndex;
2142:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posYIndex;
2143:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
2144:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
2145:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2146:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2147:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2148:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2149:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint16 tempPos;
2150:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2151:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2152:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
2153:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2154:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxX;
2155:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxY;
2156:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posX;
2157:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posY;
2158:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 touch = 0u;
2159:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
2160:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
2161:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2162:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
2163:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
2164:Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
2165:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2166:Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
2167:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2168:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2169:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (MaxX != CapSense_MAXIMUM_CENTROID)
2170:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2171:Generated_Source\PSoC4/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
2172:Generated_Source\PSoC4/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
2173:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2174:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
2175:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
2176:Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
2177:Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
2178:Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
2179:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2180:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2181:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (MaxY != CapSense_MAXIMUM_CENTROID)
2182:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2183:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2184:Generated_Source\PSoC4/CapSense_CSHL.c ****                 touch = 1u;
2185:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2186:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate Y centroid */
2187:Generated_Source\PSoC4/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count,
2188:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 62


2189:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2190:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate X centroid */
2191:Generated_Source\PSoC4/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
2192:Generated_Source\PSoC4/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
2193:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2194:Generated_Source\PSoC4/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count,
2195:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
2196:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2197:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2198:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
2199:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2200:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2201:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Calculate position to store filters data */
2202:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2203:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
2204:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2205:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
2206:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2207:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Init filters */
2208:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
2209:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
2210:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2211:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
2212:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
2213:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
2214:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2215:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2216:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
2217:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2218:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2219:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
2220:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
2221:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2222:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2223:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2224:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
2225:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2226:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2227:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2228:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
2229:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2230:Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
2231:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2232:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Do filtering */
2233:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2234:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2235:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2236:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2237:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
2238:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2239:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2240:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2241:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2242:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2243:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2244:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2245:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 63


2246:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2247:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2248:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2249:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2250:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2251:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2252:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2253:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
2254:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2255:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2256:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2257:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
2258:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2259:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2260:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2261:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
2262:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2263:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2264:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2265:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2266:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2267:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2268:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2269:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY,
2270:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2271:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2272:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2273:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2274:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2275:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2276:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2277:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2278:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2279:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2280:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2281:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2282:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2283:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2284:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX,
2285:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
2286:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2287:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2288:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY,
2289:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2290:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2291:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2292:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2293:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
2294:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2295:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2296:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2297:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2298:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2299:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2300:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
2301:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2302:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 64


2303:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2304:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
2305:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2306:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2307:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2308:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2309:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
2310:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2311:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2312:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2313:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2314:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2315:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     {
2316:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX,
2317:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2318:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
2319:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2320:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY,
2321:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2322:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
2323:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     }
2324:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
2325:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2326:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2327:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2328:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2329:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2330:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2331:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Save positions */
2332:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = posX;
2333:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = posY;
2334:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2335:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2336:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2337:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2338:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(touch == 0u)
2339:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2340:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2341:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2342:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2343:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2344:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2345:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2346:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2347:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2348:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (touch);
2349:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2350:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2351:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2352:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2353:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2354:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2355:Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) )
2356:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2357:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
2358:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2359:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 65


2360:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2361:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Median filter function.
2362:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the
2363:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  median value.
2364:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2365:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2366:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2367:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2368:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2369:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2370:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2371:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2372:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2373:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2374:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2375:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2376:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2377:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2378:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2379:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2380:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2381:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1276              		.loc 1 2381 0
 1277              		.cfi_startproc
 1278              		@ args = 0, pretend = 0, frame = 0
 1279              		@ frame_needed = 0, uses_anonymous_args = 0
 1280              		@ link register save eliminated.
 1281              	.LVL135:
2382:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 tmp;
2383:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2384:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
 1282              		.loc 1 2384 0
 1283 0000 8842     		cmp	r0, r1
 1284 0002 02D9     		bls	.L107
 1285 0004 0300     		movs	r3, r0
2385:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2386:Generated_Source\PSoC4/CapSense_CSHL.c ****             tmp = x2;
2387:Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
2388:Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 1286              		.loc 1 2388 0
 1287 0006 0800     		movs	r0, r1
 1288              	.LVL136:
2387:Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 1289              		.loc 1 2387 0
 1290 0008 1900     		movs	r1, r3
 1291              	.LVL137:
 1292              	.L107:
2389:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2390:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2391:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x2 > x3)
 1293              		.loc 1 2391 0
 1294 000a 9142     		cmp	r1, r2
 1295 000c 00D9     		bls	.L108
2392:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2393:Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x3;
 1296              		.loc 1 2393 0
 1297 000e 1100     		movs	r1, r2
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 66


 1298              	.LVL138:
 1299              	.L108:
2394:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2395:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2396:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 1300              		.loc 1 2396 0
 1301 0010 031C     		adds	r3, r0, #0
 1302 0012 8842     		cmp	r0, r1
 1303 0014 00D2     		bcs	.L109
 1304 0016 0B1C     		adds	r3, r1, #0
 1305              	.L109:
 1306 0018 98B2     		uxth	r0, r3
 1307              	.LVL139:
2397:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1308              		.loc 1 2397 0
 1309              		@ sp needed
 1310 001a 7047     		bx	lr
 1311              		.cfi_endproc
 1312              	.LFE63:
 1313              		.size	CapSense_MedianFilter, .-CapSense_MedianFilter
 1314              		.section	.text.CapSense_IIR4Filter,"ax",%progbits
 1315              		.align	2
 1316              		.global	CapSense_IIR4Filter
 1317              		.code	16
 1318              		.thumb_func
 1319              		.type	CapSense_IIR4Filter, %function
 1320              	CapSense_IIR4Filter:
 1321              	.LFB64:
2398:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2399:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2400:Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) ) */
2401:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2402:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2403:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) || \
2404:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER)) )
2405:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2406:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
2407:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2408:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2409:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2410:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Averaging filter function.
2411:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2412:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  reports the averaging value.
2413:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2414:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2415:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2416:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2417:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2418:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2419:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2420:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2421:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2422:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2423:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2424:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2425:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2426:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 67


2427:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2428:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2429:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2430:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2431:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2432:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2433:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2434:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2435:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
2436:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) ) */
2437:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2438:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2439:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2440:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2441:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2442:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
2443:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2444:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2445:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2446:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2447:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2448:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2449:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2450:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2451:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2452:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2453:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2454:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2455:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2456:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2457:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2458:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2459:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2460:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2461:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2462:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
2463:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2464:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2465:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2466:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2467:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2468:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 1u;
2469:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2470:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2471:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2472:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2473:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2474:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2475:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2476:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2477:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2478:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2479:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2480:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
2481:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2482:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2483:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 68


2484:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2485:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2486:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2487:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2488:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2489:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2490:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2491:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a filtered value.
2492:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2493:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2494:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2495:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2496:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2497:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2498:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2499:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2500:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2501:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1322              		.loc 1 2501 0
 1323              		.cfi_startproc
 1324              		@ args = 0, pretend = 0, frame = 0
 1325              		@ frame_needed = 0, uses_anonymous_args = 0
 1326              		@ link register save eliminated.
 1327              	.LVL140:
2502:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2503:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2504:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2505:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 1328              		.loc 1 2505 0
 1329 0000 4018     		adds	r0, r0, r1
 1330              	.LVL141:
2506:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 1331              		.loc 1 2506 0
 1332 0002 4900     		lsls	r1, r1, #1
 1333              	.LVL142:
 1334 0004 4018     		adds	r0, r0, r1
 1335              	.LVL143:
2507:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
 1336              		.loc 1 2507 0
 1337 0006 8008     		lsrs	r0, r0, #2
 1338              	.LVL144:
2508:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2509:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
 1339              		.loc 1 2509 0
 1340 0008 80B2     		uxth	r0, r0
 1341              	.LVL145:
2510:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1342              		.loc 1 2510 0
 1343              		@ sp needed
 1344 000a 7047     		bx	lr
 1345              		.cfi_endproc
 1346              	.LFE64:
 1347              		.size	CapSense_IIR4Filter, .-CapSense_IIR4Filter
 1348              		.section	.text.CapSense_UpdateBaselineNoThreshold,"ax",%progbits
 1349              		.align	2
 1350              		.global	CapSense_UpdateBaselineNoThreshold
 1351              		.code	16
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 69


 1352              		.thumb_func
 1353              		.type	CapSense_UpdateBaselineNoThreshold, %function
 1354              	CapSense_UpdateBaselineNoThreshold:
 1355              	.LFB36:
 355:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 1356              		.loc 1 355 0
 1357              		.cfi_startproc
 1358              		@ args = 0, pretend = 0, frame = 8
 1359              		@ frame_needed = 0, uses_anonymous_args = 0
 1360              	.LVL146:
 1361 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1362              		.cfi_def_cfa_offset 20
 1363              		.cfi_offset 4, -20
 1364              		.cfi_offset 5, -16
 1365              		.cfi_offset 6, -12
 1366              		.cfi_offset 7, -8
 1367              		.cfi_offset 14, -4
 1368 0002 4746     		mov	r7, r8
 1369 0004 80B4     		push	{r7}
 1370              		.cfi_def_cfa_offset 24
 1371              		.cfi_offset 8, -24
 1372 0006 82B0     		sub	sp, sp, #8
 1373              		.cfi_def_cfa_offset 32
 1374 0008 0400     		movs	r4, r0
 360:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold;
 1375              		.loc 1 360 0
 1376 000a 3E4B     		ldr	r3, .L124
 1377 000c 1E5C     		ldrb	r6, [r3, r0]
 369:Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 1378              		.loc 1 369 0
 1379 000e 3E4B     		ldr	r3, .L124+4
 1380 0010 9B5D     		ldrb	r3, [r3, r6]
 1381 0012 0193     		str	r3, [sp, #4]
 1382              	.LVL147:
 370:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1383              		.loc 1 370 0
 1384 0014 4200     		lsls	r2, r0, #1
 1385 0016 3D4B     		ldr	r3, .L124+8
 1386 0018 D75A     		ldrh	r7, [r2, r3]
 1387              	.LVL148:
 373:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1388              		.loc 1 373 0
 1389 001a 3D4B     		ldr	r3, .L124+12
 1390 001c 9B7B     		ldrb	r3, [r3, #14]
 1391 001e 002B     		cmp	r3, #0
 1392 0020 08D0     		beq	.L114
 394:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 1393              		.loc 1 394 0
 1394 0022 3C4D     		ldr	r5, .L124+16
 1395 0024 9046     		mov	r8, r2
 1396 0026 515B     		ldrh	r1, [r2, r5]
 1397 0028 3800     		movs	r0, r7
 1398              	.LVL149:
 1399 002a FFF7FEFF 		bl	CapSense_IIR4Filter
 1400              	.LVL150:
 1401 002e 0700     		movs	r7, r0
 1402              	.LVL151:
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 70


 395:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1403              		.loc 1 395 0
 1404 0030 4346     		mov	r3, r8
 1405 0032 5853     		strh	r0, [r3, r5]
 1406              	.LVL152:
 1407              	.L114:
 416:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 1408              		.loc 1 416 0
 1409 0034 E1B2     		uxtb	r1, r4
 1410 0036 354A     		ldr	r2, .L124+8
 1411 0038 3748     		ldr	r0, .L124+20
 1412 003a FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_60
 1413              	.LVL153:
 421:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1414              		.loc 1 421 0
 1415 003e 6300     		lsls	r3, r4, #1
 1416 0040 364A     		ldr	r2, .L124+24
 1417 0042 9A5A     		ldrh	r2, [r3, r2]
 1418 0044 9742     		cmp	r7, r2
 1419 0046 07D3     		bcc	.L115
 423:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 1420              		.loc 1 423 0
 1421 0048 0021     		movs	r1, #0
 1422 004a 354B     		ldr	r3, .L124+28
 1423 004c 1955     		strb	r1, [r3, r4]
 424:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 1424              		.loc 1 424 0
 1425 004e BD1A     		subs	r5, r7, r2
 1426 0050 ADB2     		uxth	r5, r5
 1427              	.LVL154:
 425:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1428              		.loc 1 425 0
 1429 0052 0123     		movs	r3, #1
 1430 0054 9846     		mov	r8, r3
 1431 0056 03E0     		b	.L116
 1432              	.LVL155:
 1433              	.L115:
 429:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 1434              		.loc 1 429 0
 1435 0058 D51B     		subs	r5, r2, r7
 1436 005a ADB2     		uxth	r5, r5
 1437              	.LVL156:
 430:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1438              		.loc 1 430 0
 1439 005c 0023     		movs	r3, #0
 1440 005e 9846     		mov	r8, r3
 1441              	.LVL157:
 1442              	.L116:
 434:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 1443              		.loc 1 434 0
 1444 0060 4346     		mov	r3, r8
 1445 0062 002B     		cmp	r3, #0
 1446 0064 15D1     		bne	.L117
 434:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 1447              		.loc 1 434 0 is_stmt 0 discriminator 1
 1448 0066 2F4B     		ldr	r3, .L124+32
 1449 0068 9B5D     		ldrb	r3, [r3, r6]
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 71


 1450 006a 9D42     		cmp	r5, r3
 1451 006c 11D9     		bls	.L117
 439:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 1452              		.loc 1 439 0 is_stmt 1
 1453 006e 2C4B     		ldr	r3, .L124+28
 1454 0070 1B5D     		ldrb	r3, [r3, r4]
 1455 0072 274A     		ldr	r2, .L124+12
 1456 0074 1219     		adds	r2, r2, r4
 1457 0076 1279     		ldrb	r2, [r2, #4]
 1458 0078 9342     		cmp	r3, r2
 1459 007a 06D3     		bcc	.L118
 441:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 1460              		.loc 1 441 0
 1461 007c 2000     		movs	r0, r4
 1462 007e FFF7FEFF 		bl	CapSense_BaseInit
 1463              	.LVL158:
 442:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1464              		.loc 1 442 0
 1465 0082 0022     		movs	r2, #0
 1466 0084 264B     		ldr	r3, .L124+28
 1467 0086 1A55     		strb	r2, [r3, r4]
 1468 0088 1EE0     		b	.L119
 1469              	.L118:
 446:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1470              		.loc 1 446 0
 1471 008a 0133     		adds	r3, r3, #1
 1472 008c 244A     		ldr	r2, .L124+28
 1473 008e 1355     		strb	r3, [r2, r4]
 1474 0090 1AE0     		b	.L119
 1475              	.L117:
 454:Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 1476              		.loc 1 454 0
 1477 0092 6B46     		mov	r3, sp
 1478 0094 9B88     		ldrh	r3, [r3, #4]
 1479 0096 9D42     		cmp	r5, r3
 1480 0098 06D9     		bls	.L120
 455:Generated_Source\PSoC4/CapSense_CSHL.c ****                && (sign == 0u)))
 1481              		.loc 1 455 0 discriminator 1
 1482 009a 224B     		ldr	r3, .L124+32
 1483 009c 9B5D     		ldrb	r3, [r3, r6]
 454:Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 1484              		.loc 1 454 0 discriminator 1
 1485 009e 9D42     		cmp	r5, r3
 1486 00a0 12D2     		bcs	.L119
 456:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 1487              		.loc 1 456 0
 1488 00a2 4346     		mov	r3, r8
 1489 00a4 002B     		cmp	r3, #0
 1490 00a6 0FD1     		bne	.L119
 1491              	.L120:
 467:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 1492              		.loc 1 467 0
 1493 00a8 1302     		lsls	r3, r2, #8
 1494 00aa 9C46     		mov	ip, r3
 1495              	.LVL159:
 468:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1496              		.loc 1 468 0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 72


 1497 00ac 1B48     		ldr	r0, .L124+24
 1498 00ae 0119     		adds	r1, r0, r4
 1499 00b0 0B7D     		ldrb	r3, [r1, #20]
 1500              	.LVL160:
 1501 00b2 6646     		mov	r6, ip
 1502 00b4 3343     		orrs	r3, r6
 1503              	.LVL161:
 471:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1504              		.loc 1 471 0
 1505 00b6 FF18     		adds	r7, r7, r3
 1506              	.LVL162:
 474:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1507              		.loc 1 474 0
 1508 00b8 BF1A     		subs	r7, r7, r2
 1509              	.LVL163:
 477:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 1510              		.loc 1 477 0
 1511 00ba 3A0A     		lsrs	r2, r7, #8
 1512 00bc 6300     		lsls	r3, r4, #1
 1513 00be C252     		strh	r2, [r0, r3]
 478:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1514              		.loc 1 478 0
 1515 00c0 0F75     		strb	r7, [r1, #20]
 480:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 1516              		.loc 1 480 0
 1517 00c2 0022     		movs	r2, #0
 1518 00c4 164B     		ldr	r3, .L124+28
 1519 00c6 1A55     		strb	r2, [r3, r4]
 1520              	.LVL164:
 1521              	.L119:
 487:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1522              		.loc 1 487 0
 1523 00c8 6B46     		mov	r3, sp
 1524 00ca 9E88     		ldrh	r6, [r3, #4]
 1525 00cc B542     		cmp	r5, r6
 1526 00ce 0FD9     		bls	.L121
 487:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1527              		.loc 1 487 0 is_stmt 0 discriminator 1
 1528 00d0 4346     		mov	r3, r8
 1529 00d2 002B     		cmp	r3, #0
 1530 00d4 0CD0     		beq	.L121
 1531              	.LVL165:
 491:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 1532              		.loc 1 491 0 is_stmt 1
 1533 00d6 FF2D     		cmp	r5, #255
 1534 00d8 05D9     		bls	.L122
 493:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 1535              		.loc 1 493 0
 1536 00da 104B     		ldr	r3, .L124+24
 1537              	.LVL166:
 1538 00dc 1C19     		adds	r4, r3, r4
 1539              	.LVL167:
 1540 00de FF22     		movs	r2, #255
 1541 00e0 2023     		movs	r3, #32
 1542 00e2 E254     		strb	r2, [r4, r3]
 1543 00e4 09E0     		b	.L113
 1544              	.LVL168:
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 73


 1545              	.L122:
 497:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 1546              		.loc 1 497 0
 1547 00e6 0D4B     		ldr	r3, .L124+24
 1548              	.LVL169:
 1549 00e8 1C19     		adds	r4, r3, r4
 1550              	.LVL170:
 1551 00ea 2023     		movs	r3, #32
 1552 00ec E554     		strb	r5, [r4, r3]
 1553 00ee 04E0     		b	.L113
 1554              	.LVL171:
 1555              	.L121:
 506:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1556              		.loc 1 506 0
 1557 00f0 0A4B     		ldr	r3, .L124+24
 1558 00f2 1C19     		adds	r4, r3, r4
 1559              	.LVL172:
 1560 00f4 0022     		movs	r2, #0
 1561 00f6 2023     		movs	r3, #32
 1562 00f8 E254     		strb	r2, [r4, r3]
 1563              	.L113:
 513:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1564              		.loc 1 513 0
 1565 00fa 02B0     		add	sp, sp, #8
 1566              		@ sp needed
 1567              	.LVL173:
 1568              	.LVL174:
 1569 00fc 04BC     		pop	{r2}
 1570 00fe 9046     		mov	r8, r2
 1571 0100 F0BD     		pop	{r4, r5, r6, r7, pc}
 1572              	.L125:
 1573 0102 C046     		.align	2
 1574              	.L124:
 1575 0104 00000000 		.word	CapSense_widgetNumber
 1576 0108 00000000 		.word	CapSense_noiseThreshold
 1577 010c 00000000 		.word	CapSense_sensorRaw
 1578 0110 00000000 		.word	.LANCHOR1
 1579 0114 00000000 		.word	CapSense_rawFilterData1
 1580 0118 00000000 		.word	CapSense_config
 1581 011c 00000000 		.word	.LANCHOR0
 1582 0120 00000000 		.word	CapSense_lowBaselineResetCnt
 1583 0124 00000000 		.word	CapSense_negativeNoiseThreshold
 1584              		.cfi_endproc
 1585              	.LFE36:
 1586              		.size	CapSense_UpdateBaselineNoThreshold, .-CapSense_UpdateBaselineNoThreshold
 1587              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 1588              		.align	2
 1589              		.global	CapSense_UpdateSensorBaseline
 1590              		.code	16
 1591              		.thumb_func
 1592              		.type	CapSense_UpdateSensorBaseline, %function
 1593              	CapSense_UpdateSensorBaseline:
 1594              	.LFB37:
 547:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 1595              		.loc 1 547 0
 1596              		.cfi_startproc
 1597              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 74


 1598              		@ frame_needed = 0, uses_anonymous_args = 0
 1599              	.LVL175:
 1600 0000 10B5     		push	{r4, lr}
 1601              		.cfi_def_cfa_offset 8
 1602              		.cfi_offset 4, -8
 1603              		.cfi_offset 14, -4
 1604 0002 0400     		movs	r4, r0
 559:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 1605              		.loc 1 559 0
 1606 0004 FFF7FEFF 		bl	CapSense_UpdateThresholds
 1607              	.LVL176:
 562:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1608              		.loc 1 562 0
 1609 0008 2000     		movs	r0, r4
 1610 000a FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 1611              	.LVL177:
 568:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1612              		.loc 1 568 0
 1613              		@ sp needed
 1614              	.LVL178:
 1615 000e 10BD     		pop	{r4, pc}
 1616              		.cfi_endproc
 1617              	.LFE37:
 1618              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 1619              		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 1620              		.align	2
 1621              		.global	CapSense_UpdateEnabledBaselines
 1622              		.code	16
 1623              		.thumb_func
 1624              		.type	CapSense_UpdateEnabledBaselines, %function
 1625              	CapSense_UpdateEnabledBaselines:
 1626              	.LFB38:
 601:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 1627              		.loc 1 601 0
 1628              		.cfi_startproc
 1629              		@ args = 0, pretend = 0, frame = 0
 1630              		@ frame_needed = 0, uses_anonymous_args = 0
 1631 0000 10B5     		push	{r4, lr}
 1632              		.cfi_def_cfa_offset 8
 1633              		.cfi_offset 4, -8
 1634              		.cfi_offset 14, -4
 1635              	.LVL179:
 605:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1636              		.loc 1 605 0
 1637 0002 0024     		movs	r4, #0
 1638 0004 09E0     		b	.L128
 1639              	.LVL180:
 1640              	.L130:
 607:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1641              		.loc 1 607 0
 1642 0006 2100     		movs	r1, r4
 1643 0008 0548     		ldr	r0, .L131
 1644 000a FFF7FEFF 		bl	CapSense_GetBitValue
 1645              	.LVL181:
 609:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 1646              		.loc 1 609 0
 1647 000e 0028     		cmp	r0, #0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 75


 1648 0010 02D0     		beq	.L129
 611:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1649              		.loc 1 611 0
 1650 0012 2000     		movs	r0, r4
 1651              	.LVL182:
 1652 0014 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 1653              	.LVL183:
 1654              	.L129:
 605:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1655              		.loc 1 605 0 discriminator 2
 1656 0018 0134     		adds	r4, r4, #1
 1657              	.LVL184:
 1658              	.L128:
 605:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1659              		.loc 1 605 0 is_stmt 0 discriminator 1
 1660 001a 092C     		cmp	r4, #9
 1661 001c F3D9     		bls	.L130
 614:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1662              		.loc 1 614 0 is_stmt 1
 1663              		@ sp needed
 1664              	.LVL185:
 1665 001e 10BD     		pop	{r4, pc}
 1666              	.L132:
 1667              		.align	2
 1668              	.L131:
 1669 0020 00000000 		.word	CapSense_sensorEnableMask
 1670              		.cfi_endproc
 1671              	.LFE38:
 1672              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 1673              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 1674              		.align	2
 1675              		.global	CapSense_UpdateWidgetBaseline
 1676              		.code	16
 1677              		.thumb_func
 1678              		.type	CapSense_UpdateWidgetBaseline, %function
 1679              	CapSense_UpdateWidgetBaseline:
 1680              	.LFB39:
 646:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 1681              		.loc 1 646 0
 1682              		.cfi_startproc
 1683              		@ args = 0, pretend = 0, frame = 0
 1684              		@ frame_needed = 0, uses_anonymous_args = 0
 1685              	.LVL186:
 1686 0000 10B5     		push	{r4, lr}
 1687              		.cfi_def_cfa_offset 8
 1688              		.cfi_offset 4, -8
 1689              		.cfi_offset 14, -4
 1690              	.LVL187:
 662:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1691              		.loc 1 662 0
 1692 0002 0024     		movs	r4, #0
 1693 0004 09E0     		b	.L134
 1694              	.LVL188:
 1695              	.L136:
 664:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1696              		.loc 1 664 0
 1697 0006 2100     		movs	r1, r4
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 76


 1698 0008 0548     		ldr	r0, .L137
 1699 000a FFF7FEFF 		bl	CapSense_GetBitValue
 1700              	.LVL189:
 666:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 1701              		.loc 1 666 0
 1702 000e 0028     		cmp	r0, #0
 1703 0010 02D0     		beq	.L135
 668:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1704              		.loc 1 668 0
 1705 0012 2000     		movs	r0, r4
 1706              	.LVL190:
 1707 0014 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 1708              	.LVL191:
 1709              	.L135:
 662:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1710              		.loc 1 662 0 discriminator 2
 1711 0018 0134     		adds	r4, r4, #1
 1712              	.LVL192:
 1713              	.L134:
 662:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1714              		.loc 1 662 0 is_stmt 0 discriminator 1
 1715 001a 092C     		cmp	r4, #9
 1716 001c F3D9     		bls	.L136
 671:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1717              		.loc 1 671 0 is_stmt 1
 1718              		@ sp needed
 1719              	.LVL193:
 1720 001e 10BD     		pop	{r4, pc}
 1721              	.L138:
 1722              		.align	2
 1723              	.L137:
 1724 0020 00000000 		.word	CapSense_sensorEnableMask
 1725              		.cfi_endproc
 1726              	.LFE39:
 1727              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 1728              		.section	.text.CapSense_GetCentroidPos,"ax",%progbits
 1729              		.align	2
 1730              		.global	CapSense_GetCentroidPos
 1731              		.code	16
 1732              		.thumb_func
 1733              		.type	CapSense_GetCentroidPos, %function
 1734              	CapSense_GetCentroidPos:
 1735              	.LFB61:
1749:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
 1736              		.loc 1 1749 0
 1737              		.cfi_startproc
 1738              		@ args = 0, pretend = 0, frame = 0
 1739              		@ frame_needed = 0, uses_anonymous_args = 0
 1740              	.LVL194:
 1741 0000 30B5     		push	{r4, r5, lr}
 1742              		.cfi_def_cfa_offset 12
 1743              		.cfi_offset 4, -12
 1744              		.cfi_offset 5, -8
 1745              		.cfi_offset 14, -4
 1746 0002 83B0     		sub	sp, sp, #12
 1747              		.cfi_def_cfa_offset 24
 1748 0004 0400     		movs	r4, r0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 77


1756:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
 1749              		.loc 1 1756 0
 1750 0006 184B     		ldr	r3, .L143
 1751 0008 1B18     		adds	r3, r3, r0
 1752 000a 1D7C     		ldrb	r5, [r3, #16]
 1753              	.LVL195:
1788:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
 1754              		.loc 1 1788 0
 1755 000c 174B     		ldr	r3, .L143+4
 1756 000e 1A5C     		ldrb	r2, [r3, r0]
 1757 0010 0A21     		movs	r1, #10
 1758 0012 0020     		movs	r0, #0
 1759              	.LVL196:
 1760 0014 FFF7FEFF 		bl	CapSense_FindMaximum
 1761              	.LVL197:
1791:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 1762              		.loc 1 1791 0
 1763 0018 FF28     		cmp	r0, #255
 1764 001a 1ED0     		beq	.L140
1794:Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
 1765              		.loc 1 1794 0
 1766 001c 144B     		ldr	r3, .L143+8
 1767 001e 1B5D     		ldrb	r3, [r3, r4]
 1768 0020 0093     		str	r3, [sp]
 1769 0022 144B     		ldr	r3, .L143+12
 1770 0024 0A22     		movs	r2, #10
 1771 0026 0021     		movs	r1, #0
 1772 0028 FFF7FEFF 		bl	CapSense_CalcCentroid
 1773              	.LVL198:
 1774 002c 0100     		movs	r1, r0
 1775 002e 80B2     		uxth	r0, r0
 1776              	.LVL199:
1802:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1777              		.loc 1 1802 0
 1778 0030 6B1C     		adds	r3, r5, #1
 1779 0032 DBB2     		uxtb	r3, r3
 1780              	.LVL200:
1804:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
 1781              		.loc 1 1804 0
 1782 0034 0C4A     		ldr	r2, .L143
 1783 0036 5219     		adds	r2, r2, r5
 1784 0038 127C     		ldrb	r2, [r2, #16]
 1785 003a 002A     		cmp	r2, #0
 1786 003c 06D1     		bne	.L141
1807:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
 1787              		.loc 1 1807 0
 1788 003e 0A4A     		ldr	r2, .L143
 1789 0040 D318     		adds	r3, r2, r3
 1790              	.LVL201:
 1791 0042 1974     		strb	r1, [r3, #16]
1824:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
 1792              		.loc 1 1824 0
 1793 0044 5519     		adds	r5, r2, r5
 1794              	.LVL202:
 1795 0046 0123     		movs	r3, #1
 1796 0048 2B74     		strb	r3, [r5, #16]
 1797 004a 0BE0     		b	.L142
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 78


 1798              	.LVL203:
 1799              	.L141:
1873:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
 1800              		.loc 1 1873 0
 1801 004c 064C     		ldr	r4, .L143
 1802              	.LVL204:
 1803 004e E418     		adds	r4, r4, r3
1872:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
 1804              		.loc 1 1872 0
 1805 0050 217C     		ldrb	r1, [r4, #16]
 1806 0052 FFF7FEFF 		bl	CapSense_IIR4Filter
 1807              	.LVL205:
1874:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
 1808              		.loc 1 1874 0
 1809 0056 2074     		strb	r0, [r4, #16]
 1810 0058 04E0     		b	.L142
 1811              	.LVL206:
 1812              	.L140:
1904:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
 1813              		.loc 1 1904 0
 1814 005a 034B     		ldr	r3, .L143
 1815 005c 5D19     		adds	r5, r3, r5
 1816              	.LVL207:
 1817 005e 0023     		movs	r3, #0
 1818 0060 2B74     		strb	r3, [r5, #16]
1898:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1819              		.loc 1 1898 0
 1820 0062 0548     		ldr	r0, .L143+16
 1821              	.LVL208:
 1822              	.L142:
1911:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
 1823              		.loc 1 1911 0
 1824 0064 03B0     		add	sp, sp, #12
 1825              		@ sp needed
 1826 0066 30BD     		pop	{r4, r5, pc}
 1827              	.L144:
 1828              		.align	2
 1829              	.L143:
 1830 0068 00000000 		.word	.LANCHOR1
 1831 006c 00000000 		.word	CapSense_fingerThreshold
 1832 0070 00000000 		.word	CapSense_noiseThreshold
 1833 0074 1C0B0000 		.word	2844
 1834 0078 FFFF0000 		.word	65535
 1835              		.cfi_endproc
 1836              	.LFE61:
 1837              		.size	CapSense_GetCentroidPos, .-CapSense_GetCentroidPos
 1838              		.section	.text.CapSense_GetWidgetNumber,"ax",%progbits
 1839              		.align	2
 1840              		.global	CapSense_GetWidgetNumber
 1841              		.code	16
 1842              		.thumb_func
 1843              		.type	CapSense_GetWidgetNumber, %function
 1844              	CapSense_GetWidgetNumber:
 1845              	.LFB65:
2511:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2512:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2513:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 79


2514:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2515:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2516:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2517:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) || \
2518:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)))
2519:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2520:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: uint16 CapSense_JitterFilter
2521:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2522:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2523:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2524:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Jitter filter function.
2525:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2526:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2527:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2528:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2529:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2530:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2531:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2532:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2533:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2534:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2535:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2536:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2537:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2538:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2539:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2540:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2)
2541:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2542:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2543:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2544:Generated_Source\PSoC4/CapSense_CSHL.c ****             x1--;
2545:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2546:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2547:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2548:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (x1 < x2)
2549:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2550:Generated_Source\PSoC4/CapSense_CSHL.c ****                 x1++;
2551:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2552:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2553:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2554:Generated_Source\PSoC4/CapSense_CSHL.c ****         return x1;
2555:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2556:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2557:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2558:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2559:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2560:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2561:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2562:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))
2563:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2564:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR8Filter
2565:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2566:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2567:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2568:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2569:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2570:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 80


2571:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2572:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2573:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2574:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2575:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2576:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2577:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2578:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2579:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2580:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2581:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2582:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2583:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2584:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2585:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2)
2586:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2587:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2588:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2589:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2590:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2591:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2592:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 3u;
2593:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2594:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2595:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2596:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)) */
2597:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2598:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2599:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
2600:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2601:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR16Filter
2602:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2603:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2604:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2605:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2606:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2607:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2608:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2609:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2610:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2611:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2612:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2613:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2614:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2615:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2616:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2617:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2618:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2619:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2620:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2621:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2622:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2)
2623:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2624:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2625:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2626:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2627:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 81


2628:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2629:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 4u;
2630:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2631:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2632:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2633:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) */
2634:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2635:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2636:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT))
2637:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2638:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2639:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetMatrixButtonPos
2640:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2641:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2642:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2643:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2644:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  button widget.
2645:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2646:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2647:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number;
2648:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be
2649:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           stored:
2650:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[0] - column position;
2651:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[1] - raw position.
2652:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2653:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2654:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2655:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  cases.
2656:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2657:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2658:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2659:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[ ] - used to store a difference between the current value of
2660:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  raw data and a previous value of the baseline.
2661:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2662:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2663:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2664:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2665:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2666:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2667:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2668:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
2669:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 retVal = 0u;
2670:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 row_sig_max = 0u;
2671:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 col_sig_max = 0u;
2672:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 row_ind = 0u;
2673:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 col_ind = 0u;
2674:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2675:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(widget) == 1u)
2676:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2677:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2678:Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget]; i < (CapSense_rawDataIndex[widget] + \
2679:Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget]); i++)
2680:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2681:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > col_sig_max)
2682:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2683:Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_ind = i;
2684:Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_sig_max = CapSense_sensorSignal[i];
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 82


2685:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2686:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2687:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2688:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2689:Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget+1u]; i < (CapSense_rawDataIndex[widget+1u] + \
2690:Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget+1u]); i++)
2691:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2692:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > row_sig_max)
2693:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2694:Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_ind = i;
2695:Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_sig_max = CapSense_sensorSignal[i];
2696:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2697:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2698:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2699:Generated_Source\PSoC4/CapSense_CSHL.c ****             if((col_sig_max >= CapSense_fingerThreshold[widget]) && \
2700:Generated_Source\PSoC4/CapSense_CSHL.c ****                (row_sig_max >= CapSense_fingerThreshold[widget+1u]))
2701:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2702:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = col_ind - CapSense_rawDataIndex[widget];
2703:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = row_ind - CapSense_rawDataIndex[widget+1u];
2704:Generated_Source\PSoC4/CapSense_CSHL.c ****                 retVal = 1u;
2705:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2706:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2707:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (retVal);
2708:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2709:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2710:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
2711:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2712:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2713:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetWidgetNumber
2714:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2715:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2716:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2717:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2718:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2719:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2720:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2721:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2722:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2723:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2724:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2725:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2726:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2727:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
2728:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2729:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2730:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2731:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2732:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2733:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_GetWidgetNumber(uint32 sensor)
2734:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1846              		.loc 1 2734 0
 1847              		.cfi_startproc
 1848              		@ args = 0, pretend = 0, frame = 0
 1849              		@ frame_needed = 0, uses_anonymous_args = 0
 1850              		@ link register save eliminated.
 1851              	.LVL209:
2735:Generated_Source\PSoC4/CapSense_CSHL.c ****     return((uint32)CapSense_widgetNumber[sensor]);
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 83


 1852              		.loc 1 2735 0
 1853 0000 014B     		ldr	r3, .L146
 1854 0002 185C     		ldrb	r0, [r3, r0]
 1855              	.LVL210:
2736:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1856              		.loc 1 2736 0
 1857              		@ sp needed
 1858 0004 7047     		bx	lr
 1859              	.L147:
 1860 0006 C046     		.align	2
 1861              	.L146:
 1862 0008 00000000 		.word	CapSense_widgetNumber
 1863              		.cfi_endproc
 1864              	.LFE65:
 1865              		.size	CapSense_GetWidgetNumber, .-CapSense_GetWidgetNumber
 1866              		.section	.text.CapSense_GetLowBaselineReset,"ax",%progbits
 1867              		.align	2
 1868              		.global	CapSense_GetLowBaselineReset
 1869              		.code	16
 1870              		.thumb_func
 1871              		.type	CapSense_GetLowBaselineReset, %function
 1872              	CapSense_GetLowBaselineReset:
 1873              	.LFB66:
2737:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2738:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2739:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetLowBaselineReset
2740:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2741:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2742:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2743:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2744:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2745:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2746:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2747:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2748:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2749:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2750:Generated_Source\PSoC4/CapSense_CSHL.c **** *  low baseline reset threshold value a sensor.
2751:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2752:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2753:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_lowBaselineReset[]  - stores low baseline reset values.
2754:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2755:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2756:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2757:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2758:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2759:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetLowBaselineReset(uint32 sensor)
2760:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1874              		.loc 1 2760 0
 1875              		.cfi_startproc
 1876              		@ args = 0, pretend = 0, frame = 0
 1877              		@ frame_needed = 0, uses_anonymous_args = 0
 1878              		@ link register save eliminated.
 1879              	.LVL211:
2761:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_lowBaselineReset[sensor]);
 1880              		.loc 1 2761 0
 1881 0000 014B     		ldr	r3, .L149
 1882 0002 1818     		adds	r0, r3, r0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 84


 1883              	.LVL212:
 1884 0004 0079     		ldrb	r0, [r0, #4]
2762:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1885              		.loc 1 2762 0
 1886              		@ sp needed
 1887 0006 7047     		bx	lr
 1888              	.L150:
 1889              		.align	2
 1890              	.L149:
 1891 0008 00000000 		.word	.LANCHOR1
 1892              		.cfi_endproc
 1893              	.LFE66:
 1894              		.size	CapSense_GetLowBaselineReset, .-CapSense_GetLowBaselineReset
 1895              		.section	.text.CapSense_GetDebounce,"ax",%progbits
 1896              		.align	2
 1897              		.global	CapSense_GetDebounce
 1898              		.code	16
 1899              		.thumb_func
 1900              		.type	CapSense_GetDebounce, %function
 1901              	CapSense_GetDebounce:
 1902              	.LFB67:
2763:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2764:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2765:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDebounce
2766:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2767:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2768:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2769:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns a debounce value.
2770:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2771:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2772:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2773:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2774:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2775:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2776:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Debounce value
2777:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2778:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2779:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounce[]  - stores the debounce value.
2780:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2781:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2782:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2783:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2784:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2785:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDebounce(uint32 widget)
2786:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1903              		.loc 1 2786 0
 1904              		.cfi_startproc
 1905              		@ args = 0, pretend = 0, frame = 0
 1906              		@ frame_needed = 0, uses_anonymous_args = 0
 1907              		@ link register save eliminated.
 1908              	.LVL213:
2787:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_debounce[widget]);
 1909              		.loc 1 2787 0
 1910 0000 014B     		ldr	r3, .L152
 1911 0002 185C     		ldrb	r0, [r3, r0]
 1912              	.LVL214:
2788:Generated_Source\PSoC4/CapSense_CSHL.c **** }
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 85


 1913              		.loc 1 2788 0
 1914              		@ sp needed
 1915 0004 7047     		bx	lr
 1916              	.L153:
 1917 0006 C046     		.align	2
 1918              	.L152:
 1919 0008 00000000 		.word	.LANCHOR1
 1920              		.cfi_endproc
 1921              	.LFE67:
 1922              		.size	CapSense_GetDebounce, .-CapSense_GetDebounce
 1923              		.section	.text.CapSense_EnableRawDataFilters,"ax",%progbits
 1924              		.align	2
 1925              		.global	CapSense_EnableRawDataFilters
 1926              		.code	16
 1927              		.thumb_func
 1928              		.type	CapSense_EnableRawDataFilters, %function
 1929              	CapSense_EnableRawDataFilters:
 1930              	.LFB68:
2789:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2790:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
2791:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2792:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_EnableRawDataFilters
2793:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2794:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2795:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2796:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Enables the rawdata filters for the sensor signals.
2797:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2798:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2799:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2800:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2801:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2802:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2803:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2804:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2805:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2806:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2807:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2808:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2809:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2810:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2811:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_EnableRawDataFilters(void)
2812:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1931              		.loc 1 2812 0
 1932              		.cfi_startproc
 1933              		@ args = 0, pretend = 0, frame = 0
 1934              		@ frame_needed = 0, uses_anonymous_args = 0
 1935              		@ link register save eliminated.
2813:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
 1936              		.loc 1 2813 0
 1937 0000 0122     		movs	r2, #1
 1938 0002 014B     		ldr	r3, .L155
 1939 0004 9A73     		strb	r2, [r3, #14]
2814:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1940              		.loc 1 2814 0
 1941              		@ sp needed
 1942 0006 7047     		bx	lr
 1943              	.L156:
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 86


 1944              		.align	2
 1945              	.L155:
 1946 0008 00000000 		.word	.LANCHOR1
 1947              		.cfi_endproc
 1948              	.LFE68:
 1949              		.size	CapSense_EnableRawDataFilters, .-CapSense_EnableRawDataFilters
 1950              		.section	.text.CapSense_DisableRawDataFilters,"ax",%progbits
 1951              		.align	2
 1952              		.global	CapSense_DisableRawDataFilters
 1953              		.code	16
 1954              		.thumb_func
 1955              		.type	CapSense_DisableRawDataFilters, %function
 1956              	CapSense_DisableRawDataFilters:
 1957              	.LFB69:
2815:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2816:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2817:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_DisableRawDataFilters
2818:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2819:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2820:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2821:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Disables the rawdata filters for the sensor signals.
2822:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2823:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2824:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2825:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2826:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2827:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2828:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2829:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2830:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2831:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2832:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2833:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2834:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2835:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2836:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_DisableRawDataFilters(void)
2837:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1958              		.loc 1 2837 0
 1959              		.cfi_startproc
 1960              		@ args = 0, pretend = 0, frame = 0
 1961              		@ frame_needed = 0, uses_anonymous_args = 0
 1962              		@ link register save eliminated.
2838:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_DISABLED;
 1963              		.loc 1 2838 0
 1964 0000 0022     		movs	r2, #0
 1965 0002 014B     		ldr	r3, .L158
 1966 0004 9A73     		strb	r2, [r3, #14]
2839:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1967              		.loc 1 2839 0
 1968              		@ sp needed
 1969 0006 7047     		bx	lr
 1970              	.L159:
 1971              		.align	2
 1972              	.L158:
 1973 0008 00000000 		.word	.LANCHOR1
 1974              		.cfi_endproc
 1975              	.LFE69:
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 87


 1976              		.size	CapSense_DisableRawDataFilters, .-CapSense_DisableRawDataFilters
 1977              		.global	CapSense_numberOfSensors
 1978              		.global	CapSense_rawDataIndex
 1979              		.global	CapSense_debounce
 1980              		.comm	CapSense_hysteresis,1,4
 1981              		.comm	CapSense_negativeNoiseThreshold,1,4
 1982              		.comm	CapSense_noiseThreshold,1,4
 1983              		.comm	CapSense_fingerThreshold,1,4
 1984              		.global	CapSense_enableRawFilters
 1985              		.global	CapSense_lowBaselineReset
 1986              		.comm	CapSense_lowBaselineResetCnt,10,4
 1987              		.global	CapSense_sensorOnMask
 1988              		.global	CapSense_sensorSignal
 1989              		.global	CapSense_sensorBaselineLow
 1990              		.global	CapSense_sensorBaseline
 1991              		.comm	CapSense_rawFilterData1,20,4
 1992              		.section	.rodata
 1993              		.align	2
 1994              		.type	CapSense_numberOfSensors, %object
 1995              		.size	CapSense_numberOfSensors, 1
 1996              	CapSense_numberOfSensors:
 1997 0000 0A       		.byte	10
 1998 0001 000000   		.space	3
 1999              		.type	CapSense_rawDataIndex, %object
 2000              		.size	CapSense_rawDataIndex, 1
 2001              	CapSense_rawDataIndex:
 2002 0004 00       		.space	1
 2003              		.data
 2004              		.align	2
 2005              		.set	.LANCHOR1,. + 0
 2006              		.type	CapSense_debounce, %object
 2007              		.size	CapSense_debounce, 1
 2008              	CapSense_debounce:
 2009 0000 01       		.byte	1
 2010 0001 000000   		.space	3
 2011              		.type	CapSense_lowBaselineReset, %object
 2012              		.size	CapSense_lowBaselineReset, 10
 2013              	CapSense_lowBaselineReset:
 2014 0004 1E       		.byte	30
 2015 0005 1E       		.byte	30
 2016 0006 1E       		.byte	30
 2017 0007 1E       		.byte	30
 2018 0008 1E       		.byte	30
 2019 0009 1E       		.byte	30
 2020 000a 1E       		.byte	30
 2021 000b 1E       		.byte	30
 2022 000c 1E       		.byte	30
 2023 000d 1E       		.byte	30
 2024              		.type	CapSense_enableRawFilters, %object
 2025              		.size	CapSense_enableRawFilters, 1
 2026              	CapSense_enableRawFilters:
 2027 000e 01       		.byte	1
 2028 000f 00       		.space	1
 2029              		.type	CapSense_posFiltersData, %object
 2030              		.size	CapSense_posFiltersData, 3
 2031              	CapSense_posFiltersData:
 2032 0010 01       		.byte	1
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 88


 2033 0011 00       		.byte	0
 2034 0012 00       		.byte	0
 2035              		.bss
 2036              		.align	2
 2037              		.set	.LANCHOR0,. + 0
 2038              		.type	CapSense_sensorBaseline, %object
 2039              		.size	CapSense_sensorBaseline, 20
 2040              	CapSense_sensorBaseline:
 2041 0000 00000000 		.space	20
 2041      00000000 
 2041      00000000 
 2041      00000000 
 2041      00000000 
 2042              		.type	CapSense_sensorBaselineLow, %object
 2043              		.size	CapSense_sensorBaselineLow, 10
 2044              	CapSense_sensorBaselineLow:
 2045 0014 00000000 		.space	10
 2045      00000000 
 2045      0000
 2046 001e 0000     		.space	2
 2047              		.type	CapSense_sensorSignal, %object
 2048              		.size	CapSense_sensorSignal, 10
 2049              	CapSense_sensorSignal:
 2050 0020 00000000 		.space	10
 2050      00000000 
 2050      0000
 2051 002a 0000     		.space	2
 2052              		.type	CapSense_debounceCounter.5489, %object
 2053              		.size	CapSense_debounceCounter.5489, 1
 2054              	CapSense_debounceCounter.5489:
 2055 002c 00       		.space	1
 2056 002d 000000   		.space	3
 2057              		.type	CapSense_sensorOnMask, %object
 2058              		.size	CapSense_sensorOnMask, 2
 2059              	CapSense_sensorOnMask:
 2060 0030 0000     		.space	2
 2061 0032 0000     		.space	2
 2062              		.type	CapSense_centroid.5541, %object
 2063              		.size	CapSense_centroid.5541, 3
 2064              	CapSense_centroid.5541:
 2065 0034 000000   		.space	3
 2066              		.text
 2067              	.Letext0:
 2068              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2069              		.file 3 "Generated_Source\\PSoC4\\CapSense_PVT.h"
 2070              		.file 4 "Generated_Source\\PSoC4\\CapSense.h"
 2071              		.section	.debug_info,"",%progbits
 2072              	.Ldebug_info0:
 2073 0000 22110000 		.4byte	0x1122
 2074 0004 0400     		.2byte	0x4
 2075 0006 00000000 		.4byte	.Ldebug_abbrev0
 2076 000a 04       		.byte	0x4
 2077 000b 01       		.uleb128 0x1
 2078 000c 3C040000 		.4byte	.LASF153
 2079 0010 0C       		.byte	0xc
 2080 0011 690A0000 		.4byte	.LASF154
 2081 0015 C50A0000 		.4byte	.LASF155
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 89


 2082 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2083 001d 00000000 		.4byte	0
 2084 0021 00000000 		.4byte	.Ldebug_line0
 2085 0025 02       		.uleb128 0x2
 2086 0026 01       		.byte	0x1
 2087 0027 06       		.byte	0x6
 2088 0028 0B0B0000 		.4byte	.LASF0
 2089 002c 02       		.uleb128 0x2
 2090 002d 01       		.byte	0x1
 2091 002e 08       		.byte	0x8
 2092 002f A5090000 		.4byte	.LASF1
 2093 0033 02       		.uleb128 0x2
 2094 0034 02       		.byte	0x2
 2095 0035 05       		.byte	0x5
 2096 0036 76080000 		.4byte	.LASF2
 2097 003a 02       		.uleb128 0x2
 2098 003b 02       		.byte	0x2
 2099 003c 07       		.byte	0x7
 2100 003d 170B0000 		.4byte	.LASF3
 2101 0041 02       		.uleb128 0x2
 2102 0042 04       		.byte	0x4
 2103 0043 05       		.byte	0x5
 2104 0044 80080000 		.4byte	.LASF4
 2105 0048 02       		.uleb128 0x2
 2106 0049 04       		.byte	0x4
 2107 004a 07       		.byte	0x7
 2108 004b 37090000 		.4byte	.LASF5
 2109 004f 02       		.uleb128 0x2
 2110 0050 08       		.byte	0x8
 2111 0051 05       		.byte	0x5
 2112 0052 BB060000 		.4byte	.LASF6
 2113 0056 02       		.uleb128 0x2
 2114 0057 08       		.byte	0x8
 2115 0058 07       		.byte	0x7
 2116 0059 41030000 		.4byte	.LASF7
 2117 005d 03       		.uleb128 0x3
 2118 005e 04       		.byte	0x4
 2119 005f 05       		.byte	0x5
 2120 0060 696E7400 		.ascii	"int\000"
 2121 0064 02       		.uleb128 0x2
 2122 0065 04       		.byte	0x4
 2123 0066 07       		.byte	0x7
 2124 0067 48010000 		.4byte	.LASF8
 2125 006b 04       		.uleb128 0x4
 2126 006c A70B0000 		.4byte	.LASF9
 2127 0070 02       		.byte	0x2
 2128 0071 E401     		.2byte	0x1e4
 2129 0073 2C000000 		.4byte	0x2c
 2130 0077 04       		.uleb128 0x4
 2131 0078 44060000 		.4byte	.LASF10
 2132 007c 02       		.byte	0x2
 2133 007d E501     		.2byte	0x1e5
 2134 007f 3A000000 		.4byte	0x3a
 2135 0083 04       		.uleb128 0x4
 2136 0084 C3070000 		.4byte	.LASF11
 2137 0088 02       		.byte	0x2
 2138 0089 E601     		.2byte	0x1e6
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 90


 2139 008b 48000000 		.4byte	0x48
 2140 008f 04       		.uleb128 0x4
 2141 0090 6D010000 		.4byte	.LASF12
 2142 0094 02       		.byte	0x2
 2143 0095 E801     		.2byte	0x1e8
 2144 0097 33000000 		.4byte	0x33
 2145 009b 04       		.uleb128 0x4
 2146 009c E7020000 		.4byte	.LASF13
 2147 00a0 02       		.byte	0x2
 2148 00a1 E901     		.2byte	0x1e9
 2149 00a3 41000000 		.4byte	0x41
 2150 00a7 02       		.uleb128 0x2
 2151 00a8 04       		.byte	0x4
 2152 00a9 04       		.byte	0x4
 2153 00aa E1020000 		.4byte	.LASF14
 2154 00ae 02       		.uleb128 0x2
 2155 00af 08       		.byte	0x8
 2156 00b0 04       		.byte	0x4
 2157 00b1 AD0B0000 		.4byte	.LASF15
 2158 00b5 02       		.uleb128 0x2
 2159 00b6 01       		.byte	0x1
 2160 00b7 08       		.byte	0x8
 2161 00b8 0D060000 		.4byte	.LASF16
 2162 00bc 02       		.uleb128 0x2
 2163 00bd 04       		.byte	0x4
 2164 00be 07       		.byte	0x7
 2165 00bf 2E090000 		.4byte	.LASF17
 2166 00c3 02       		.uleb128 0x2
 2167 00c4 08       		.byte	0x8
 2168 00c5 04       		.byte	0x4
 2169 00c6 2A080000 		.4byte	.LASF18
 2170 00ca 05       		.uleb128 0x5
 2171 00cb 5C       		.byte	0x5c
 2172 00cc 03       		.byte	0x3
 2173 00cd 2F       		.byte	0x2f
 2174 00ce E7010000 		.4byte	0x1e7
 2175 00d2 06       		.uleb128 0x6
 2176 00d3 50060000 		.4byte	.LASF19
 2177 00d7 03       		.byte	0x3
 2178 00d8 31       		.byte	0x31
 2179 00d9 E7010000 		.4byte	0x1e7
 2180 00dd 00       		.byte	0
 2181 00de 06       		.uleb128 0x6
 2182 00df 67080000 		.4byte	.LASF20
 2183 00e3 03       		.byte	0x3
 2184 00e4 32       		.byte	0x32
 2185 00e5 E7010000 		.4byte	0x1e7
 2186 00e9 04       		.byte	0x4
 2187 00ea 06       		.uleb128 0x6
 2188 00eb 2F0A0000 		.4byte	.LASF21
 2189 00ef 03       		.byte	0x3
 2190 00f0 33       		.byte	0x33
 2191 00f1 E7010000 		.4byte	0x1e7
 2192 00f5 08       		.byte	0x8
 2193 00f6 06       		.uleb128 0x6
 2194 00f7 98090000 		.4byte	.LASF22
 2195 00fb 03       		.byte	0x3
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 91


 2196 00fc 34       		.byte	0x34
 2197 00fd E7010000 		.4byte	0x1e7
 2198 0101 0C       		.byte	0xc
 2199 0102 06       		.uleb128 0x6
 2200 0103 010B0000 		.4byte	.LASF23
 2201 0107 03       		.byte	0x3
 2202 0108 35       		.byte	0x35
 2203 0109 E7010000 		.4byte	0x1e7
 2204 010d 10       		.byte	0x10
 2205 010e 06       		.uleb128 0x6
 2206 010f AF080000 		.4byte	.LASF24
 2207 0113 03       		.byte	0x3
 2208 0114 36       		.byte	0x36
 2209 0115 ED010000 		.4byte	0x1ed
 2210 0119 14       		.byte	0x14
 2211 011a 06       		.uleb128 0x6
 2212 011b F3020000 		.4byte	.LASF25
 2213 011f 03       		.byte	0x3
 2214 0120 37       		.byte	0x37
 2215 0121 F8010000 		.4byte	0x1f8
 2216 0125 18       		.byte	0x18
 2217 0126 06       		.uleb128 0x6
 2218 0127 F0040000 		.4byte	.LASF26
 2219 012b 03       		.byte	0x3
 2220 012c 38       		.byte	0x38
 2221 012d E7010000 		.4byte	0x1e7
 2222 0131 1C       		.byte	0x1c
 2223 0132 06       		.uleb128 0x6
 2224 0133 2C030000 		.4byte	.LASF27
 2225 0137 03       		.byte	0x3
 2226 0138 39       		.byte	0x39
 2227 0139 E7010000 		.4byte	0x1e7
 2228 013d 20       		.byte	0x20
 2229 013e 06       		.uleb128 0x6
 2230 013f BC010000 		.4byte	.LASF28
 2231 0143 03       		.byte	0x3
 2232 0144 3A       		.byte	0x3a
 2233 0145 E7010000 		.4byte	0x1e7
 2234 0149 24       		.byte	0x24
 2235 014a 06       		.uleb128 0x6
 2236 014b 63070000 		.4byte	.LASF29
 2237 014f 03       		.byte	0x3
 2238 0150 3B       		.byte	0x3b
 2239 0151 FE010000 		.4byte	0x1fe
 2240 0155 28       		.byte	0x28
 2241 0156 06       		.uleb128 0x6
 2242 0157 73010000 		.4byte	.LASF30
 2243 015b 03       		.byte	0x3
 2244 015c 3C       		.byte	0x3c
 2245 015d FE010000 		.4byte	0x1fe
 2246 0161 2C       		.byte	0x2c
 2247 0162 06       		.uleb128 0x6
 2248 0163 61090000 		.4byte	.LASF31
 2249 0167 03       		.byte	0x3
 2250 0168 3D       		.byte	0x3d
 2251 0169 FE010000 		.4byte	0x1fe
 2252 016d 30       		.byte	0x30
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 92


 2253 016e 06       		.uleb128 0x6
 2254 016f 04090000 		.4byte	.LASF32
 2255 0173 03       		.byte	0x3
 2256 0174 3E       		.byte	0x3e
 2257 0175 E7010000 		.4byte	0x1e7
 2258 0179 34       		.byte	0x34
 2259 017a 06       		.uleb128 0x6
 2260 017b 48000000 		.4byte	.LASF33
 2261 017f 03       		.byte	0x3
 2262 0180 3F       		.byte	0x3f
 2263 0181 E7010000 		.4byte	0x1e7
 2264 0185 38       		.byte	0x38
 2265 0186 06       		.uleb128 0x6
 2266 0187 35060000 		.4byte	.LASF34
 2267 018b 03       		.byte	0x3
 2268 018c 40       		.byte	0x40
 2269 018d ED010000 		.4byte	0x1ed
 2270 0191 3C       		.byte	0x3c
 2271 0192 06       		.uleb128 0x6
 2272 0193 31020000 		.4byte	.LASF35
 2273 0197 03       		.byte	0x3
 2274 0198 41       		.byte	0x41
 2275 0199 ED010000 		.4byte	0x1ed
 2276 019d 40       		.byte	0x40
 2277 019e 06       		.uleb128 0x6
 2278 019f 95000000 		.4byte	.LASF36
 2279 01a3 03       		.byte	0x3
 2280 01a4 42       		.byte	0x42
 2281 01a5 ED010000 		.4byte	0x1ed
 2282 01a9 44       		.byte	0x44
 2283 01aa 06       		.uleb128 0x6
 2284 01ab 13070000 		.4byte	.LASF37
 2285 01af 03       		.byte	0x3
 2286 01b0 43       		.byte	0x43
 2287 01b1 13020000 		.4byte	0x213
 2288 01b5 48       		.byte	0x48
 2289 01b6 06       		.uleb128 0x6
 2290 01b7 EB060000 		.4byte	.LASF38
 2291 01bb 03       		.byte	0x3
 2292 01bc 44       		.byte	0x44
 2293 01bd 24020000 		.4byte	0x224
 2294 01c1 4C       		.byte	0x4c
 2295 01c2 06       		.uleb128 0x6
 2296 01c3 06050000 		.4byte	.LASF39
 2297 01c7 03       		.byte	0x3
 2298 01c8 45       		.byte	0x45
 2299 01c9 13020000 		.4byte	0x213
 2300 01cd 50       		.byte	0x50
 2301 01ce 06       		.uleb128 0x6
 2302 01cf A5000000 		.4byte	.LASF40
 2303 01d3 03       		.byte	0x3
 2304 01d4 46       		.byte	0x46
 2305 01d5 3E020000 		.4byte	0x23e
 2306 01d9 54       		.byte	0x54
 2307 01da 06       		.uleb128 0x6
 2308 01db 480B0000 		.4byte	.LASF41
 2309 01df 03       		.byte	0x3
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 93


 2310 01e0 47       		.byte	0x47
 2311 01e1 59020000 		.4byte	0x259
 2312 01e5 58       		.byte	0x58
 2313 01e6 00       		.byte	0
 2314 01e7 07       		.uleb128 0x7
 2315 01e8 04       		.byte	0x4
 2316 01e9 6B000000 		.4byte	0x6b
 2317 01ed 07       		.uleb128 0x7
 2318 01ee 04       		.byte	0x4
 2319 01ef F3010000 		.4byte	0x1f3
 2320 01f3 08       		.uleb128 0x8
 2321 01f4 6B000000 		.4byte	0x6b
 2322 01f8 07       		.uleb128 0x7
 2323 01f9 04       		.byte	0x4
 2324 01fa 83000000 		.4byte	0x83
 2325 01fe 07       		.uleb128 0x7
 2326 01ff 04       		.byte	0x4
 2327 0200 77000000 		.4byte	0x77
 2328 0204 09       		.uleb128 0x9
 2329 0205 77000000 		.4byte	0x77
 2330 0209 13020000 		.4byte	0x213
 2331 020d 0A       		.uleb128 0xa
 2332 020e 83000000 		.4byte	0x83
 2333 0212 00       		.byte	0
 2334 0213 07       		.uleb128 0x7
 2335 0214 04       		.byte	0x4
 2336 0215 04020000 		.4byte	0x204
 2337 0219 0B       		.uleb128 0xb
 2338 021a 24020000 		.4byte	0x224
 2339 021e 0A       		.uleb128 0xa
 2340 021f 83000000 		.4byte	0x83
 2341 0223 00       		.byte	0
 2342 0224 07       		.uleb128 0x7
 2343 0225 04       		.byte	0x4
 2344 0226 19020000 		.4byte	0x219
 2345 022a 09       		.uleb128 0x9
 2346 022b 83000000 		.4byte	0x83
 2347 022f 3E020000 		.4byte	0x23e
 2348 0233 0A       		.uleb128 0xa
 2349 0234 ED010000 		.4byte	0x1ed
 2350 0238 0A       		.uleb128 0xa
 2351 0239 83000000 		.4byte	0x83
 2352 023d 00       		.byte	0
 2353 023e 07       		.uleb128 0x7
 2354 023f 04       		.byte	0x4
 2355 0240 2A020000 		.4byte	0x22a
 2356 0244 0B       		.uleb128 0xb
 2357 0245 59020000 		.4byte	0x259
 2358 0249 0A       		.uleb128 0xa
 2359 024a E7010000 		.4byte	0x1e7
 2360 024e 0A       		.uleb128 0xa
 2361 024f 83000000 		.4byte	0x83
 2362 0253 0A       		.uleb128 0xa
 2363 0254 83000000 		.4byte	0x83
 2364 0258 00       		.byte	0
 2365 0259 07       		.uleb128 0x7
 2366 025a 04       		.byte	0x4
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 94


 2367 025b 44020000 		.4byte	0x244
 2368 025f 0C       		.uleb128 0xc
 2369 0260 21010000 		.4byte	.LASF42
 2370 0264 03       		.byte	0x3
 2371 0265 48       		.byte	0x48
 2372 0266 CA000000 		.4byte	0xca
 2373 026a 05       		.uleb128 0x5
 2374 026b 0C       		.byte	0xc
 2375 026c 03       		.byte	0x3
 2376 026d 4A       		.byte	0x4a
 2377 026e BB020000 		.4byte	0x2bb
 2378 0272 06       		.uleb128 0x6
 2379 0273 B0050000 		.4byte	.LASF43
 2380 0277 03       		.byte	0x3
 2381 0278 4C       		.byte	0x4c
 2382 0279 6B000000 		.4byte	0x6b
 2383 027d 00       		.byte	0
 2384 027e 06       		.uleb128 0x6
 2385 027f 3E020000 		.4byte	.LASF44
 2386 0283 03       		.byte	0x3
 2387 0284 4D       		.byte	0x4d
 2388 0285 6B000000 		.4byte	0x6b
 2389 0289 01       		.byte	0x1
 2390 028a 06       		.uleb128 0x6
 2391 028b 55010000 		.4byte	.LASF45
 2392 028f 03       		.byte	0x3
 2393 0290 4E       		.byte	0x4e
 2394 0291 6B000000 		.4byte	0x6b
 2395 0295 02       		.byte	0x2
 2396 0296 06       		.uleb128 0x6
 2397 0297 E7050000 		.4byte	.LASF46
 2398 029b 03       		.byte	0x3
 2399 029c 4F       		.byte	0x4f
 2400 029d 77000000 		.4byte	0x77
 2401 02a1 04       		.byte	0x4
 2402 02a2 06       		.uleb128 0x6
 2403 02a3 41080000 		.4byte	.LASF47
 2404 02a7 03       		.byte	0x3
 2405 02a8 50       		.byte	0x50
 2406 02a9 77000000 		.4byte	0x77
 2407 02ad 06       		.byte	0x6
 2408 02ae 06       		.uleb128 0x6
 2409 02af 49090000 		.4byte	.LASF48
 2410 02b3 03       		.byte	0x3
 2411 02b4 51       		.byte	0x51
 2412 02b5 BB020000 		.4byte	0x2bb
 2413 02b9 08       		.byte	0x8
 2414 02ba 00       		.byte	0
 2415 02bb 07       		.uleb128 0x7
 2416 02bc 04       		.byte	0x4
 2417 02bd C1020000 		.4byte	0x2c1
 2418 02c1 08       		.uleb128 0x8
 2419 02c2 5F020000 		.4byte	0x25f
 2420 02c6 0C       		.uleb128 0xc
 2421 02c7 AA030000 		.4byte	.LASF49
 2422 02cb 03       		.byte	0x3
 2423 02cc 52       		.byte	0x52
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 95


 2424 02cd 6A020000 		.4byte	0x26a
 2425 02d1 0D       		.uleb128 0xd
 2426 02d2 3B070000 		.4byte	.LASF50
 2427 02d6 01       		.byte	0x1
 2428 02d7 8E       		.byte	0x8e
 2429 02d8 00000000 		.4byte	.LFB32
 2430 02dc 28000000 		.4byte	.LFE32-.LFB32
 2431 02e0 01       		.uleb128 0x1
 2432 02e1 9C       		.byte	0x9c
 2433 02e2 F6020000 		.4byte	0x2f6
 2434 02e6 0E       		.uleb128 0xe
 2435 02e7 E0050000 		.4byte	.LASF52
 2436 02eb 01       		.byte	0x1
 2437 02ec 8E       		.byte	0x8e
 2438 02ed 83000000 		.4byte	0x83
 2439 02f1 00000000 		.4byte	.LLST0
 2440 02f5 00       		.byte	0
 2441 02f6 0D       		.uleb128 0xd
 2442 02f7 DE010000 		.4byte	.LASF51
 2443 02fb 01       		.byte	0x1
 2444 02fc D9       		.byte	0xd9
 2445 02fd 00000000 		.4byte	.LFB33
 2446 0301 18000000 		.4byte	.LFE33-.LFB33
 2447 0305 01       		.uleb128 0x1
 2448 0306 9C       		.byte	0x9c
 2449 0307 48030000 		.4byte	0x348
 2450 030b 0E       		.uleb128 0xe
 2451 030c E0050000 		.4byte	.LASF52
 2452 0310 01       		.byte	0x1
 2453 0311 D9       		.byte	0xd9
 2454 0312 83000000 		.4byte	0x83
 2455 0316 21000000 		.4byte	.LLST1
 2456 031a 0F       		.uleb128 0xf
 2457 031b 08000000 		.4byte	.LVL3
 2458 031f D8100000 		.4byte	0x10d8
 2459 0323 2E030000 		.4byte	0x32e
 2460 0327 10       		.uleb128 0x10
 2461 0328 01       		.uleb128 0x1
 2462 0329 50       		.byte	0x50
 2463 032a 02       		.uleb128 0x2
 2464 032b 74       		.byte	0x74
 2465 032c 00       		.sleb128 0
 2466 032d 00       		.byte	0
 2467 032e 11       		.uleb128 0x11
 2468 032f 0C000000 		.4byte	.LVL4
 2469 0333 E3100000 		.4byte	0x10e3
 2470 0337 12       		.uleb128 0x12
 2471 0338 16000000 		.4byte	.LVL5
 2472 033c D1020000 		.4byte	0x2d1
 2473 0340 10       		.uleb128 0x10
 2474 0341 01       		.uleb128 0x1
 2475 0342 50       		.byte	0x50
 2476 0343 02       		.uleb128 0x2
 2477 0344 74       		.byte	0x74
 2478 0345 00       		.sleb128 0
 2479 0346 00       		.byte	0
 2480 0347 00       		.byte	0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 96


 2481 0348 0D       		.uleb128 0xd
 2482 0349 D9090000 		.4byte	.LASF53
 2483 034d 01       		.byte	0x1
 2484 034e FE       		.byte	0xfe
 2485 034f 00000000 		.4byte	.LFB34
 2486 0353 14000000 		.4byte	.LFE34-.LFB34
 2487 0357 01       		.uleb128 0x1
 2488 0358 9C       		.byte	0x9c
 2489 0359 7C030000 		.4byte	0x37c
 2490 035d 13       		.uleb128 0x13
 2491 035e 6900     		.ascii	"i\000"
 2492 0360 01       		.byte	0x1
 2493 0361 0001     		.2byte	0x100
 2494 0363 83000000 		.4byte	0x83
 2495 0367 4D000000 		.4byte	.LLST2
 2496 036b 12       		.uleb128 0x12
 2497 036c 0C000000 		.4byte	.LVL9
 2498 0370 F6020000 		.4byte	0x2f6
 2499 0374 10       		.uleb128 0x10
 2500 0375 01       		.uleb128 0x1
 2501 0376 50       		.byte	0x50
 2502 0377 02       		.uleb128 0x2
 2503 0378 74       		.byte	0x74
 2504 0379 00       		.sleb128 0
 2505 037a 00       		.byte	0
 2506 037b 00       		.byte	0
 2507 037c 14       		.uleb128 0x14
 2508 037d 80010000 		.4byte	.LASF54
 2509 0381 01       		.byte	0x1
 2510 0382 2101     		.2byte	0x121
 2511 0384 00000000 		.4byte	.LFB35
 2512 0388 30000000 		.4byte	.LFE35-.LFB35
 2513 038c 01       		.uleb128 0x1
 2514 038d 9C       		.byte	0x9c
 2515 038e E7030000 		.4byte	0x3e7
 2516 0392 13       		.uleb128 0x13
 2517 0393 6900     		.ascii	"i\000"
 2518 0395 01       		.byte	0x1
 2519 0396 2301     		.2byte	0x123
 2520 0398 83000000 		.4byte	0x83
 2521 039c 6C000000 		.4byte	.LLST3
 2522 03a0 15       		.uleb128 0x15
 2523 03a1 04010000 		.4byte	.LASF55
 2524 03a5 01       		.byte	0x1
 2525 03a6 2401     		.2byte	0x124
 2526 03a8 83000000 		.4byte	0x83
 2527 03ac 7F000000 		.4byte	.LLST4
 2528 03b0 11       		.uleb128 0x11
 2529 03b1 06000000 		.4byte	.LVL12
 2530 03b5 EE100000 		.4byte	0x10ee
 2531 03b9 11       		.uleb128 0x11
 2532 03ba 0A000000 		.4byte	.LVL13
 2533 03be E3100000 		.4byte	0x10e3
 2534 03c2 0F       		.uleb128 0xf
 2535 03c3 1A000000 		.4byte	.LVL15
 2536 03c7 F9100000 		.4byte	0x10f9
 2537 03cb D6030000 		.4byte	0x3d6
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 97


 2538 03cf 10       		.uleb128 0x10
 2539 03d0 01       		.uleb128 0x1
 2540 03d1 51       		.byte	0x51
 2541 03d2 02       		.uleb128 0x2
 2542 03d3 74       		.byte	0x74
 2543 03d4 00       		.sleb128 0
 2544 03d5 00       		.byte	0
 2545 03d6 12       		.uleb128 0x12
 2546 03d7 24000000 		.4byte	.LVL17
 2547 03db D1020000 		.4byte	0x2d1
 2548 03df 10       		.uleb128 0x10
 2549 03e0 01       		.uleb128 0x1
 2550 03e1 50       		.byte	0x50
 2551 03e2 02       		.uleb128 0x2
 2552 03e3 74       		.byte	0x74
 2553 03e4 00       		.sleb128 0
 2554 03e5 00       		.byte	0
 2555 03e6 00       		.byte	0
 2556 03e7 16       		.uleb128 0x16
 2557 03e8 F9090000 		.4byte	.LASF58
 2558 03ec 01       		.byte	0x1
 2559 03ed B602     		.2byte	0x2b6
 2560 03ef 77000000 		.4byte	0x77
 2561 03f3 00000000 		.4byte	.LFB40
 2562 03f7 0C000000 		.4byte	.LFE40-.LFB40
 2563 03fb 01       		.uleb128 0x1
 2564 03fc 9C       		.byte	0x9c
 2565 03fd 12040000 		.4byte	0x412
 2566 0401 17       		.uleb128 0x17
 2567 0402 E0050000 		.4byte	.LASF52
 2568 0406 01       		.byte	0x1
 2569 0407 B602     		.2byte	0x2b6
 2570 0409 83000000 		.4byte	0x83
 2571 040d 92000000 		.4byte	.LLST5
 2572 0411 00       		.byte	0
 2573 0412 14       		.uleb128 0x14
 2574 0413 18020000 		.4byte	.LASF56
 2575 0417 01       		.byte	0x1
 2576 0418 D102     		.2byte	0x2d1
 2577 041a 00000000 		.4byte	.LFB41
 2578 041e 0C000000 		.4byte	.LFE41-.LFB41
 2579 0422 01       		.uleb128 0x1
 2580 0423 9C       		.byte	0x9c
 2581 0424 47040000 		.4byte	0x447
 2582 0428 17       		.uleb128 0x17
 2583 0429 E0050000 		.4byte	.LASF52
 2584 042d 01       		.byte	0x1
 2585 042e D102     		.2byte	0x2d1
 2586 0430 83000000 		.4byte	0x83
 2587 0434 B3000000 		.4byte	.LLST6
 2588 0438 18       		.uleb128 0x18
 2589 0439 4B060000 		.4byte	.LASF57
 2590 043d 01       		.byte	0x1
 2591 043e D102     		.2byte	0x2d1
 2592 0440 77000000 		.4byte	0x77
 2593 0444 01       		.uleb128 0x1
 2594 0445 51       		.byte	0x51
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 98


 2595 0446 00       		.byte	0
 2596 0447 16       		.uleb128 0x16
 2597 0448 CA040000 		.4byte	.LASF59
 2598 044c 01       		.byte	0x1
 2599 044d EC02     		.2byte	0x2ec
 2600 044f 6B000000 		.4byte	0x6b
 2601 0453 00000000 		.4byte	.LFB42
 2602 0457 10000000 		.4byte	.LFE42-.LFB42
 2603 045b 01       		.uleb128 0x1
 2604 045c 9C       		.byte	0x9c
 2605 045d 72040000 		.4byte	0x472
 2606 0461 17       		.uleb128 0x17
 2607 0462 E0050000 		.4byte	.LASF52
 2608 0466 01       		.byte	0x1
 2609 0467 EC02     		.2byte	0x2ec
 2610 0469 83000000 		.4byte	0x83
 2611 046d D4000000 		.4byte	.LLST7
 2612 0471 00       		.byte	0
 2613 0472 14       		.uleb128 0x14
 2614 0473 4E020000 		.4byte	.LASF60
 2615 0477 01       		.byte	0x1
 2616 0478 0703     		.2byte	0x307
 2617 047a 00000000 		.4byte	.LFB43
 2618 047e 10000000 		.4byte	.LFE43-.LFB43
 2619 0482 01       		.uleb128 0x1
 2620 0483 9C       		.byte	0x9c
 2621 0484 A7040000 		.4byte	0x4a7
 2622 0488 17       		.uleb128 0x17
 2623 0489 E0050000 		.4byte	.LASF52
 2624 048d 01       		.byte	0x1
 2625 048e 0703     		.2byte	0x307
 2626 0490 83000000 		.4byte	0x83
 2627 0494 F5000000 		.4byte	.LLST8
 2628 0498 18       		.uleb128 0x18
 2629 0499 19040000 		.4byte	.LASF61
 2630 049d 01       		.byte	0x1
 2631 049e 0703     		.2byte	0x307
 2632 04a0 6B000000 		.4byte	0x6b
 2633 04a4 01       		.uleb128 0x1
 2634 04a5 51       		.byte	0x51
 2635 04a6 00       		.byte	0
 2636 04a7 16       		.uleb128 0x16
 2637 04a8 04080000 		.4byte	.LASF62
 2638 04ac 01       		.byte	0x1
 2639 04ad 2203     		.2byte	0x322
 2640 04af 6B000000 		.4byte	0x6b
 2641 04b3 00000000 		.4byte	.LFB44
 2642 04b7 0C000000 		.4byte	.LFE44-.LFB44
 2643 04bb 01       		.uleb128 0x1
 2644 04bc 9C       		.byte	0x9c
 2645 04bd D2040000 		.4byte	0x4d2
 2646 04c1 17       		.uleb128 0x17
 2647 04c2 72030000 		.4byte	.LASF63
 2648 04c6 01       		.byte	0x1
 2649 04c7 2203     		.2byte	0x322
 2650 04c9 83000000 		.4byte	0x83
 2651 04cd 16010000 		.4byte	.LLST9
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 99


 2652 04d1 00       		.byte	0
 2653 04d2 16       		.uleb128 0x16
 2654 04d3 11030000 		.4byte	.LASF64
 2655 04d7 01       		.byte	0x1
 2656 04d8 3D03     		.2byte	0x33d
 2657 04da 6B000000 		.4byte	0x6b
 2658 04de 00000000 		.4byte	.LFB45
 2659 04e2 0C000000 		.4byte	.LFE45-.LFB45
 2660 04e6 01       		.uleb128 0x1
 2661 04e7 9C       		.byte	0x9c
 2662 04e8 FD040000 		.4byte	0x4fd
 2663 04ec 17       		.uleb128 0x17
 2664 04ed 72030000 		.4byte	.LASF63
 2665 04f1 01       		.byte	0x1
 2666 04f2 3D03     		.2byte	0x33d
 2667 04f4 83000000 		.4byte	0x83
 2668 04f8 37010000 		.4byte	.LLST10
 2669 04fc 00       		.byte	0
 2670 04fd 16       		.uleb128 0x16
 2671 04fe 1F040000 		.4byte	.LASF65
 2672 0502 01       		.byte	0x1
 2673 0503 5903     		.2byte	0x359
 2674 0505 6B000000 		.4byte	0x6b
 2675 0509 00000000 		.4byte	.LFB46
 2676 050d 0C000000 		.4byte	.LFE46-.LFB46
 2677 0511 01       		.uleb128 0x1
 2678 0512 9C       		.byte	0x9c
 2679 0513 28050000 		.4byte	0x528
 2680 0517 17       		.uleb128 0x17
 2681 0518 72030000 		.4byte	.LASF63
 2682 051c 01       		.byte	0x1
 2683 051d 5903     		.2byte	0x359
 2684 051f 83000000 		.4byte	0x83
 2685 0523 58010000 		.4byte	.LLST11
 2686 0527 00       		.byte	0
 2687 0528 16       		.uleb128 0x16
 2688 0529 12060000 		.4byte	.LASF66
 2689 052d 01       		.byte	0x1
 2690 052e 7503     		.2byte	0x375
 2691 0530 6B000000 		.4byte	0x6b
 2692 0534 00000000 		.4byte	.LFB47
 2693 0538 0C000000 		.4byte	.LFE47-.LFB47
 2694 053c 01       		.uleb128 0x1
 2695 053d 9C       		.byte	0x9c
 2696 053e 53050000 		.4byte	0x553
 2697 0542 17       		.uleb128 0x17
 2698 0543 72030000 		.4byte	.LASF63
 2699 0547 01       		.byte	0x1
 2700 0548 7503     		.2byte	0x375
 2701 054a 83000000 		.4byte	0x83
 2702 054e 79010000 		.4byte	.LLST12
 2703 0552 00       		.byte	0
 2704 0553 14       		.uleb128 0x14
 2705 0554 DE030000 		.4byte	.LASF67
 2706 0558 01       		.byte	0x1
 2707 0559 9603     		.2byte	0x396
 2708 055b 00000000 		.4byte	.LFB48
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 100


 2709 055f 0C000000 		.4byte	.LFE48-.LFB48
 2710 0563 01       		.uleb128 0x1
 2711 0564 9C       		.byte	0x9c
 2712 0565 86050000 		.4byte	0x586
 2713 0569 18       		.uleb128 0x18
 2714 056a 72030000 		.4byte	.LASF63
 2715 056e 01       		.byte	0x1
 2716 056f 9603     		.2byte	0x396
 2717 0571 83000000 		.4byte	0x83
 2718 0575 01       		.uleb128 0x1
 2719 0576 50       		.byte	0x50
 2720 0577 18       		.uleb128 0x18
 2721 0578 19040000 		.4byte	.LASF61
 2722 057c 01       		.byte	0x1
 2723 057d 9603     		.2byte	0x396
 2724 057f 6B000000 		.4byte	0x6b
 2725 0583 01       		.uleb128 0x1
 2726 0584 51       		.byte	0x51
 2727 0585 00       		.byte	0
 2728 0586 14       		.uleb128 0x14
 2729 0587 94020000 		.4byte	.LASF68
 2730 058b 01       		.byte	0x1
 2731 058c B203     		.2byte	0x3b2
 2732 058e 00000000 		.4byte	.LFB49
 2733 0592 0C000000 		.4byte	.LFE49-.LFB49
 2734 0596 01       		.uleb128 0x1
 2735 0597 9C       		.byte	0x9c
 2736 0598 B9050000 		.4byte	0x5b9
 2737 059c 18       		.uleb128 0x18
 2738 059d 72030000 		.4byte	.LASF63
 2739 05a1 01       		.byte	0x1
 2740 05a2 B203     		.2byte	0x3b2
 2741 05a4 83000000 		.4byte	0x83
 2742 05a8 01       		.uleb128 0x1
 2743 05a9 50       		.byte	0x50
 2744 05aa 18       		.uleb128 0x18
 2745 05ab 19040000 		.4byte	.LASF61
 2746 05af 01       		.byte	0x1
 2747 05b0 B203     		.2byte	0x3b2
 2748 05b2 6B000000 		.4byte	0x6b
 2749 05b6 01       		.uleb128 0x1
 2750 05b7 51       		.byte	0x51
 2751 05b8 00       		.byte	0
 2752 05b9 14       		.uleb128 0x14
 2753 05ba E7070000 		.4byte	.LASF69
 2754 05be 01       		.byte	0x1
 2755 05bf CE03     		.2byte	0x3ce
 2756 05c1 00000000 		.4byte	.LFB50
 2757 05c5 0C000000 		.4byte	.LFE50-.LFB50
 2758 05c9 01       		.uleb128 0x1
 2759 05ca 9C       		.byte	0x9c
 2760 05cb EC050000 		.4byte	0x5ec
 2761 05cf 18       		.uleb128 0x18
 2762 05d0 72030000 		.4byte	.LASF63
 2763 05d4 01       		.byte	0x1
 2764 05d5 CE03     		.2byte	0x3ce
 2765 05d7 83000000 		.4byte	0x83
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 101


 2766 05db 01       		.uleb128 0x1
 2767 05dc 50       		.byte	0x50
 2768 05dd 18       		.uleb128 0x18
 2769 05de 19040000 		.4byte	.LASF61
 2770 05e2 01       		.byte	0x1
 2771 05e3 CE03     		.2byte	0x3ce
 2772 05e5 6B000000 		.4byte	0x6b
 2773 05e9 01       		.uleb128 0x1
 2774 05ea 51       		.byte	0x51
 2775 05eb 00       		.byte	0
 2776 05ec 14       		.uleb128 0x14
 2777 05ed A0070000 		.4byte	.LASF70
 2778 05f1 01       		.byte	0x1
 2779 05f2 EB03     		.2byte	0x3eb
 2780 05f4 00000000 		.4byte	.LFB51
 2781 05f8 0C000000 		.4byte	.LFE51-.LFB51
 2782 05fc 01       		.uleb128 0x1
 2783 05fd 9C       		.byte	0x9c
 2784 05fe 1F060000 		.4byte	0x61f
 2785 0602 18       		.uleb128 0x18
 2786 0603 72030000 		.4byte	.LASF63
 2787 0607 01       		.byte	0x1
 2788 0608 EB03     		.2byte	0x3eb
 2789 060a 83000000 		.4byte	0x83
 2790 060e 01       		.uleb128 0x1
 2791 060f 50       		.byte	0x50
 2792 0610 18       		.uleb128 0x18
 2793 0611 19040000 		.4byte	.LASF61
 2794 0615 01       		.byte	0x1
 2795 0616 EB03     		.2byte	0x3eb
 2796 0618 6B000000 		.4byte	0x6b
 2797 061c 01       		.uleb128 0x1
 2798 061d 51       		.byte	0x51
 2799 061e 00       		.byte	0
 2800 061f 14       		.uleb128 0x14
 2801 0620 73090000 		.4byte	.LASF71
 2802 0624 01       		.byte	0x1
 2803 0625 0704     		.2byte	0x407
 2804 0627 00000000 		.4byte	.LFB52
 2805 062b 0C000000 		.4byte	.LFE52-.LFB52
 2806 062f 01       		.uleb128 0x1
 2807 0630 9C       		.byte	0x9c
 2808 0631 52060000 		.4byte	0x652
 2809 0635 18       		.uleb128 0x18
 2810 0636 72030000 		.4byte	.LASF63
 2811 063a 01       		.byte	0x1
 2812 063b 0704     		.2byte	0x407
 2813 063d 83000000 		.4byte	0x83
 2814 0641 01       		.uleb128 0x1
 2815 0642 50       		.byte	0x50
 2816 0643 18       		.uleb128 0x18
 2817 0644 19040000 		.4byte	.LASF61
 2818 0648 01       		.byte	0x1
 2819 0649 0704     		.2byte	0x407
 2820 064b 6B000000 		.4byte	0x6b
 2821 064f 01       		.uleb128 0x1
 2822 0650 51       		.byte	0x51
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 102


 2823 0651 00       		.byte	0
 2824 0652 14       		.uleb128 0x14
 2825 0653 120A0000 		.4byte	.LASF72
 2826 0657 01       		.byte	0x1
 2827 0658 2304     		.2byte	0x423
 2828 065a 00000000 		.4byte	.LFB53
 2829 065e 0C000000 		.4byte	.LFE53-.LFB53
 2830 0662 01       		.uleb128 0x1
 2831 0663 9C       		.byte	0x9c
 2832 0664 87060000 		.4byte	0x687
 2833 0668 17       		.uleb128 0x17
 2834 0669 E0050000 		.4byte	.LASF52
 2835 066d 01       		.byte	0x1
 2836 066e 2304     		.2byte	0x423
 2837 0670 83000000 		.4byte	0x83
 2838 0674 9A010000 		.4byte	.LLST13
 2839 0678 18       		.uleb128 0x18
 2840 0679 19040000 		.4byte	.LASF61
 2841 067d 01       		.byte	0x1
 2842 067e 2304     		.2byte	0x423
 2843 0680 6B000000 		.4byte	0x6b
 2844 0684 01       		.uleb128 0x1
 2845 0685 51       		.byte	0x51
 2846 0686 00       		.byte	0
 2847 0687 16       		.uleb128 0x16
 2848 0688 F6060000 		.4byte	.LASF73
 2849 068c 01       		.byte	0x1
 2850 068d 5104     		.2byte	0x451
 2851 068f 83000000 		.4byte	0x83
 2852 0693 00000000 		.4byte	.LFB54
 2853 0697 A4000000 		.4byte	.LFE54-.LFB54
 2854 069b 01       		.uleb128 0x1
 2855 069c 9C       		.byte	0x9c
 2856 069d 88070000 		.4byte	0x788
 2857 06a1 17       		.uleb128 0x17
 2858 06a2 E0050000 		.4byte	.LASF52
 2859 06a6 01       		.byte	0x1
 2860 06a7 5104     		.2byte	0x451
 2861 06a9 83000000 		.4byte	0x83
 2862 06ad BB010000 		.4byte	.LLST14
 2863 06b1 15       		.uleb128 0x15
 2864 06b2 72030000 		.4byte	.LASF63
 2865 06b6 01       		.byte	0x1
 2866 06b7 5304     		.2byte	0x453
 2867 06b9 6B000000 		.4byte	0x6b
 2868 06bd E7010000 		.4byte	.LLST15
 2869 06c1 15       		.uleb128 0x15
 2870 06c2 E2060000 		.4byte	.LASF74
 2871 06c6 01       		.byte	0x1
 2872 06c7 5404     		.2byte	0x454
 2873 06c9 6B000000 		.4byte	0x6b
 2874 06cd FA010000 		.4byte	.LLST16
 2875 06d1 19       		.uleb128 0x19
 2876 06d2 CB090000 		.4byte	.LASF75
 2877 06d6 01       		.byte	0x1
 2878 06d7 5504     		.2byte	0x455
 2879 06d9 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 103


 2880 06dd 00       		.byte	0
 2881 06de 15       		.uleb128 0x15
 2882 06df 88090000 		.4byte	.LASF76
 2883 06e3 01       		.byte	0x1
 2884 06e4 5704     		.2byte	0x457
 2885 06e6 6B000000 		.4byte	0x6b
 2886 06ea 0D020000 		.4byte	.LLST17
 2887 06ee 15       		.uleb128 0x15
 2888 06ef 17050000 		.4byte	.LASF77
 2889 06f3 01       		.byte	0x1
 2890 06f4 5804     		.2byte	0x458
 2891 06f6 6B000000 		.4byte	0x6b
 2892 06fa 20020000 		.4byte	.LLST18
 2893 06fe 1A       		.uleb128 0x1a
 2894 06ff 2F000000 		.4byte	.LASF78
 2895 0703 01       		.byte	0x1
 2896 0704 5904     		.2byte	0x459
 2897 0706 88070000 		.4byte	0x788
 2898 070a 05       		.uleb128 0x5
 2899 070b 03       		.byte	0x3
 2900 070c 2C000000 		.4byte	CapSense_debounceCounter.5489
 2901 0710 0F       		.uleb128 0xf
 2902 0711 24000000 		.4byte	.LVL50
 2903 0715 F9100000 		.4byte	0x10f9
 2904 0719 2D070000 		.4byte	0x72d
 2905 071d 10       		.uleb128 0x10
 2906 071e 01       		.uleb128 0x1
 2907 071f 50       		.byte	0x50
 2908 0720 05       		.uleb128 0x5
 2909 0721 03       		.byte	0x3
 2910 0722 30000000 		.4byte	.LANCHOR0+48
 2911 0726 10       		.uleb128 0x10
 2912 0727 01       		.uleb128 0x1
 2913 0728 51       		.byte	0x51
 2914 0729 02       		.uleb128 0x2
 2915 072a 74       		.byte	0x74
 2916 072b 00       		.sleb128 0
 2917 072c 00       		.byte	0
 2918 072d 0F       		.uleb128 0xf
 2919 072e 44000000 		.4byte	.LVL52
 2920 0732 04110000 		.4byte	0x1104
 2921 0736 4C070000 		.4byte	0x74c
 2922 073a 10       		.uleb128 0x10
 2923 073b 01       		.uleb128 0x1
 2924 073c 50       		.byte	0x50
 2925 073d 02       		.uleb128 0x2
 2926 073e 75       		.byte	0x75
 2927 073f 30       		.sleb128 48
 2928 0740 10       		.uleb128 0x10
 2929 0741 01       		.uleb128 0x1
 2930 0742 51       		.byte	0x51
 2931 0743 02       		.uleb128 0x2
 2932 0744 74       		.byte	0x74
 2933 0745 00       		.sleb128 0
 2934 0746 10       		.uleb128 0x10
 2935 0747 01       		.uleb128 0x1
 2936 0748 52       		.byte	0x52
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 104


 2937 0749 01       		.uleb128 0x1
 2938 074a 30       		.byte	0x30
 2939 074b 00       		.byte	0
 2940 074c 0F       		.uleb128 0xf
 2941 074d 74000000 		.4byte	.LVL55
 2942 0751 04110000 		.4byte	0x1104
 2943 0755 6E070000 		.4byte	0x76e
 2944 0759 10       		.uleb128 0x10
 2945 075a 01       		.uleb128 0x1
 2946 075b 50       		.byte	0x50
 2947 075c 05       		.uleb128 0x5
 2948 075d 03       		.byte	0x3
 2949 075e 30000000 		.4byte	.LANCHOR0+48
 2950 0762 10       		.uleb128 0x10
 2951 0763 01       		.uleb128 0x1
 2952 0764 51       		.byte	0x51
 2953 0765 02       		.uleb128 0x2
 2954 0766 74       		.byte	0x74
 2955 0767 00       		.sleb128 0
 2956 0768 10       		.uleb128 0x10
 2957 0769 01       		.uleb128 0x1
 2958 076a 52       		.byte	0x52
 2959 076b 01       		.uleb128 0x1
 2960 076c 31       		.byte	0x31
 2961 076d 00       		.byte	0
 2962 076e 12       		.uleb128 0x12
 2963 076f 86000000 		.4byte	.LVL56
 2964 0773 F9100000 		.4byte	0x10f9
 2965 0777 10       		.uleb128 0x10
 2966 0778 01       		.uleb128 0x1
 2967 0779 50       		.byte	0x50
 2968 077a 05       		.uleb128 0x5
 2969 077b 03       		.byte	0x3
 2970 077c 30000000 		.4byte	.LANCHOR0+48
 2971 0780 10       		.uleb128 0x10
 2972 0781 01       		.uleb128 0x1
 2973 0782 51       		.byte	0x51
 2974 0783 02       		.uleb128 0x2
 2975 0784 74       		.byte	0x74
 2976 0785 00       		.sleb128 0
 2977 0786 00       		.byte	0
 2978 0787 00       		.byte	0
 2979 0788 1B       		.uleb128 0x1b
 2980 0789 6B000000 		.4byte	0x6b
 2981 078d 98070000 		.4byte	0x798
 2982 0791 1C       		.uleb128 0x1c
 2983 0792 BC000000 		.4byte	0xbc
 2984 0796 00       		.byte	0
 2985 0797 00       		.byte	0
 2986 0798 16       		.uleb128 0x16
 2987 0799 8A0B0000 		.4byte	.LASF79
 2988 079d 01       		.byte	0x1
 2989 079e A804     		.2byte	0x4a8
 2990 07a0 83000000 		.4byte	0x83
 2991 07a4 00000000 		.4byte	.LFB55
 2992 07a8 1C000000 		.4byte	.LFE55-.LFB55
 2993 07ac 01       		.uleb128 0x1
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 105


 2994 07ad 9C       		.byte	0x9c
 2995 07ae 00080000 		.4byte	0x800
 2996 07b2 17       		.uleb128 0x17
 2997 07b3 72030000 		.4byte	.LASF63
 2998 07b7 01       		.byte	0x1
 2999 07b8 A804     		.2byte	0x4a8
 3000 07ba 83000000 		.4byte	0x83
 3001 07be 3E020000 		.4byte	.LLST19
 3002 07c2 15       		.uleb128 0x15
 3003 07c3 6A060000 		.4byte	.LASF80
 3004 07c7 01       		.byte	0x1
 3005 07c8 AA04     		.2byte	0x4aa
 3006 07ca 83000000 		.4byte	0x83
 3007 07ce 5F020000 		.4byte	.LLST20
 3008 07d2 19       		.uleb128 0x19
 3009 07d3 14010000 		.4byte	.LASF81
 3010 07d7 01       		.byte	0x1
 3011 07d8 AB04     		.2byte	0x4ab
 3012 07da 83000000 		.4byte	0x83
 3013 07de 0A       		.byte	0xa
 3014 07df 15       		.uleb128 0x15
 3015 07e0 A50A0000 		.4byte	.LASF82
 3016 07e4 01       		.byte	0x1
 3017 07e5 AC04     		.2byte	0x4ac
 3018 07e7 83000000 		.4byte	0x83
 3019 07eb 7E020000 		.4byte	.LLST21
 3020 07ef 12       		.uleb128 0x12
 3021 07f0 0C000000 		.4byte	.LVL63
 3022 07f4 87060000 		.4byte	0x687
 3023 07f8 10       		.uleb128 0x10
 3024 07f9 01       		.uleb128 0x1
 3025 07fa 50       		.byte	0x50
 3026 07fb 02       		.uleb128 0x2
 3027 07fc 74       		.byte	0x74
 3028 07fd 00       		.sleb128 0
 3029 07fe 00       		.byte	0
 3030 07ff 00       		.byte	0
 3031 0800 16       		.uleb128 0x16
 3032 0801 57050000 		.4byte	.LASF83
 3033 0805 01       		.byte	0x1
 3034 0806 D604     		.2byte	0x4d6
 3035 0808 83000000 		.4byte	0x83
 3036 080c 00000000 		.4byte	.LFB56
 3037 0810 1E000000 		.4byte	.LFE56-.LFB56
 3038 0814 01       		.uleb128 0x1
 3039 0815 9C       		.byte	0x9c
 3040 0816 49080000 		.4byte	0x849
 3041 081a 13       		.uleb128 0x13
 3042 081b 6900     		.ascii	"i\000"
 3043 081d 01       		.byte	0x1
 3044 081e D904     		.2byte	0x4d9
 3045 0820 83000000 		.4byte	0x83
 3046 0824 A8020000 		.4byte	.LLST22
 3047 0828 15       		.uleb128 0x15
 3048 0829 A50A0000 		.4byte	.LASF82
 3049 082d 01       		.byte	0x1
 3050 082e DA04     		.2byte	0x4da
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 106


 3051 0830 83000000 		.4byte	0x83
 3052 0834 C7020000 		.4byte	.LLST23
 3053 0838 12       		.uleb128 0x12
 3054 0839 0E000000 		.4byte	.LVL70
 3055 083d 98070000 		.4byte	0x798
 3056 0841 10       		.uleb128 0x10
 3057 0842 01       		.uleb128 0x1
 3058 0843 50       		.byte	0x50
 3059 0844 02       		.uleb128 0x2
 3060 0845 74       		.byte	0x74
 3061 0846 00       		.sleb128 0
 3062 0847 00       		.byte	0
 3063 0848 00       		.byte	0
 3064 0849 14       		.uleb128 0x14
 3065 084a F7050000 		.4byte	.LASF84
 3066 084e 01       		.byte	0x1
 3067 084f 0505     		.2byte	0x505
 3068 0851 00000000 		.4byte	.LFB57
 3069 0855 1C000000 		.4byte	.LFE57-.LFB57
 3070 0859 01       		.uleb128 0x1
 3071 085a 9C       		.byte	0x9c
 3072 085b A2080000 		.4byte	0x8a2
 3073 085f 17       		.uleb128 0x17
 3074 0860 72030000 		.4byte	.LASF63
 3075 0864 01       		.byte	0x1
 3076 0865 0505     		.2byte	0x505
 3077 0867 83000000 		.4byte	0x83
 3078 086b F1020000 		.4byte	.LLST24
 3079 086f 15       		.uleb128 0x15
 3080 0870 6A060000 		.4byte	.LASF80
 3081 0874 01       		.byte	0x1
 3082 0875 0805     		.2byte	0x508
 3083 0877 6B000000 		.4byte	0x6b
 3084 087b 12030000 		.4byte	.LLST25
 3085 087f 19       		.uleb128 0x19
 3086 0880 14010000 		.4byte	.LASF81
 3087 0884 01       		.byte	0x1
 3088 0885 0905     		.2byte	0x509
 3089 0887 6B000000 		.4byte	0x6b
 3090 088b 0A       		.byte	0xa
 3091 088c 12       		.uleb128 0x12
 3092 088d 0E000000 		.4byte	.LVL78
 3093 0891 04110000 		.4byte	0x1104
 3094 0895 10       		.uleb128 0x10
 3095 0896 01       		.uleb128 0x1
 3096 0897 51       		.byte	0x51
 3097 0898 02       		.uleb128 0x2
 3098 0899 74       		.byte	0x74
 3099 089a 00       		.sleb128 0
 3100 089b 10       		.uleb128 0x10
 3101 089c 01       		.uleb128 0x1
 3102 089d 52       		.byte	0x52
 3103 089e 01       		.uleb128 0x1
 3104 089f 31       		.byte	0x31
 3105 08a0 00       		.byte	0
 3106 08a1 00       		.byte	0
 3107 08a2 14       		.uleb128 0x14
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 107


 3108 08a3 B4000000 		.4byte	.LASF85
 3109 08a7 01       		.byte	0x1
 3110 08a8 3005     		.2byte	0x530
 3111 08aa 00000000 		.4byte	.LFB58
 3112 08ae 1C000000 		.4byte	.LFE58-.LFB58
 3113 08b2 01       		.uleb128 0x1
 3114 08b3 9C       		.byte	0x9c
 3115 08b4 FB080000 		.4byte	0x8fb
 3116 08b8 17       		.uleb128 0x17
 3117 08b9 72030000 		.4byte	.LASF63
 3118 08bd 01       		.byte	0x1
 3119 08be 3005     		.2byte	0x530
 3120 08c0 83000000 		.4byte	0x83
 3121 08c4 3C030000 		.4byte	.LLST26
 3122 08c8 15       		.uleb128 0x15
 3123 08c9 6A060000 		.4byte	.LASF80
 3124 08cd 01       		.byte	0x1
 3125 08ce 3205     		.2byte	0x532
 3126 08d0 6B000000 		.4byte	0x6b
 3127 08d4 5D030000 		.4byte	.LLST27
 3128 08d8 19       		.uleb128 0x19
 3129 08d9 14010000 		.4byte	.LASF81
 3130 08dd 01       		.byte	0x1
 3131 08de 3305     		.2byte	0x533
 3132 08e0 6B000000 		.4byte	0x6b
 3133 08e4 0A       		.byte	0xa
 3134 08e5 12       		.uleb128 0x12
 3135 08e6 0E000000 		.4byte	.LVL85
 3136 08ea 04110000 		.4byte	0x1104
 3137 08ee 10       		.uleb128 0x10
 3138 08ef 01       		.uleb128 0x1
 3139 08f0 51       		.byte	0x51
 3140 08f1 02       		.uleb128 0x2
 3141 08f2 74       		.byte	0x74
 3142 08f3 00       		.sleb128 0
 3143 08f4 10       		.uleb128 0x10
 3144 08f5 01       		.uleb128 0x1
 3145 08f6 52       		.byte	0x52
 3146 08f7 01       		.uleb128 0x1
 3147 08f8 30       		.byte	0x30
 3148 08f9 00       		.byte	0
 3149 08fa 00       		.byte	0
 3150 08fb 16       		.uleb128 0x16
 3151 08fc 9A080000 		.4byte	.LASF86
 3152 0900 01       		.byte	0x1
 3153 0901 6205     		.2byte	0x562
 3154 0903 6B000000 		.4byte	0x6b
 3155 0907 00000000 		.4byte	.LFB59
 3156 090b 2C000000 		.4byte	.LFE59-.LFB59
 3157 090f 01       		.uleb128 0x1
 3158 0910 9C       		.byte	0x9c
 3159 0911 80090000 		.4byte	0x980
 3160 0915 17       		.uleb128 0x17
 3161 0916 E9040000 		.4byte	.LASF87
 3162 091a 01       		.byte	0x1
 3163 091b 6205     		.2byte	0x562
 3164 091d 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 108


 3165 0921 87030000 		.4byte	.LLST28
 3166 0925 18       		.uleb128 0x18
 3167 0926 ED020000 		.4byte	.LASF88
 3168 092a 01       		.byte	0x1
 3169 092b 6205     		.2byte	0x562
 3170 092d 6B000000 		.4byte	0x6b
 3171 0931 01       		.uleb128 0x1
 3172 0932 51       		.byte	0x51
 3173 0933 18       		.uleb128 0x18
 3174 0934 88090000 		.4byte	.LASF76
 3175 0938 01       		.byte	0x1
 3176 0939 6205     		.2byte	0x562
 3177 093b 6B000000 		.4byte	0x6b
 3178 093f 01       		.uleb128 0x1
 3179 0940 52       		.byte	0x52
 3180 0941 13       		.uleb128 0x13
 3181 0942 6900     		.ascii	"i\000"
 3182 0944 01       		.byte	0x1
 3183 0945 6505     		.2byte	0x565
 3184 0947 6B000000 		.4byte	0x6b
 3185 094b A8030000 		.4byte	.LLST29
 3186 094f 15       		.uleb128 0x15
 3187 0950 26090000 		.4byte	.LASF89
 3188 0954 01       		.byte	0x1
 3189 0955 6F05     		.2byte	0x56f
 3190 0957 6B000000 		.4byte	0x6b
 3191 095b D2030000 		.4byte	.LLST30
 3192 095f 15       		.uleb128 0x15
 3193 0960 95080000 		.4byte	.LASF90
 3194 0964 01       		.byte	0x1
 3195 0965 7105     		.2byte	0x571
 3196 0967 6B000000 		.4byte	0x6b
 3197 096b F2030000 		.4byte	.LLST31
 3198 096f 15       		.uleb128 0x15
 3199 0970 D9070000 		.4byte	.LASF91
 3200 0974 01       		.byte	0x1
 3201 0975 7205     		.2byte	0x572
 3202 0977 E7010000 		.4byte	0x1e7
 3203 097b 1C040000 		.4byte	.LLST32
 3204 097f 00       		.byte	0
 3205 0980 1D       		.uleb128 0x1d
 3206 0981 4D070000 		.4byte	.LASF92
 3207 0985 01       		.byte	0x1
 3208 0986 0106     		.2byte	0x601
 3209 0988 6B000000 		.4byte	0x6b
 3210 098c 00000000 		.4byte	.LFB60
 3211 0990 E4000000 		.4byte	.LFE60-.LFB60
 3212 0994 01       		.uleb128 0x1
 3213 0995 9C       		.byte	0x9c
 3214 0996 5B0A0000 		.4byte	0xa5b
 3215 099a 17       		.uleb128 0x17
 3216 099b 26090000 		.4byte	.LASF89
 3217 099f 01       		.byte	0x1
 3218 09a0 0106     		.2byte	0x601
 3219 09a2 6B000000 		.4byte	0x6b
 3220 09a6 2F040000 		.4byte	.LLST33
 3221 09aa 17       		.uleb128 0x17
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 109


 3222 09ab E9040000 		.4byte	.LASF87
 3223 09af 01       		.byte	0x1
 3224 09b0 0106     		.2byte	0x601
 3225 09b2 6B000000 		.4byte	0x6b
 3226 09b6 50040000 		.4byte	.LLST34
 3227 09ba 17       		.uleb128 0x17
 3228 09bb ED020000 		.4byte	.LASF88
 3229 09bf 01       		.byte	0x1
 3230 09c0 0206     		.2byte	0x602
 3231 09c2 6B000000 		.4byte	0x6b
 3232 09c6 71040000 		.4byte	.LLST35
 3233 09ca 17       		.uleb128 0x17
 3234 09cb 5F060000 		.4byte	.LASF93
 3235 09cf 01       		.byte	0x1
 3236 09d0 0206     		.2byte	0x602
 3237 09d2 77000000 		.4byte	0x77
 3238 09d6 92040000 		.4byte	.LLST36
 3239 09da 17       		.uleb128 0x17
 3240 09db 52090000 		.4byte	.LASF94
 3241 09df 01       		.byte	0x1
 3242 09e0 0206     		.2byte	0x602
 3243 09e2 6B000000 		.4byte	0x6b
 3244 09e6 B3040000 		.4byte	.LLST37
 3245 09ea 15       		.uleb128 0x15
 3246 09eb 00020000 		.4byte	.LASF95
 3247 09ef 01       		.byte	0x1
 3248 09f0 0606     		.2byte	0x606
 3249 09f2 6B000000 		.4byte	0x6b
 3250 09f6 DF040000 		.4byte	.LLST38
 3251 09fa 15       		.uleb128 0x15
 3252 09fb 65010000 		.4byte	.LASF96
 3253 09ff 01       		.byte	0x1
 3254 0a00 0706     		.2byte	0x607
 3255 0a02 6B000000 		.4byte	0x6b
 3256 0a06 20050000 		.4byte	.LLST39
 3257 0a0a 1A       		.uleb128 0x1a
 3258 0a0b 8D060000 		.4byte	.LASF97
 3259 0a0f 01       		.byte	0x1
 3260 0a10 0C06     		.2byte	0x60c
 3261 0a12 5B0A0000 		.4byte	0xa5b
 3262 0a16 05       		.uleb128 0x5
 3263 0a17 03       		.byte	0x3
 3264 0a18 34000000 		.4byte	CapSense_centroid.5541
 3265 0a1c 1A       		.uleb128 0x1a
 3266 0a1d CC0B0000 		.4byte	.LASF98
 3267 0a21 01       		.byte	0x1
 3268 0a22 1306     		.2byte	0x613
 3269 0a24 6B000000 		.4byte	0x6b
 3270 0a28 01       		.uleb128 0x1
 3271 0a29 50       		.byte	0x50
 3272 0a2a 15       		.uleb128 0x15
 3273 0a2b 20080000 		.4byte	.LASF99
 3274 0a2f 01       		.byte	0x1
 3275 0a30 1406     		.2byte	0x614
 3276 0a32 83000000 		.4byte	0x83
 3277 0a36 33050000 		.4byte	.LLST40
 3278 0a3a 15       		.uleb128 0x15
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 110


 3279 0a3b F8080000 		.4byte	.LASF100
 3280 0a3f 01       		.byte	0x1
 3281 0a40 1506     		.2byte	0x615
 3282 0a42 9B000000 		.4byte	0x9b
 3283 0a46 5E050000 		.4byte	.LLST41
 3284 0a4a 15       		.uleb128 0x15
 3285 0a4b D9070000 		.4byte	.LASF91
 3286 0a4f 01       		.byte	0x1
 3287 0a50 1706     		.2byte	0x617
 3288 0a52 E7010000 		.4byte	0x1e7
 3289 0a56 8B050000 		.4byte	.LLST42
 3290 0a5a 00       		.byte	0
 3291 0a5b 1B       		.uleb128 0x1b
 3292 0a5c 6B000000 		.4byte	0x6b
 3293 0a60 6B0A0000 		.4byte	0xa6b
 3294 0a64 1C       		.uleb128 0x1c
 3295 0a65 BC000000 		.4byte	0xbc
 3296 0a69 02       		.byte	0x2
 3297 0a6a 00       		.byte	0
 3298 0a6b 16       		.uleb128 0x16
 3299 0a6c 2A0B0000 		.4byte	.LASF101
 3300 0a70 01       		.byte	0x1
 3301 0a71 9F07     		.2byte	0x79f
 3302 0a73 77000000 		.4byte	0x77
 3303 0a77 00000000 		.4byte	.LFB62
 3304 0a7b 40000000 		.4byte	.LFE62-.LFB62
 3305 0a7f 01       		.uleb128 0x1
 3306 0a80 9C       		.byte	0x9c
 3307 0a81 030B0000 		.4byte	0xb03
 3308 0a85 17       		.uleb128 0x17
 3309 0a86 72030000 		.4byte	.LASF63
 3310 0a8a 01       		.byte	0x1
 3311 0a8b 9F07     		.2byte	0x79f
 3312 0a8d 83000000 		.4byte	0x83
 3313 0a91 A9050000 		.4byte	.LLST43
 3314 0a95 15       		.uleb128 0x15
 3315 0a96 26090000 		.4byte	.LASF89
 3316 0a9a 01       		.byte	0x1
 3317 0a9b AE07     		.2byte	0x7ae
 3318 0a9d 6B000000 		.4byte	0x6b
 3319 0aa1 D5050000 		.4byte	.LLST44
 3320 0aa5 15       		.uleb128 0x15
 3321 0aa6 CC0B0000 		.4byte	.LASF98
 3322 0aaa 01       		.byte	0x1
 3323 0aab AF07     		.2byte	0x7af
 3324 0aad 77000000 		.4byte	0x77
 3325 0ab1 F3050000 		.4byte	.LLST45
 3326 0ab5 19       		.uleb128 0x19
 3327 0ab6 E9040000 		.4byte	.LASF87
 3328 0aba 01       		.byte	0x1
 3329 0abb B007     		.2byte	0x7b0
 3330 0abd 6B000000 		.4byte	0x6b
 3331 0ac1 00       		.byte	0
 3332 0ac2 19       		.uleb128 0x19
 3333 0ac3 ED020000 		.4byte	.LASF88
 3334 0ac7 01       		.byte	0x1
 3335 0ac8 B107     		.2byte	0x7b1
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 111


 3336 0aca 6B000000 		.4byte	0x6b
 3337 0ace 0A       		.byte	0xa
 3338 0acf 0F       		.uleb128 0xf
 3339 0ad0 12000000 		.4byte	.LVL129
 3340 0ad4 FB080000 		.4byte	0x8fb
 3341 0ad8 E70A0000 		.4byte	0xae7
 3342 0adc 10       		.uleb128 0x10
 3343 0add 01       		.uleb128 0x1
 3344 0ade 50       		.byte	0x50
 3345 0adf 01       		.uleb128 0x1
 3346 0ae0 30       		.byte	0x30
 3347 0ae1 10       		.uleb128 0x10
 3348 0ae2 01       		.uleb128 0x1
 3349 0ae3 51       		.byte	0x51
 3350 0ae4 01       		.uleb128 0x1
 3351 0ae5 3A       		.byte	0x3a
 3352 0ae6 00       		.byte	0
 3353 0ae7 12       		.uleb128 0x12
 3354 0ae8 26000000 		.4byte	.LVL130
 3355 0aec 80090000 		.4byte	0x980
 3356 0af0 10       		.uleb128 0x10
 3357 0af1 01       		.uleb128 0x1
 3358 0af2 51       		.byte	0x51
 3359 0af3 01       		.uleb128 0x1
 3360 0af4 30       		.byte	0x30
 3361 0af5 10       		.uleb128 0x10
 3362 0af6 01       		.uleb128 0x1
 3363 0af7 52       		.byte	0x52
 3364 0af8 01       		.uleb128 0x1
 3365 0af9 3A       		.byte	0x3a
 3366 0afa 10       		.uleb128 0x10
 3367 0afb 01       		.uleb128 0x1
 3368 0afc 53       		.byte	0x53
 3369 0afd 03       		.uleb128 0x3
 3370 0afe 0A       		.byte	0xa
 3371 0aff 1C0B     		.2byte	0xb1c
 3372 0b01 00       		.byte	0
 3373 0b02 00       		.byte	0
 3374 0b03 16       		.uleb128 0x16
 3375 0b04 570B0000 		.4byte	.LASF102
 3376 0b08 01       		.byte	0x1
 3377 0b09 4C09     		.2byte	0x94c
 3378 0b0b 77000000 		.4byte	0x77
 3379 0b0f 00000000 		.4byte	.LFB63
 3380 0b13 1C000000 		.4byte	.LFE63-.LFB63
 3381 0b17 01       		.uleb128 0x1
 3382 0b18 9C       		.byte	0x9c
 3383 0b19 550B0000 		.4byte	0xb55
 3384 0b1d 1E       		.uleb128 0x1e
 3385 0b1e 783100   		.ascii	"x1\000"
 3386 0b21 01       		.byte	0x1
 3387 0b22 4C09     		.2byte	0x94c
 3388 0b24 77000000 		.4byte	0x77
 3389 0b28 11060000 		.4byte	.LLST46
 3390 0b2c 1E       		.uleb128 0x1e
 3391 0b2d 783200   		.ascii	"x2\000"
 3392 0b30 01       		.byte	0x1
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 112


 3393 0b31 4C09     		.2byte	0x94c
 3394 0b33 77000000 		.4byte	0x77
 3395 0b37 3D060000 		.4byte	.LLST47
 3396 0b3b 1F       		.uleb128 0x1f
 3397 0b3c 783300   		.ascii	"x3\000"
 3398 0b3f 01       		.byte	0x1
 3399 0b40 4C09     		.2byte	0x94c
 3400 0b42 77000000 		.4byte	0x77
 3401 0b46 01       		.uleb128 0x1
 3402 0b47 52       		.byte	0x52
 3403 0b48 20       		.uleb128 0x20
 3404 0b49 746D7000 		.ascii	"tmp\000"
 3405 0b4d 01       		.byte	0x1
 3406 0b4e 4E09     		.2byte	0x94e
 3407 0b50 77000000 		.4byte	0x77
 3408 0b54 00       		.byte	0
 3409 0b55 16       		.uleb128 0x16
 3410 0b56 1B000000 		.4byte	.LASF103
 3411 0b5a 01       		.byte	0x1
 3412 0b5b C409     		.2byte	0x9c4
 3413 0b5d 77000000 		.4byte	0x77
 3414 0b61 00000000 		.4byte	.LFB64
 3415 0b65 0C000000 		.4byte	.LFE64-.LFB64
 3416 0b69 01       		.uleb128 0x1
 3417 0b6a 9C       		.byte	0x9c
 3418 0b6b 9E0B0000 		.4byte	0xb9e
 3419 0b6f 1E       		.uleb128 0x1e
 3420 0b70 783100   		.ascii	"x1\000"
 3421 0b73 01       		.byte	0x1
 3422 0b74 C409     		.2byte	0x9c4
 3423 0b76 77000000 		.4byte	0x77
 3424 0b7a 5B060000 		.4byte	.LLST48
 3425 0b7e 1E       		.uleb128 0x1e
 3426 0b7f 783200   		.ascii	"x2\000"
 3427 0b82 01       		.byte	0x1
 3428 0b83 C409     		.2byte	0x9c4
 3429 0b85 77000000 		.4byte	0x77
 3430 0b89 7C060000 		.4byte	.LLST49
 3431 0b8d 13       		.uleb128 0x13
 3432 0b8e 746D7000 		.ascii	"tmp\000"
 3433 0b92 01       		.byte	0x1
 3434 0b93 C609     		.2byte	0x9c6
 3435 0b95 83000000 		.4byte	0x83
 3436 0b99 9D060000 		.4byte	.LLST50
 3437 0b9d 00       		.byte	0
 3438 0b9e 14       		.uleb128 0x14
 3439 0b9f 72000000 		.4byte	.LASF104
 3440 0ba3 01       		.byte	0x1
 3441 0ba4 6201     		.2byte	0x162
 3442 0ba6 00000000 		.4byte	.LFB36
 3443 0baa 28010000 		.4byte	.LFE36-.LFB36
 3444 0bae 01       		.uleb128 0x1
 3445 0baf 9C       		.byte	0x9c
 3446 0bb0 580C0000 		.4byte	0xc58
 3447 0bb4 17       		.uleb128 0x17
 3448 0bb5 E0050000 		.4byte	.LASF52
 3449 0bb9 01       		.byte	0x1
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 113


 3450 0bba 6201     		.2byte	0x162
 3451 0bbc 83000000 		.4byte	0x83
 3452 0bc0 B0060000 		.4byte	.LLST51
 3453 0bc4 15       		.uleb128 0x15
 3454 0bc5 01050000 		.4byte	.LASF105
 3455 0bc9 01       		.byte	0x1
 3456 0bca 6401     		.2byte	0x164
 3457 0bcc 83000000 		.4byte	0x83
 3458 0bd0 0E070000 		.4byte	.LLST52
 3459 0bd4 15       		.uleb128 0x15
 3460 0bd5 E4040000 		.4byte	.LASF106
 3461 0bd9 01       		.byte	0x1
 3462 0bda 6501     		.2byte	0x165
 3463 0bdc 83000000 		.4byte	0x83
 3464 0be0 42070000 		.4byte	.LLST53
 3465 0be4 15       		.uleb128 0x15
 3466 0be5 6D0B0000 		.4byte	.LASF107
 3467 0be9 01       		.byte	0x1
 3468 0bea 6601     		.2byte	0x166
 3469 0bec 77000000 		.4byte	0x77
 3470 0bf0 99070000 		.4byte	.LLST54
 3471 0bf4 15       		.uleb128 0x15
 3472 0bf5 36050000 		.4byte	.LASF108
 3473 0bf9 01       		.byte	0x1
 3474 0bfa 6701     		.2byte	0x167
 3475 0bfc 77000000 		.4byte	0x77
 3476 0c00 B7070000 		.4byte	.LLST55
 3477 0c04 21       		.uleb128 0x21
 3478 0c05 72030000 		.4byte	.LASF63
 3479 0c09 01       		.byte	0x1
 3480 0c0a 6801     		.2byte	0x168
 3481 0c0c 6B000000 		.4byte	0x6b
 3482 0c10 1A       		.uleb128 0x1a
 3483 0c11 52090000 		.4byte	.LASF94
 3484 0c15 01       		.byte	0x1
 3485 0c16 6901     		.2byte	0x169
 3486 0c18 6B000000 		.4byte	0x6b
 3487 0c1c 02       		.uleb128 0x2
 3488 0c1d 91       		.byte	0x91
 3489 0c1e 64       		.sleb128 -28
 3490 0c1f 0F       		.uleb128 0xf
 3491 0c20 2E000000 		.4byte	.LVL150
 3492 0c24 550B0000 		.4byte	0xb55
 3493 0c28 330C0000 		.4byte	0xc33
 3494 0c2c 10       		.uleb128 0x10
 3495 0c2d 01       		.uleb128 0x1
 3496 0c2e 50       		.byte	0x50
 3497 0c2f 02       		.uleb128 0x2
 3498 0c30 77       		.byte	0x77
 3499 0c31 00       		.sleb128 0
 3500 0c32 00       		.byte	0
 3501 0c33 0F       		.uleb128 0xf
 3502 0c34 3E000000 		.4byte	.LVL153
 3503 0c38 0F110000 		.4byte	0x110f
 3504 0c3c 470C0000 		.4byte	0xc47
 3505 0c40 10       		.uleb128 0x10
 3506 0c41 01       		.uleb128 0x1
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 114


 3507 0c42 51       		.byte	0x51
 3508 0c43 02       		.uleb128 0x2
 3509 0c44 74       		.byte	0x74
 3510 0c45 00       		.sleb128 0
 3511 0c46 00       		.byte	0
 3512 0c47 12       		.uleb128 0x12
 3513 0c48 82000000 		.4byte	.LVL158
 3514 0c4c D1020000 		.4byte	0x2d1
 3515 0c50 10       		.uleb128 0x10
 3516 0c51 01       		.uleb128 0x1
 3517 0c52 50       		.byte	0x50
 3518 0c53 02       		.uleb128 0x2
 3519 0c54 74       		.byte	0x74
 3520 0c55 00       		.sleb128 0
 3521 0c56 00       		.byte	0
 3522 0c57 00       		.byte	0
 3523 0c58 14       		.uleb128 0x14
 3524 0c59 1D070000 		.4byte	.LASF109
 3525 0c5d 01       		.byte	0x1
 3526 0c5e 2202     		.2byte	0x222
 3527 0c60 00000000 		.4byte	.LFB37
 3528 0c64 10000000 		.4byte	.LFE37-.LFB37
 3529 0c68 01       		.uleb128 0x1
 3530 0c69 9C       		.byte	0x9c
 3531 0c6a A30C0000 		.4byte	0xca3
 3532 0c6e 17       		.uleb128 0x17
 3533 0c6f E0050000 		.4byte	.LASF52
 3534 0c73 01       		.byte	0x1
 3535 0c74 2202     		.2byte	0x222
 3536 0c76 83000000 		.4byte	0x83
 3537 0c7a E0070000 		.4byte	.LLST56
 3538 0c7e 0F       		.uleb128 0xf
 3539 0c7f 08000000 		.4byte	.LVL176
 3540 0c83 1A110000 		.4byte	0x111a
 3541 0c87 920C0000 		.4byte	0xc92
 3542 0c8b 10       		.uleb128 0x10
 3543 0c8c 01       		.uleb128 0x1
 3544 0c8d 50       		.byte	0x50
 3545 0c8e 02       		.uleb128 0x2
 3546 0c8f 74       		.byte	0x74
 3547 0c90 00       		.sleb128 0
 3548 0c91 00       		.byte	0
 3549 0c92 12       		.uleb128 0x12
 3550 0c93 0E000000 		.4byte	.LVL177
 3551 0c97 9E0B0000 		.4byte	0xb9e
 3552 0c9b 10       		.uleb128 0x10
 3553 0c9c 01       		.uleb128 0x1
 3554 0c9d 50       		.byte	0x50
 3555 0c9e 02       		.uleb128 0x2
 3556 0c9f 74       		.byte	0x74
 3557 0ca0 00       		.sleb128 0
 3558 0ca1 00       		.byte	0
 3559 0ca2 00       		.byte	0
 3560 0ca3 14       		.uleb128 0x14
 3561 0ca4 CB000000 		.4byte	.LASF110
 3562 0ca8 01       		.byte	0x1
 3563 0ca9 5802     		.2byte	0x258
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 115


 3564 0cab 00000000 		.4byte	.LFB38
 3565 0caf 24000000 		.4byte	.LFE38-.LFB38
 3566 0cb3 01       		.uleb128 0x1
 3567 0cb4 9C       		.byte	0x9c
 3568 0cb5 FC0C0000 		.4byte	0xcfc
 3569 0cb9 13       		.uleb128 0x13
 3570 0cba 6900     		.ascii	"i\000"
 3571 0cbc 01       		.byte	0x1
 3572 0cbd 5A02     		.2byte	0x25a
 3573 0cbf 83000000 		.4byte	0x83
 3574 0cc3 0C080000 		.4byte	.LLST57
 3575 0cc7 15       		.uleb128 0x15
 3576 0cc8 04010000 		.4byte	.LASF55
 3577 0ccc 01       		.byte	0x1
 3578 0ccd 5B02     		.2byte	0x25b
 3579 0ccf 83000000 		.4byte	0x83
 3580 0cd3 2B080000 		.4byte	.LLST58
 3581 0cd7 0F       		.uleb128 0xf
 3582 0cd8 0E000000 		.4byte	.LVL181
 3583 0cdc F9100000 		.4byte	0x10f9
 3584 0ce0 EB0C0000 		.4byte	0xceb
 3585 0ce4 10       		.uleb128 0x10
 3586 0ce5 01       		.uleb128 0x1
 3587 0ce6 51       		.byte	0x51
 3588 0ce7 02       		.uleb128 0x2
 3589 0ce8 74       		.byte	0x74
 3590 0ce9 00       		.sleb128 0
 3591 0cea 00       		.byte	0
 3592 0ceb 12       		.uleb128 0x12
 3593 0cec 18000000 		.4byte	.LVL183
 3594 0cf0 580C0000 		.4byte	0xc58
 3595 0cf4 10       		.uleb128 0x10
 3596 0cf5 01       		.uleb128 0x1
 3597 0cf6 50       		.byte	0x50
 3598 0cf7 02       		.uleb128 0x2
 3599 0cf8 74       		.byte	0x74
 3600 0cf9 00       		.sleb128 0
 3601 0cfa 00       		.byte	0
 3602 0cfb 00       		.byte	0
 3603 0cfc 14       		.uleb128 0x14
 3604 0cfd AF020000 		.4byte	.LASF111
 3605 0d01 01       		.byte	0x1
 3606 0d02 8502     		.2byte	0x285
 3607 0d04 00000000 		.4byte	.LFB39
 3608 0d08 24000000 		.4byte	.LFE39-.LFB39
 3609 0d0c 01       		.uleb128 0x1
 3610 0d0d 9C       		.byte	0x9c
 3611 0d0e 8C0D0000 		.4byte	0xd8c
 3612 0d12 17       		.uleb128 0x17
 3613 0d13 72030000 		.4byte	.LASF63
 3614 0d17 01       		.byte	0x1
 3615 0d18 8502     		.2byte	0x285
 3616 0d1a 83000000 		.4byte	0x83
 3617 0d1e 3E080000 		.4byte	.LLST59
 3618 0d22 19       		.uleb128 0x19
 3619 0d23 46050000 		.4byte	.LASF112
 3620 0d27 01       		.byte	0x1
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 116


 3621 0d28 8702     		.2byte	0x287
 3622 0d2a 83000000 		.4byte	0x83
 3623 0d2e 0A       		.byte	0xa
 3624 0d2f 19       		.uleb128 0x19
 3625 0d30 89080000 		.4byte	.LASF113
 3626 0d34 01       		.byte	0x1
 3627 0d35 8802     		.2byte	0x288
 3628 0d37 83000000 		.4byte	0x83
 3629 0d3b 00       		.byte	0
 3630 0d3c 19       		.uleb128 0x19
 3631 0d3d 36080000 		.4byte	.LASF114
 3632 0d41 01       		.byte	0x1
 3633 0d42 8902     		.2byte	0x289
 3634 0d44 83000000 		.4byte	0x83
 3635 0d48 0A       		.byte	0xa
 3636 0d49 13       		.uleb128 0x13
 3637 0d4a 6900     		.ascii	"i\000"
 3638 0d4c 01       		.byte	0x1
 3639 0d4d 8A02     		.2byte	0x28a
 3640 0d4f 83000000 		.4byte	0x83
 3641 0d53 5F080000 		.4byte	.LLST60
 3642 0d57 15       		.uleb128 0x15
 3643 0d58 04010000 		.4byte	.LASF55
 3644 0d5c 01       		.byte	0x1
 3645 0d5d 8B02     		.2byte	0x28b
 3646 0d5f 83000000 		.4byte	0x83
 3647 0d63 7E080000 		.4byte	.LLST61
 3648 0d67 0F       		.uleb128 0xf
 3649 0d68 0E000000 		.4byte	.LVL189
 3650 0d6c F9100000 		.4byte	0x10f9
 3651 0d70 7B0D0000 		.4byte	0xd7b
 3652 0d74 10       		.uleb128 0x10
 3653 0d75 01       		.uleb128 0x1
 3654 0d76 51       		.byte	0x51
 3655 0d77 02       		.uleb128 0x2
 3656 0d78 74       		.byte	0x74
 3657 0d79 00       		.sleb128 0
 3658 0d7a 00       		.byte	0
 3659 0d7b 12       		.uleb128 0x12
 3660 0d7c 18000000 		.4byte	.LVL191
 3661 0d80 580C0000 		.4byte	0xc58
 3662 0d84 10       		.uleb128 0x10
 3663 0d85 01       		.uleb128 0x1
 3664 0d86 50       		.byte	0x50
 3665 0d87 02       		.uleb128 0x2
 3666 0d88 74       		.byte	0x74
 3667 0d89 00       		.sleb128 0
 3668 0d8a 00       		.byte	0
 3669 0d8b 00       		.byte	0
 3670 0d8c 16       		.uleb128 0x16
 3671 0d8d 4F080000 		.4byte	.LASF115
 3672 0d91 01       		.byte	0x1
 3673 0d92 D406     		.2byte	0x6d4
 3674 0d94 77000000 		.4byte	0x77
 3675 0d98 00000000 		.4byte	.LFB61
 3676 0d9c 7C000000 		.4byte	.LFE61-.LFB61
 3677 0da0 01       		.uleb128 0x1
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 117


 3678 0da1 9C       		.byte	0x9c
 3679 0da2 5E0E0000 		.4byte	0xe5e
 3680 0da6 17       		.uleb128 0x17
 3681 0da7 72030000 		.4byte	.LASF63
 3682 0dab 01       		.byte	0x1
 3683 0dac D406     		.2byte	0x6d4
 3684 0dae 83000000 		.4byte	0x83
 3685 0db2 91080000 		.4byte	.LLST62
 3686 0db6 15       		.uleb128 0x15
 3687 0db7 EB000000 		.4byte	.LASF116
 3688 0dbb 01       		.byte	0x1
 3689 0dbc DB06     		.2byte	0x6db
 3690 0dbe 6B000000 		.4byte	0x6b
 3691 0dc2 D6080000 		.4byte	.LLST63
 3692 0dc6 15       		.uleb128 0x15
 3693 0dc7 CA070000 		.4byte	.LASF117
 3694 0dcb 01       		.byte	0x1
 3695 0dcc DC06     		.2byte	0x6dc
 3696 0dce 6B000000 		.4byte	0x6b
 3697 0dd2 0E090000 		.4byte	.LLST64
 3698 0dd6 19       		.uleb128 0x19
 3699 0dd7 02030000 		.4byte	.LASF118
 3700 0ddb 01       		.byte	0x1
 3701 0ddc DD06     		.2byte	0x6dd
 3702 0dde 6B000000 		.4byte	0x6b
 3703 0de2 08       		.byte	0x8
 3704 0de3 15       		.uleb128 0x15
 3705 0de4 26090000 		.4byte	.LASF89
 3706 0de8 01       		.byte	0x1
 3707 0de9 E706     		.2byte	0x6e7
 3708 0deb 6B000000 		.4byte	0x6b
 3709 0def 2C090000 		.4byte	.LLST65
 3710 0df3 15       		.uleb128 0x15
 3711 0df4 CC0B0000 		.4byte	.LASF98
 3712 0df8 01       		.byte	0x1
 3713 0df9 E806     		.2byte	0x6e8
 3714 0dfb 77000000 		.4byte	0x77
 3715 0dff 4A090000 		.4byte	.LLST66
 3716 0e03 19       		.uleb128 0x19
 3717 0e04 E9040000 		.4byte	.LASF87
 3718 0e08 01       		.byte	0x1
 3719 0e09 E906     		.2byte	0x6e9
 3720 0e0b 6B000000 		.4byte	0x6b
 3721 0e0f 00       		.byte	0
 3722 0e10 19       		.uleb128 0x19
 3723 0e11 ED020000 		.4byte	.LASF88
 3724 0e15 01       		.byte	0x1
 3725 0e16 EA06     		.2byte	0x6ea
 3726 0e18 6B000000 		.4byte	0x6b
 3727 0e1c 0A       		.byte	0xa
 3728 0e1d 0F       		.uleb128 0xf
 3729 0e1e 18000000 		.4byte	.LVL197
 3730 0e22 FB080000 		.4byte	0x8fb
 3731 0e26 350E0000 		.4byte	0xe35
 3732 0e2a 10       		.uleb128 0x10
 3733 0e2b 01       		.uleb128 0x1
 3734 0e2c 50       		.byte	0x50
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 118


 3735 0e2d 01       		.uleb128 0x1
 3736 0e2e 30       		.byte	0x30
 3737 0e2f 10       		.uleb128 0x10
 3738 0e30 01       		.uleb128 0x1
 3739 0e31 51       		.byte	0x51
 3740 0e32 01       		.uleb128 0x1
 3741 0e33 3A       		.byte	0x3a
 3742 0e34 00       		.byte	0
 3743 0e35 0F       		.uleb128 0xf
 3744 0e36 2C000000 		.4byte	.LVL198
 3745 0e3a 80090000 		.4byte	0x980
 3746 0e3e 540E0000 		.4byte	0xe54
 3747 0e42 10       		.uleb128 0x10
 3748 0e43 01       		.uleb128 0x1
 3749 0e44 51       		.byte	0x51
 3750 0e45 01       		.uleb128 0x1
 3751 0e46 30       		.byte	0x30
 3752 0e47 10       		.uleb128 0x10
 3753 0e48 01       		.uleb128 0x1
 3754 0e49 52       		.byte	0x52
 3755 0e4a 01       		.uleb128 0x1
 3756 0e4b 3A       		.byte	0x3a
 3757 0e4c 10       		.uleb128 0x10
 3758 0e4d 01       		.uleb128 0x1
 3759 0e4e 53       		.byte	0x53
 3760 0e4f 03       		.uleb128 0x3
 3761 0e50 0A       		.byte	0xa
 3762 0e51 1C0B     		.2byte	0xb1c
 3763 0e53 00       		.byte	0
 3764 0e54 11       		.uleb128 0x11
 3765 0e55 56000000 		.4byte	.LVL205
 3766 0e59 550B0000 		.4byte	0xb55
 3767 0e5d 00       		.byte	0
 3768 0e5e 16       		.uleb128 0x16
 3769 0e5f C9060000 		.4byte	.LASF119
 3770 0e63 01       		.byte	0x1
 3771 0e64 AD0A     		.2byte	0xaad
 3772 0e66 83000000 		.4byte	0x83
 3773 0e6a 00000000 		.4byte	.LFB65
 3774 0e6e 0C000000 		.4byte	.LFE65-.LFB65
 3775 0e72 01       		.uleb128 0x1
 3776 0e73 9C       		.byte	0x9c
 3777 0e74 890E0000 		.4byte	0xe89
 3778 0e78 17       		.uleb128 0x17
 3779 0e79 E0050000 		.4byte	.LASF52
 3780 0e7d 01       		.byte	0x1
 3781 0e7e AD0A     		.2byte	0xaad
 3782 0e80 83000000 		.4byte	0x83
 3783 0e84 80090000 		.4byte	.LLST67
 3784 0e88 00       		.byte	0
 3785 0e89 16       		.uleb128 0x16
 3786 0e8a 83070000 		.4byte	.LASF120
 3787 0e8e 01       		.byte	0x1
 3788 0e8f C70A     		.2byte	0xac7
 3789 0e91 6B000000 		.4byte	0x6b
 3790 0e95 00000000 		.4byte	.LFB66
 3791 0e99 0C000000 		.4byte	.LFE66-.LFB66
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 119


 3792 0e9d 01       		.uleb128 0x1
 3793 0e9e 9C       		.byte	0x9c
 3794 0e9f B40E0000 		.4byte	0xeb4
 3795 0ea3 17       		.uleb128 0x17
 3796 0ea4 E0050000 		.4byte	.LASF52
 3797 0ea8 01       		.byte	0x1
 3798 0ea9 C70A     		.2byte	0xac7
 3799 0eab 83000000 		.4byte	0x83
 3800 0eaf A1090000 		.4byte	.LLST68
 3801 0eb3 00       		.byte	0
 3802 0eb4 16       		.uleb128 0x16
 3803 0eb5 750B0000 		.4byte	.LASF121
 3804 0eb9 01       		.byte	0x1
 3805 0eba E10A     		.2byte	0xae1
 3806 0ebc 6B000000 		.4byte	0x6b
 3807 0ec0 00000000 		.4byte	.LFB67
 3808 0ec4 0C000000 		.4byte	.LFE67-.LFB67
 3809 0ec8 01       		.uleb128 0x1
 3810 0ec9 9C       		.byte	0x9c
 3811 0eca DF0E0000 		.4byte	0xedf
 3812 0ece 17       		.uleb128 0x17
 3813 0ecf 72030000 		.4byte	.LASF63
 3814 0ed3 01       		.byte	0x1
 3815 0ed4 E10A     		.2byte	0xae1
 3816 0ed6 83000000 		.4byte	0x83
 3817 0eda C2090000 		.4byte	.LLST69
 3818 0ede 00       		.byte	0
 3819 0edf 22       		.uleb128 0x22
 3820 0ee0 C0080000 		.4byte	.LASF122
 3821 0ee4 01       		.byte	0x1
 3822 0ee5 FB0A     		.2byte	0xafb
 3823 0ee7 00000000 		.4byte	.LFB68
 3824 0eeb 0C000000 		.4byte	.LFE68-.LFB68
 3825 0eef 01       		.uleb128 0x1
 3826 0ef0 9C       		.byte	0x9c
 3827 0ef1 22       		.uleb128 0x22
 3828 0ef2 FA030000 		.4byte	.LASF123
 3829 0ef6 01       		.byte	0x1
 3830 0ef7 140B     		.2byte	0xb14
 3831 0ef9 00000000 		.4byte	.LFB69
 3832 0efd 0C000000 		.4byte	.LFE69-.LFB69
 3833 0f01 01       		.uleb128 0x1
 3834 0f02 9C       		.byte	0x9c
 3835 0f03 1B       		.uleb128 0x1b
 3836 0f04 130F0000 		.4byte	0xf13
 3837 0f08 130F0000 		.4byte	0xf13
 3838 0f0c 1C       		.uleb128 0x1c
 3839 0f0d BC000000 		.4byte	0xbc
 3840 0f11 00       		.byte	0
 3841 0f12 00       		.byte	0
 3842 0f13 08       		.uleb128 0x8
 3843 0f14 77000000 		.4byte	0x77
 3844 0f18 23       		.uleb128 0x23
 3845 0f19 530A0000 		.4byte	.LASF124
 3846 0f1d 01       		.byte	0x1
 3847 0f1e 5D       		.byte	0x5d
 3848 0f1f 260F0000 		.4byte	0xf26
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 120


 3849 0f23 02       		.byte	0x2
 3850 0f24 1C       		.byte	0x1c
 3851 0f25 0B       		.byte	0xb
 3852 0f26 08       		.uleb128 0x8
 3853 0f27 030F0000 		.4byte	0xf03
 3854 0f2b 23       		.uleb128 0x23
 3855 0f2c 79030000 		.4byte	.LASF125
 3856 0f30 01       		.byte	0x1
 3857 0f31 61       		.byte	0x61
 3858 0f32 380F0000 		.4byte	0xf38
 3859 0f36 01       		.byte	0x1
 3860 0f37 08       		.byte	0x8
 3861 0f38 08       		.uleb128 0x8
 3862 0f39 88070000 		.4byte	0x788
 3863 0f3d 24       		.uleb128 0x24
 3864 0f3e A4010000 		.4byte	.LASF126
 3865 0f42 01       		.byte	0x1
 3866 0f43 65       		.byte	0x65
 3867 0f44 5B0A0000 		.4byte	0xa5b
 3868 0f48 05       		.uleb128 0x5
 3869 0f49 03       		.byte	0x3
 3870 0f4a 10000000 		.4byte	CapSense_posFiltersData
 3871 0f4e 1B       		.uleb128 0x1b
 3872 0f4f 77000000 		.4byte	0x77
 3873 0f53 5E0F0000 		.4byte	0xf5e
 3874 0f57 1C       		.uleb128 0x1c
 3875 0f58 BC000000 		.4byte	0xbc
 3876 0f5c 09       		.byte	0x9
 3877 0f5d 00       		.byte	0
 3878 0f5e 25       		.uleb128 0x25
 3879 0f5f 70070000 		.4byte	.LASF127
 3880 0f63 01       		.byte	0x1
 3881 0f64 2C       		.byte	0x2c
 3882 0f65 4E0F0000 		.4byte	0xf4e
 3883 0f69 1B       		.uleb128 0x1b
 3884 0f6a 6B000000 		.4byte	0x6b
 3885 0f6e 790F0000 		.4byte	0xf79
 3886 0f72 1C       		.uleb128 0x1c
 3887 0f73 BC000000 		.4byte	0xbc
 3888 0f77 01       		.byte	0x1
 3889 0f78 00       		.byte	0
 3890 0f79 25       		.uleb128 0x25
 3891 0f7a 58030000 		.4byte	.LASF128
 3892 0f7e 01       		.byte	0x1
 3893 0f7f 2D       		.byte	0x2d
 3894 0f80 690F0000 		.4byte	0xf69
 3895 0f84 1B       		.uleb128 0x1b
 3896 0f85 F3010000 		.4byte	0x1f3
 3897 0f89 940F0000 		.4byte	0xf94
 3898 0f8d 1C       		.uleb128 0x1c
 3899 0f8e BC000000 		.4byte	0xbc
 3900 0f92 09       		.byte	0x9
 3901 0f93 00       		.byte	0
 3902 0f94 25       		.uleb128 0x25
 3903 0f95 C8030000 		.4byte	.LASF129
 3904 0f99 01       		.byte	0x1
 3905 0f9a 2E       		.byte	0x2e
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 121


 3906 0f9b 9F0F0000 		.4byte	0xf9f
 3907 0f9f 08       		.uleb128 0x8
 3908 0fa0 840F0000 		.4byte	0xf84
 3909 0fa4 26       		.uleb128 0x26
 3910 0fa5 0E090000 		.4byte	.LASF130
 3911 0fa9 01       		.byte	0x1
 3912 0faa 34       		.byte	0x34
 3913 0fab 4E0F0000 		.4byte	0xf4e
 3914 0faf 05       		.uleb128 0x5
 3915 0fb0 03       		.byte	0x3
 3916 0fb1 00000000 		.4byte	CapSense_sensorBaseline
 3917 0fb5 1B       		.uleb128 0x1b
 3918 0fb6 6B000000 		.4byte	0x6b
 3919 0fba C50F0000 		.4byte	0xfc5
 3920 0fbe 1C       		.uleb128 0x1c
 3921 0fbf BC000000 		.4byte	0xbc
 3922 0fc3 09       		.byte	0x9
 3923 0fc4 00       		.byte	0
 3924 0fc5 26       		.uleb128 0x26
 3925 0fc6 00000000 		.4byte	.LASF131
 3926 0fca 01       		.byte	0x1
 3927 0fcb 35       		.byte	0x35
 3928 0fcc B50F0000 		.4byte	0xfb5
 3929 0fd0 05       		.uleb128 0x5
 3930 0fd1 03       		.byte	0x3
 3931 0fd2 00000000 		.4byte	CapSense_sensorBaselineLow
 3932 0fd6 26       		.uleb128 0x26
 3933 0fd7 68020000 		.4byte	.LASF132
 3934 0fdb 01       		.byte	0x1
 3935 0fdc 36       		.byte	0x36
 3936 0fdd B50F0000 		.4byte	0xfb5
 3937 0fe1 05       		.uleb128 0x5
 3938 0fe2 03       		.byte	0x3
 3939 0fe3 00000000 		.4byte	CapSense_sensorSignal
 3940 0fe7 26       		.uleb128 0x26
 3941 0fe8 D50B0000 		.4byte	.LASF133
 3942 0fec 01       		.byte	0x1
 3943 0fed 37       		.byte	0x37
 3944 0fee 690F0000 		.4byte	0xf69
 3945 0ff2 05       		.uleb128 0x5
 3946 0ff3 03       		.byte	0x3
 3947 0ff4 00000000 		.4byte	CapSense_sensorOnMask
 3948 0ff8 26       		.uleb128 0x26
 3949 0ff9 55000000 		.4byte	.LASF134
 3950 0ffd 01       		.byte	0x1
 3951 0ffe 39       		.byte	0x39
 3952 0fff B50F0000 		.4byte	0xfb5
 3953 1003 05       		.uleb128 0x5
 3954 1004 03       		.byte	0x3
 3955 1005 00000000 		.4byte	CapSense_lowBaselineResetCnt
 3956 1009 26       		.uleb128 0x26
 3957 100a DE080000 		.4byte	.LASF135
 3958 100e 01       		.byte	0x1
 3959 100f 3A       		.byte	0x3a
 3960 1010 B50F0000 		.4byte	0xfb5
 3961 1014 05       		.uleb128 0x5
 3962 1015 03       		.byte	0x3
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 122


 3963 1016 00000000 		.4byte	CapSense_lowBaselineReset
 3964 101a 26       		.uleb128 0x26
 3965 101b 91030000 		.4byte	.LASF136
 3966 101f 01       		.byte	0x1
 3967 1020 49       		.byte	0x49
 3968 1021 88070000 		.4byte	0x788
 3969 1025 05       		.uleb128 0x5
 3970 1026 03       		.byte	0x3
 3971 1027 00000000 		.4byte	CapSense_fingerThreshold
 3972 102b 26       		.uleb128 0x26
 3973 102c B3090000 		.4byte	.LASF137
 3974 1030 01       		.byte	0x1
 3975 1031 4B       		.byte	0x4b
 3976 1032 88070000 		.4byte	0x788
 3977 1036 05       		.uleb128 0x5
 3978 1037 03       		.byte	0x3
 3979 1038 00000000 		.4byte	CapSense_noiseThreshold
 3980 103c 26       		.uleb128 0x26
 3981 103d 90050000 		.4byte	.LASF138
 3982 1041 01       		.byte	0x1
 3983 1042 4D       		.byte	0x4d
 3984 1043 88070000 		.4byte	0x788
 3985 1047 05       		.uleb128 0x5
 3986 1048 03       		.byte	0x3
 3987 1049 00000000 		.4byte	CapSense_negativeNoiseThreshold
 3988 104d 26       		.uleb128 0x26
 3989 104e CD020000 		.4byte	.LASF139
 3990 1052 01       		.byte	0x1
 3991 1053 4F       		.byte	0x4f
 3992 1054 88070000 		.4byte	0x788
 3993 1058 05       		.uleb128 0x5
 3994 1059 03       		.byte	0x3
 3995 105a 00000000 		.4byte	CapSense_hysteresis
 3996 105e 26       		.uleb128 0x26
 3997 105f CC010000 		.4byte	.LASF140
 3998 1063 01       		.byte	0x1
 3999 1064 51       		.byte	0x51
 4000 1065 88070000 		.4byte	0x788
 4001 1069 05       		.uleb128 0x5
 4002 106a 03       		.byte	0x3
 4003 106b 00000000 		.4byte	CapSense_debounce
 4004 106f 1B       		.uleb128 0x1b
 4005 1070 F3010000 		.4byte	0x1f3
 4006 1074 7F100000 		.4byte	0x107f
 4007 1078 1C       		.uleb128 0x1c
 4008 1079 BC000000 		.4byte	0xbc
 4009 107d 00       		.byte	0
 4010 107e 00       		.byte	0
 4011 107f 26       		.uleb128 0x26
 4012 1080 7E020000 		.4byte	.LASF141
 4013 1084 01       		.byte	0x1
 4014 1085 55       		.byte	0x55
 4015 1086 90100000 		.4byte	0x1090
 4016 108a 05       		.uleb128 0x5
 4017 108b 03       		.byte	0x3
 4018 108c 00000000 		.4byte	CapSense_rawDataIndex
 4019 1090 08       		.uleb128 0x8
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 123


 4020 1091 6F100000 		.4byte	0x106f
 4021 1095 26       		.uleb128 0x26
 4022 1096 77050000 		.4byte	.LASF142
 4023 109a 01       		.byte	0x1
 4024 109b 59       		.byte	0x59
 4025 109c A6100000 		.4byte	0x10a6
 4026 10a0 05       		.uleb128 0x5
 4027 10a1 03       		.byte	0x3
 4028 10a2 00000000 		.4byte	CapSense_numberOfSensors
 4029 10a6 08       		.uleb128 0x8
 4030 10a7 6F100000 		.4byte	0x106f
 4031 10ab 26       		.uleb128 0x26
 4032 10ac B40B0000 		.4byte	.LASF143
 4033 10b0 01       		.byte	0x1
 4034 10b1 27       		.byte	0x27
 4035 10b2 4E0F0000 		.4byte	0xf4e
 4036 10b6 05       		.uleb128 0x5
 4037 10b7 03       		.byte	0x3
 4038 10b8 00000000 		.4byte	CapSense_rawFilterData1
 4039 10bc 25       		.uleb128 0x25
 4040 10bd F4000000 		.4byte	.LASF144
 4041 10c1 01       		.byte	0x1
 4042 10c2 41       		.byte	0x41
 4043 10c3 C6020000 		.4byte	0x2c6
 4044 10c7 26       		.uleb128 0x26
 4045 10c8 AB0A0000 		.4byte	.LASF145
 4046 10cc 01       		.byte	0x1
 4047 10cd 45       		.byte	0x45
 4048 10ce 6B000000 		.4byte	0x6b
 4049 10d2 05       		.uleb128 0x5
 4050 10d3 03       		.byte	0x3
 4051 10d4 00000000 		.4byte	CapSense_enableRawFilters
 4052 10d8 27       		.uleb128 0x27
 4053 10d9 22050000 		.4byte	.LASF146
 4054 10dd 22050000 		.4byte	.LASF146
 4055 10e1 04       		.byte	0x4
 4056 10e2 A5       		.byte	0xa5
 4057 10e3 27       		.uleb128 0x27
 4058 10e4 08020000 		.4byte	.LASF147
 4059 10e8 08020000 		.4byte	.LASF147
 4060 10ec 04       		.byte	0x4
 4061 10ed A4       		.byte	0xa4
 4062 10ee 27       		.uleb128 0x27
 4063 10ef 9F060000 		.4byte	.LASF148
 4064 10f3 9F060000 		.4byte	.LASF148
 4065 10f7 04       		.byte	0x4
 4066 10f8 A7       		.byte	0xa7
 4067 10f9 27       		.uleb128 0x27
 4068 10fa 900A0000 		.4byte	.LASF149
 4069 10fe 900A0000 		.4byte	.LASF149
 4070 1102 03       		.byte	0x3
 4071 1103 6A       		.byte	0x6a
 4072 1104 27       		.uleb128 0x27
 4073 1105 3E0A0000 		.4byte	.LASF150
 4074 1109 3E0A0000 		.4byte	.LASF150
 4075 110d 03       		.byte	0x3
 4076 110e 6B       		.byte	0x6b
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 124


 4077 110f 27       		.uleb128 0x27
 4078 1110 C2050000 		.4byte	.LASF151
 4079 1114 C2050000 		.4byte	.LASF151
 4080 1118 03       		.byte	0x3
 4081 1119 81       		.byte	0x81
 4082 111a 27       		.uleb128 0x27
 4083 111b 73060000 		.4byte	.LASF152
 4084 111f 73060000 		.4byte	.LASF152
 4085 1123 01       		.byte	0x1
 4086 1124 17       		.byte	0x17
 4087 1125 00       		.byte	0
 4088              		.section	.debug_abbrev,"",%progbits
 4089              	.Ldebug_abbrev0:
 4090 0000 01       		.uleb128 0x1
 4091 0001 11       		.uleb128 0x11
 4092 0002 01       		.byte	0x1
 4093 0003 25       		.uleb128 0x25
 4094 0004 0E       		.uleb128 0xe
 4095 0005 13       		.uleb128 0x13
 4096 0006 0B       		.uleb128 0xb
 4097 0007 03       		.uleb128 0x3
 4098 0008 0E       		.uleb128 0xe
 4099 0009 1B       		.uleb128 0x1b
 4100 000a 0E       		.uleb128 0xe
 4101 000b 55       		.uleb128 0x55
 4102 000c 17       		.uleb128 0x17
 4103 000d 11       		.uleb128 0x11
 4104 000e 01       		.uleb128 0x1
 4105 000f 10       		.uleb128 0x10
 4106 0010 17       		.uleb128 0x17
 4107 0011 00       		.byte	0
 4108 0012 00       		.byte	0
 4109 0013 02       		.uleb128 0x2
 4110 0014 24       		.uleb128 0x24
 4111 0015 00       		.byte	0
 4112 0016 0B       		.uleb128 0xb
 4113 0017 0B       		.uleb128 0xb
 4114 0018 3E       		.uleb128 0x3e
 4115 0019 0B       		.uleb128 0xb
 4116 001a 03       		.uleb128 0x3
 4117 001b 0E       		.uleb128 0xe
 4118 001c 00       		.byte	0
 4119 001d 00       		.byte	0
 4120 001e 03       		.uleb128 0x3
 4121 001f 24       		.uleb128 0x24
 4122 0020 00       		.byte	0
 4123 0021 0B       		.uleb128 0xb
 4124 0022 0B       		.uleb128 0xb
 4125 0023 3E       		.uleb128 0x3e
 4126 0024 0B       		.uleb128 0xb
 4127 0025 03       		.uleb128 0x3
 4128 0026 08       		.uleb128 0x8
 4129 0027 00       		.byte	0
 4130 0028 00       		.byte	0
 4131 0029 04       		.uleb128 0x4
 4132 002a 16       		.uleb128 0x16
 4133 002b 00       		.byte	0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 125


 4134 002c 03       		.uleb128 0x3
 4135 002d 0E       		.uleb128 0xe
 4136 002e 3A       		.uleb128 0x3a
 4137 002f 0B       		.uleb128 0xb
 4138 0030 3B       		.uleb128 0x3b
 4139 0031 05       		.uleb128 0x5
 4140 0032 49       		.uleb128 0x49
 4141 0033 13       		.uleb128 0x13
 4142 0034 00       		.byte	0
 4143 0035 00       		.byte	0
 4144 0036 05       		.uleb128 0x5
 4145 0037 13       		.uleb128 0x13
 4146 0038 01       		.byte	0x1
 4147 0039 0B       		.uleb128 0xb
 4148 003a 0B       		.uleb128 0xb
 4149 003b 3A       		.uleb128 0x3a
 4150 003c 0B       		.uleb128 0xb
 4151 003d 3B       		.uleb128 0x3b
 4152 003e 0B       		.uleb128 0xb
 4153 003f 01       		.uleb128 0x1
 4154 0040 13       		.uleb128 0x13
 4155 0041 00       		.byte	0
 4156 0042 00       		.byte	0
 4157 0043 06       		.uleb128 0x6
 4158 0044 0D       		.uleb128 0xd
 4159 0045 00       		.byte	0
 4160 0046 03       		.uleb128 0x3
 4161 0047 0E       		.uleb128 0xe
 4162 0048 3A       		.uleb128 0x3a
 4163 0049 0B       		.uleb128 0xb
 4164 004a 3B       		.uleb128 0x3b
 4165 004b 0B       		.uleb128 0xb
 4166 004c 49       		.uleb128 0x49
 4167 004d 13       		.uleb128 0x13
 4168 004e 38       		.uleb128 0x38
 4169 004f 0B       		.uleb128 0xb
 4170 0050 00       		.byte	0
 4171 0051 00       		.byte	0
 4172 0052 07       		.uleb128 0x7
 4173 0053 0F       		.uleb128 0xf
 4174 0054 00       		.byte	0
 4175 0055 0B       		.uleb128 0xb
 4176 0056 0B       		.uleb128 0xb
 4177 0057 49       		.uleb128 0x49
 4178 0058 13       		.uleb128 0x13
 4179 0059 00       		.byte	0
 4180 005a 00       		.byte	0
 4181 005b 08       		.uleb128 0x8
 4182 005c 26       		.uleb128 0x26
 4183 005d 00       		.byte	0
 4184 005e 49       		.uleb128 0x49
 4185 005f 13       		.uleb128 0x13
 4186 0060 00       		.byte	0
 4187 0061 00       		.byte	0
 4188 0062 09       		.uleb128 0x9
 4189 0063 15       		.uleb128 0x15
 4190 0064 01       		.byte	0x1
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 126


 4191 0065 27       		.uleb128 0x27
 4192 0066 19       		.uleb128 0x19
 4193 0067 49       		.uleb128 0x49
 4194 0068 13       		.uleb128 0x13
 4195 0069 01       		.uleb128 0x1
 4196 006a 13       		.uleb128 0x13
 4197 006b 00       		.byte	0
 4198 006c 00       		.byte	0
 4199 006d 0A       		.uleb128 0xa
 4200 006e 05       		.uleb128 0x5
 4201 006f 00       		.byte	0
 4202 0070 49       		.uleb128 0x49
 4203 0071 13       		.uleb128 0x13
 4204 0072 00       		.byte	0
 4205 0073 00       		.byte	0
 4206 0074 0B       		.uleb128 0xb
 4207 0075 15       		.uleb128 0x15
 4208 0076 01       		.byte	0x1
 4209 0077 27       		.uleb128 0x27
 4210 0078 19       		.uleb128 0x19
 4211 0079 01       		.uleb128 0x1
 4212 007a 13       		.uleb128 0x13
 4213 007b 00       		.byte	0
 4214 007c 00       		.byte	0
 4215 007d 0C       		.uleb128 0xc
 4216 007e 16       		.uleb128 0x16
 4217 007f 00       		.byte	0
 4218 0080 03       		.uleb128 0x3
 4219 0081 0E       		.uleb128 0xe
 4220 0082 3A       		.uleb128 0x3a
 4221 0083 0B       		.uleb128 0xb
 4222 0084 3B       		.uleb128 0x3b
 4223 0085 0B       		.uleb128 0xb
 4224 0086 49       		.uleb128 0x49
 4225 0087 13       		.uleb128 0x13
 4226 0088 00       		.byte	0
 4227 0089 00       		.byte	0
 4228 008a 0D       		.uleb128 0xd
 4229 008b 2E       		.uleb128 0x2e
 4230 008c 01       		.byte	0x1
 4231 008d 3F       		.uleb128 0x3f
 4232 008e 19       		.uleb128 0x19
 4233 008f 03       		.uleb128 0x3
 4234 0090 0E       		.uleb128 0xe
 4235 0091 3A       		.uleb128 0x3a
 4236 0092 0B       		.uleb128 0xb
 4237 0093 3B       		.uleb128 0x3b
 4238 0094 0B       		.uleb128 0xb
 4239 0095 27       		.uleb128 0x27
 4240 0096 19       		.uleb128 0x19
 4241 0097 11       		.uleb128 0x11
 4242 0098 01       		.uleb128 0x1
 4243 0099 12       		.uleb128 0x12
 4244 009a 06       		.uleb128 0x6
 4245 009b 40       		.uleb128 0x40
 4246 009c 18       		.uleb128 0x18
 4247 009d 9742     		.uleb128 0x2117
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 127


 4248 009f 19       		.uleb128 0x19
 4249 00a0 01       		.uleb128 0x1
 4250 00a1 13       		.uleb128 0x13
 4251 00a2 00       		.byte	0
 4252 00a3 00       		.byte	0
 4253 00a4 0E       		.uleb128 0xe
 4254 00a5 05       		.uleb128 0x5
 4255 00a6 00       		.byte	0
 4256 00a7 03       		.uleb128 0x3
 4257 00a8 0E       		.uleb128 0xe
 4258 00a9 3A       		.uleb128 0x3a
 4259 00aa 0B       		.uleb128 0xb
 4260 00ab 3B       		.uleb128 0x3b
 4261 00ac 0B       		.uleb128 0xb
 4262 00ad 49       		.uleb128 0x49
 4263 00ae 13       		.uleb128 0x13
 4264 00af 02       		.uleb128 0x2
 4265 00b0 17       		.uleb128 0x17
 4266 00b1 00       		.byte	0
 4267 00b2 00       		.byte	0
 4268 00b3 0F       		.uleb128 0xf
 4269 00b4 898201   		.uleb128 0x4109
 4270 00b7 01       		.byte	0x1
 4271 00b8 11       		.uleb128 0x11
 4272 00b9 01       		.uleb128 0x1
 4273 00ba 31       		.uleb128 0x31
 4274 00bb 13       		.uleb128 0x13
 4275 00bc 01       		.uleb128 0x1
 4276 00bd 13       		.uleb128 0x13
 4277 00be 00       		.byte	0
 4278 00bf 00       		.byte	0
 4279 00c0 10       		.uleb128 0x10
 4280 00c1 8A8201   		.uleb128 0x410a
 4281 00c4 00       		.byte	0
 4282 00c5 02       		.uleb128 0x2
 4283 00c6 18       		.uleb128 0x18
 4284 00c7 9142     		.uleb128 0x2111
 4285 00c9 18       		.uleb128 0x18
 4286 00ca 00       		.byte	0
 4287 00cb 00       		.byte	0
 4288 00cc 11       		.uleb128 0x11
 4289 00cd 898201   		.uleb128 0x4109
 4290 00d0 00       		.byte	0
 4291 00d1 11       		.uleb128 0x11
 4292 00d2 01       		.uleb128 0x1
 4293 00d3 31       		.uleb128 0x31
 4294 00d4 13       		.uleb128 0x13
 4295 00d5 00       		.byte	0
 4296 00d6 00       		.byte	0
 4297 00d7 12       		.uleb128 0x12
 4298 00d8 898201   		.uleb128 0x4109
 4299 00db 01       		.byte	0x1
 4300 00dc 11       		.uleb128 0x11
 4301 00dd 01       		.uleb128 0x1
 4302 00de 31       		.uleb128 0x31
 4303 00df 13       		.uleb128 0x13
 4304 00e0 00       		.byte	0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 128


 4305 00e1 00       		.byte	0
 4306 00e2 13       		.uleb128 0x13
 4307 00e3 34       		.uleb128 0x34
 4308 00e4 00       		.byte	0
 4309 00e5 03       		.uleb128 0x3
 4310 00e6 08       		.uleb128 0x8
 4311 00e7 3A       		.uleb128 0x3a
 4312 00e8 0B       		.uleb128 0xb
 4313 00e9 3B       		.uleb128 0x3b
 4314 00ea 05       		.uleb128 0x5
 4315 00eb 49       		.uleb128 0x49
 4316 00ec 13       		.uleb128 0x13
 4317 00ed 02       		.uleb128 0x2
 4318 00ee 17       		.uleb128 0x17
 4319 00ef 00       		.byte	0
 4320 00f0 00       		.byte	0
 4321 00f1 14       		.uleb128 0x14
 4322 00f2 2E       		.uleb128 0x2e
 4323 00f3 01       		.byte	0x1
 4324 00f4 3F       		.uleb128 0x3f
 4325 00f5 19       		.uleb128 0x19
 4326 00f6 03       		.uleb128 0x3
 4327 00f7 0E       		.uleb128 0xe
 4328 00f8 3A       		.uleb128 0x3a
 4329 00f9 0B       		.uleb128 0xb
 4330 00fa 3B       		.uleb128 0x3b
 4331 00fb 05       		.uleb128 0x5
 4332 00fc 27       		.uleb128 0x27
 4333 00fd 19       		.uleb128 0x19
 4334 00fe 11       		.uleb128 0x11
 4335 00ff 01       		.uleb128 0x1
 4336 0100 12       		.uleb128 0x12
 4337 0101 06       		.uleb128 0x6
 4338 0102 40       		.uleb128 0x40
 4339 0103 18       		.uleb128 0x18
 4340 0104 9742     		.uleb128 0x2117
 4341 0106 19       		.uleb128 0x19
 4342 0107 01       		.uleb128 0x1
 4343 0108 13       		.uleb128 0x13
 4344 0109 00       		.byte	0
 4345 010a 00       		.byte	0
 4346 010b 15       		.uleb128 0x15
 4347 010c 34       		.uleb128 0x34
 4348 010d 00       		.byte	0
 4349 010e 03       		.uleb128 0x3
 4350 010f 0E       		.uleb128 0xe
 4351 0110 3A       		.uleb128 0x3a
 4352 0111 0B       		.uleb128 0xb
 4353 0112 3B       		.uleb128 0x3b
 4354 0113 05       		.uleb128 0x5
 4355 0114 49       		.uleb128 0x49
 4356 0115 13       		.uleb128 0x13
 4357 0116 02       		.uleb128 0x2
 4358 0117 17       		.uleb128 0x17
 4359 0118 00       		.byte	0
 4360 0119 00       		.byte	0
 4361 011a 16       		.uleb128 0x16
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 129


 4362 011b 2E       		.uleb128 0x2e
 4363 011c 01       		.byte	0x1
 4364 011d 3F       		.uleb128 0x3f
 4365 011e 19       		.uleb128 0x19
 4366 011f 03       		.uleb128 0x3
 4367 0120 0E       		.uleb128 0xe
 4368 0121 3A       		.uleb128 0x3a
 4369 0122 0B       		.uleb128 0xb
 4370 0123 3B       		.uleb128 0x3b
 4371 0124 05       		.uleb128 0x5
 4372 0125 27       		.uleb128 0x27
 4373 0126 19       		.uleb128 0x19
 4374 0127 49       		.uleb128 0x49
 4375 0128 13       		.uleb128 0x13
 4376 0129 11       		.uleb128 0x11
 4377 012a 01       		.uleb128 0x1
 4378 012b 12       		.uleb128 0x12
 4379 012c 06       		.uleb128 0x6
 4380 012d 40       		.uleb128 0x40
 4381 012e 18       		.uleb128 0x18
 4382 012f 9742     		.uleb128 0x2117
 4383 0131 19       		.uleb128 0x19
 4384 0132 01       		.uleb128 0x1
 4385 0133 13       		.uleb128 0x13
 4386 0134 00       		.byte	0
 4387 0135 00       		.byte	0
 4388 0136 17       		.uleb128 0x17
 4389 0137 05       		.uleb128 0x5
 4390 0138 00       		.byte	0
 4391 0139 03       		.uleb128 0x3
 4392 013a 0E       		.uleb128 0xe
 4393 013b 3A       		.uleb128 0x3a
 4394 013c 0B       		.uleb128 0xb
 4395 013d 3B       		.uleb128 0x3b
 4396 013e 05       		.uleb128 0x5
 4397 013f 49       		.uleb128 0x49
 4398 0140 13       		.uleb128 0x13
 4399 0141 02       		.uleb128 0x2
 4400 0142 17       		.uleb128 0x17
 4401 0143 00       		.byte	0
 4402 0144 00       		.byte	0
 4403 0145 18       		.uleb128 0x18
 4404 0146 05       		.uleb128 0x5
 4405 0147 00       		.byte	0
 4406 0148 03       		.uleb128 0x3
 4407 0149 0E       		.uleb128 0xe
 4408 014a 3A       		.uleb128 0x3a
 4409 014b 0B       		.uleb128 0xb
 4410 014c 3B       		.uleb128 0x3b
 4411 014d 05       		.uleb128 0x5
 4412 014e 49       		.uleb128 0x49
 4413 014f 13       		.uleb128 0x13
 4414 0150 02       		.uleb128 0x2
 4415 0151 18       		.uleb128 0x18
 4416 0152 00       		.byte	0
 4417 0153 00       		.byte	0
 4418 0154 19       		.uleb128 0x19
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 130


 4419 0155 34       		.uleb128 0x34
 4420 0156 00       		.byte	0
 4421 0157 03       		.uleb128 0x3
 4422 0158 0E       		.uleb128 0xe
 4423 0159 3A       		.uleb128 0x3a
 4424 015a 0B       		.uleb128 0xb
 4425 015b 3B       		.uleb128 0x3b
 4426 015c 05       		.uleb128 0x5
 4427 015d 49       		.uleb128 0x49
 4428 015e 13       		.uleb128 0x13
 4429 015f 1C       		.uleb128 0x1c
 4430 0160 0B       		.uleb128 0xb
 4431 0161 00       		.byte	0
 4432 0162 00       		.byte	0
 4433 0163 1A       		.uleb128 0x1a
 4434 0164 34       		.uleb128 0x34
 4435 0165 00       		.byte	0
 4436 0166 03       		.uleb128 0x3
 4437 0167 0E       		.uleb128 0xe
 4438 0168 3A       		.uleb128 0x3a
 4439 0169 0B       		.uleb128 0xb
 4440 016a 3B       		.uleb128 0x3b
 4441 016b 05       		.uleb128 0x5
 4442 016c 49       		.uleb128 0x49
 4443 016d 13       		.uleb128 0x13
 4444 016e 02       		.uleb128 0x2
 4445 016f 18       		.uleb128 0x18
 4446 0170 00       		.byte	0
 4447 0171 00       		.byte	0
 4448 0172 1B       		.uleb128 0x1b
 4449 0173 01       		.uleb128 0x1
 4450 0174 01       		.byte	0x1
 4451 0175 49       		.uleb128 0x49
 4452 0176 13       		.uleb128 0x13
 4453 0177 01       		.uleb128 0x1
 4454 0178 13       		.uleb128 0x13
 4455 0179 00       		.byte	0
 4456 017a 00       		.byte	0
 4457 017b 1C       		.uleb128 0x1c
 4458 017c 21       		.uleb128 0x21
 4459 017d 00       		.byte	0
 4460 017e 49       		.uleb128 0x49
 4461 017f 13       		.uleb128 0x13
 4462 0180 2F       		.uleb128 0x2f
 4463 0181 0B       		.uleb128 0xb
 4464 0182 00       		.byte	0
 4465 0183 00       		.byte	0
 4466 0184 1D       		.uleb128 0x1d
 4467 0185 2E       		.uleb128 0x2e
 4468 0186 01       		.byte	0x1
 4469 0187 3F       		.uleb128 0x3f
 4470 0188 19       		.uleb128 0x19
 4471 0189 03       		.uleb128 0x3
 4472 018a 0E       		.uleb128 0xe
 4473 018b 3A       		.uleb128 0x3a
 4474 018c 0B       		.uleb128 0xb
 4475 018d 3B       		.uleb128 0x3b
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 131


 4476 018e 05       		.uleb128 0x5
 4477 018f 27       		.uleb128 0x27
 4478 0190 19       		.uleb128 0x19
 4479 0191 49       		.uleb128 0x49
 4480 0192 13       		.uleb128 0x13
 4481 0193 11       		.uleb128 0x11
 4482 0194 01       		.uleb128 0x1
 4483 0195 12       		.uleb128 0x12
 4484 0196 06       		.uleb128 0x6
 4485 0197 40       		.uleb128 0x40
 4486 0198 18       		.uleb128 0x18
 4487 0199 9642     		.uleb128 0x2116
 4488 019b 19       		.uleb128 0x19
 4489 019c 01       		.uleb128 0x1
 4490 019d 13       		.uleb128 0x13
 4491 019e 00       		.byte	0
 4492 019f 00       		.byte	0
 4493 01a0 1E       		.uleb128 0x1e
 4494 01a1 05       		.uleb128 0x5
 4495 01a2 00       		.byte	0
 4496 01a3 03       		.uleb128 0x3
 4497 01a4 08       		.uleb128 0x8
 4498 01a5 3A       		.uleb128 0x3a
 4499 01a6 0B       		.uleb128 0xb
 4500 01a7 3B       		.uleb128 0x3b
 4501 01a8 05       		.uleb128 0x5
 4502 01a9 49       		.uleb128 0x49
 4503 01aa 13       		.uleb128 0x13
 4504 01ab 02       		.uleb128 0x2
 4505 01ac 17       		.uleb128 0x17
 4506 01ad 00       		.byte	0
 4507 01ae 00       		.byte	0
 4508 01af 1F       		.uleb128 0x1f
 4509 01b0 05       		.uleb128 0x5
 4510 01b1 00       		.byte	0
 4511 01b2 03       		.uleb128 0x3
 4512 01b3 08       		.uleb128 0x8
 4513 01b4 3A       		.uleb128 0x3a
 4514 01b5 0B       		.uleb128 0xb
 4515 01b6 3B       		.uleb128 0x3b
 4516 01b7 05       		.uleb128 0x5
 4517 01b8 49       		.uleb128 0x49
 4518 01b9 13       		.uleb128 0x13
 4519 01ba 02       		.uleb128 0x2
 4520 01bb 18       		.uleb128 0x18
 4521 01bc 00       		.byte	0
 4522 01bd 00       		.byte	0
 4523 01be 20       		.uleb128 0x20
 4524 01bf 34       		.uleb128 0x34
 4525 01c0 00       		.byte	0
 4526 01c1 03       		.uleb128 0x3
 4527 01c2 08       		.uleb128 0x8
 4528 01c3 3A       		.uleb128 0x3a
 4529 01c4 0B       		.uleb128 0xb
 4530 01c5 3B       		.uleb128 0x3b
 4531 01c6 05       		.uleb128 0x5
 4532 01c7 49       		.uleb128 0x49
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 132


 4533 01c8 13       		.uleb128 0x13
 4534 01c9 00       		.byte	0
 4535 01ca 00       		.byte	0
 4536 01cb 21       		.uleb128 0x21
 4537 01cc 34       		.uleb128 0x34
 4538 01cd 00       		.byte	0
 4539 01ce 03       		.uleb128 0x3
 4540 01cf 0E       		.uleb128 0xe
 4541 01d0 3A       		.uleb128 0x3a
 4542 01d1 0B       		.uleb128 0xb
 4543 01d2 3B       		.uleb128 0x3b
 4544 01d3 05       		.uleb128 0x5
 4545 01d4 49       		.uleb128 0x49
 4546 01d5 13       		.uleb128 0x13
 4547 01d6 00       		.byte	0
 4548 01d7 00       		.byte	0
 4549 01d8 22       		.uleb128 0x22
 4550 01d9 2E       		.uleb128 0x2e
 4551 01da 00       		.byte	0
 4552 01db 3F       		.uleb128 0x3f
 4553 01dc 19       		.uleb128 0x19
 4554 01dd 03       		.uleb128 0x3
 4555 01de 0E       		.uleb128 0xe
 4556 01df 3A       		.uleb128 0x3a
 4557 01e0 0B       		.uleb128 0xb
 4558 01e1 3B       		.uleb128 0x3b
 4559 01e2 05       		.uleb128 0x5
 4560 01e3 27       		.uleb128 0x27
 4561 01e4 19       		.uleb128 0x19
 4562 01e5 11       		.uleb128 0x11
 4563 01e6 01       		.uleb128 0x1
 4564 01e7 12       		.uleb128 0x12
 4565 01e8 06       		.uleb128 0x6
 4566 01e9 40       		.uleb128 0x40
 4567 01ea 18       		.uleb128 0x18
 4568 01eb 9742     		.uleb128 0x2117
 4569 01ed 19       		.uleb128 0x19
 4570 01ee 00       		.byte	0
 4571 01ef 00       		.byte	0
 4572 01f0 23       		.uleb128 0x23
 4573 01f1 34       		.uleb128 0x34
 4574 01f2 00       		.byte	0
 4575 01f3 03       		.uleb128 0x3
 4576 01f4 0E       		.uleb128 0xe
 4577 01f5 3A       		.uleb128 0x3a
 4578 01f6 0B       		.uleb128 0xb
 4579 01f7 3B       		.uleb128 0x3b
 4580 01f8 0B       		.uleb128 0xb
 4581 01f9 49       		.uleb128 0x49
 4582 01fa 13       		.uleb128 0x13
 4583 01fb 1C       		.uleb128 0x1c
 4584 01fc 0A       		.uleb128 0xa
 4585 01fd 00       		.byte	0
 4586 01fe 00       		.byte	0
 4587 01ff 24       		.uleb128 0x24
 4588 0200 34       		.uleb128 0x34
 4589 0201 00       		.byte	0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 133


 4590 0202 03       		.uleb128 0x3
 4591 0203 0E       		.uleb128 0xe
 4592 0204 3A       		.uleb128 0x3a
 4593 0205 0B       		.uleb128 0xb
 4594 0206 3B       		.uleb128 0x3b
 4595 0207 0B       		.uleb128 0xb
 4596 0208 49       		.uleb128 0x49
 4597 0209 13       		.uleb128 0x13
 4598 020a 02       		.uleb128 0x2
 4599 020b 18       		.uleb128 0x18
 4600 020c 00       		.byte	0
 4601 020d 00       		.byte	0
 4602 020e 25       		.uleb128 0x25
 4603 020f 34       		.uleb128 0x34
 4604 0210 00       		.byte	0
 4605 0211 03       		.uleb128 0x3
 4606 0212 0E       		.uleb128 0xe
 4607 0213 3A       		.uleb128 0x3a
 4608 0214 0B       		.uleb128 0xb
 4609 0215 3B       		.uleb128 0x3b
 4610 0216 0B       		.uleb128 0xb
 4611 0217 49       		.uleb128 0x49
 4612 0218 13       		.uleb128 0x13
 4613 0219 3F       		.uleb128 0x3f
 4614 021a 19       		.uleb128 0x19
 4615 021b 3C       		.uleb128 0x3c
 4616 021c 19       		.uleb128 0x19
 4617 021d 00       		.byte	0
 4618 021e 00       		.byte	0
 4619 021f 26       		.uleb128 0x26
 4620 0220 34       		.uleb128 0x34
 4621 0221 00       		.byte	0
 4622 0222 03       		.uleb128 0x3
 4623 0223 0E       		.uleb128 0xe
 4624 0224 3A       		.uleb128 0x3a
 4625 0225 0B       		.uleb128 0xb
 4626 0226 3B       		.uleb128 0x3b
 4627 0227 0B       		.uleb128 0xb
 4628 0228 49       		.uleb128 0x49
 4629 0229 13       		.uleb128 0x13
 4630 022a 3F       		.uleb128 0x3f
 4631 022b 19       		.uleb128 0x19
 4632 022c 02       		.uleb128 0x2
 4633 022d 18       		.uleb128 0x18
 4634 022e 00       		.byte	0
 4635 022f 00       		.byte	0
 4636 0230 27       		.uleb128 0x27
 4637 0231 2E       		.uleb128 0x2e
 4638 0232 00       		.byte	0
 4639 0233 3F       		.uleb128 0x3f
 4640 0234 19       		.uleb128 0x19
 4641 0235 3C       		.uleb128 0x3c
 4642 0236 19       		.uleb128 0x19
 4643 0237 6E       		.uleb128 0x6e
 4644 0238 0E       		.uleb128 0xe
 4645 0239 03       		.uleb128 0x3
 4646 023a 0E       		.uleb128 0xe
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 134


 4647 023b 3A       		.uleb128 0x3a
 4648 023c 0B       		.uleb128 0xb
 4649 023d 3B       		.uleb128 0x3b
 4650 023e 0B       		.uleb128 0xb
 4651 023f 00       		.byte	0
 4652 0240 00       		.byte	0
 4653 0241 00       		.byte	0
 4654              		.section	.debug_loc,"",%progbits
 4655              	.Ldebug_loc0:
 4656              	.LLST0:
 4657 0000 00000000 		.4byte	.LVL0
 4658 0004 0E000000 		.4byte	.LVL1
 4659 0008 0100     		.2byte	0x1
 4660 000a 50       		.byte	0x50
 4661 000b 0E000000 		.4byte	.LVL1
 4662 000f 28000000 		.4byte	.LFE32
 4663 0013 0400     		.2byte	0x4
 4664 0015 F3       		.byte	0xf3
 4665 0016 01       		.uleb128 0x1
 4666 0017 50       		.byte	0x50
 4667 0018 9F       		.byte	0x9f
 4668 0019 00000000 		.4byte	0
 4669 001d 00000000 		.4byte	0
 4670              	.LLST1:
 4671 0021 00000000 		.4byte	.LVL2
 4672 0025 07000000 		.4byte	.LVL3-1
 4673 0029 0100     		.2byte	0x1
 4674 002b 50       		.byte	0x50
 4675 002c 07000000 		.4byte	.LVL3-1
 4676 0030 16000000 		.4byte	.LVL6
 4677 0034 0100     		.2byte	0x1
 4678 0036 54       		.byte	0x54
 4679 0037 16000000 		.4byte	.LVL6
 4680 003b 18000000 		.4byte	.LFE33
 4681 003f 0400     		.2byte	0x4
 4682 0041 F3       		.byte	0xf3
 4683 0042 01       		.uleb128 0x1
 4684 0043 50       		.byte	0x50
 4685 0044 9F       		.byte	0x9f
 4686 0045 00000000 		.4byte	0
 4687 0049 00000000 		.4byte	0
 4688              	.LLST2:
 4689 004d 02000000 		.4byte	.LVL7
 4690 0051 06000000 		.4byte	.LVL8
 4691 0055 0200     		.2byte	0x2
 4692 0057 30       		.byte	0x30
 4693 0058 9F       		.byte	0x9f
 4694 0059 06000000 		.4byte	.LVL8
 4695 005d 12000000 		.4byte	.LVL11
 4696 0061 0100     		.2byte	0x1
 4697 0063 54       		.byte	0x54
 4698 0064 00000000 		.4byte	0
 4699 0068 00000000 		.4byte	0
 4700              	.LLST3:
 4701 006c 12000000 		.4byte	.LVL14
 4702 0070 2A000000 		.4byte	.LVL19
 4703 0074 0100     		.2byte	0x1
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 135


 4704 0076 54       		.byte	0x54
 4705 0077 00000000 		.4byte	0
 4706 007b 00000000 		.4byte	0
 4707              	.LLST4:
 4708 007f 1A000000 		.4byte	.LVL15
 4709 0083 20000000 		.4byte	.LVL16
 4710 0087 0100     		.2byte	0x1
 4711 0089 50       		.byte	0x50
 4712 008a 00000000 		.4byte	0
 4713 008e 00000000 		.4byte	0
 4714              	.LLST5:
 4715 0092 00000000 		.4byte	.LVL20
 4716 0096 02000000 		.4byte	.LVL21
 4717 009a 0100     		.2byte	0x1
 4718 009c 50       		.byte	0x50
 4719 009d 02000000 		.4byte	.LVL21
 4720 00a1 0C000000 		.4byte	.LFE40
 4721 00a5 0400     		.2byte	0x4
 4722 00a7 F3       		.byte	0xf3
 4723 00a8 01       		.uleb128 0x1
 4724 00a9 50       		.byte	0x50
 4725 00aa 9F       		.byte	0x9f
 4726 00ab 00000000 		.4byte	0
 4727 00af 00000000 		.4byte	0
 4728              	.LLST6:
 4729 00b3 00000000 		.4byte	.LVL22
 4730 00b7 02000000 		.4byte	.LVL23
 4731 00bb 0100     		.2byte	0x1
 4732 00bd 50       		.byte	0x50
 4733 00be 02000000 		.4byte	.LVL23
 4734 00c2 0C000000 		.4byte	.LFE41
 4735 00c6 0400     		.2byte	0x4
 4736 00c8 F3       		.byte	0xf3
 4737 00c9 01       		.uleb128 0x1
 4738 00ca 50       		.byte	0x50
 4739 00cb 9F       		.byte	0x9f
 4740 00cc 00000000 		.4byte	0
 4741 00d0 00000000 		.4byte	0
 4742              	.LLST7:
 4743 00d4 00000000 		.4byte	.LVL24
 4744 00d8 04000000 		.4byte	.LVL25
 4745 00dc 0100     		.2byte	0x1
 4746 00de 50       		.byte	0x50
 4747 00df 04000000 		.4byte	.LVL25
 4748 00e3 10000000 		.4byte	.LFE42
 4749 00e7 0400     		.2byte	0x4
 4750 00e9 F3       		.byte	0xf3
 4751 00ea 01       		.uleb128 0x1
 4752 00eb 50       		.byte	0x50
 4753 00ec 9F       		.byte	0x9f
 4754 00ed 00000000 		.4byte	0
 4755 00f1 00000000 		.4byte	0
 4756              	.LLST8:
 4757 00f5 00000000 		.4byte	.LVL26
 4758 00f9 04000000 		.4byte	.LVL27
 4759 00fd 0100     		.2byte	0x1
 4760 00ff 50       		.byte	0x50
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 136


 4761 0100 04000000 		.4byte	.LVL27
 4762 0104 10000000 		.4byte	.LFE43
 4763 0108 0400     		.2byte	0x4
 4764 010a F3       		.byte	0xf3
 4765 010b 01       		.uleb128 0x1
 4766 010c 50       		.byte	0x50
 4767 010d 9F       		.byte	0x9f
 4768 010e 00000000 		.4byte	0
 4769 0112 00000000 		.4byte	0
 4770              	.LLST9:
 4771 0116 00000000 		.4byte	.LVL28
 4772 011a 04000000 		.4byte	.LVL29
 4773 011e 0100     		.2byte	0x1
 4774 0120 50       		.byte	0x50
 4775 0121 04000000 		.4byte	.LVL29
 4776 0125 0C000000 		.4byte	.LFE44
 4777 0129 0400     		.2byte	0x4
 4778 012b F3       		.byte	0xf3
 4779 012c 01       		.uleb128 0x1
 4780 012d 50       		.byte	0x50
 4781 012e 9F       		.byte	0x9f
 4782 012f 00000000 		.4byte	0
 4783 0133 00000000 		.4byte	0
 4784              	.LLST10:
 4785 0137 00000000 		.4byte	.LVL30
 4786 013b 04000000 		.4byte	.LVL31
 4787 013f 0100     		.2byte	0x1
 4788 0141 50       		.byte	0x50
 4789 0142 04000000 		.4byte	.LVL31
 4790 0146 0C000000 		.4byte	.LFE45
 4791 014a 0400     		.2byte	0x4
 4792 014c F3       		.byte	0xf3
 4793 014d 01       		.uleb128 0x1
 4794 014e 50       		.byte	0x50
 4795 014f 9F       		.byte	0x9f
 4796 0150 00000000 		.4byte	0
 4797 0154 00000000 		.4byte	0
 4798              	.LLST11:
 4799 0158 00000000 		.4byte	.LVL32
 4800 015c 04000000 		.4byte	.LVL33
 4801 0160 0100     		.2byte	0x1
 4802 0162 50       		.byte	0x50
 4803 0163 04000000 		.4byte	.LVL33
 4804 0167 0C000000 		.4byte	.LFE46
 4805 016b 0400     		.2byte	0x4
 4806 016d F3       		.byte	0xf3
 4807 016e 01       		.uleb128 0x1
 4808 016f 50       		.byte	0x50
 4809 0170 9F       		.byte	0x9f
 4810 0171 00000000 		.4byte	0
 4811 0175 00000000 		.4byte	0
 4812              	.LLST12:
 4813 0179 00000000 		.4byte	.LVL34
 4814 017d 04000000 		.4byte	.LVL35
 4815 0181 0100     		.2byte	0x1
 4816 0183 50       		.byte	0x50
 4817 0184 04000000 		.4byte	.LVL35
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 137


 4818 0188 0C000000 		.4byte	.LFE47
 4819 018c 0400     		.2byte	0x4
 4820 018e F3       		.byte	0xf3
 4821 018f 01       		.uleb128 0x1
 4822 0190 50       		.byte	0x50
 4823 0191 9F       		.byte	0x9f
 4824 0192 00000000 		.4byte	0
 4825 0196 00000000 		.4byte	0
 4826              	.LLST13:
 4827 019a 00000000 		.4byte	.LVL41
 4828 019e 04000000 		.4byte	.LVL42
 4829 01a2 0100     		.2byte	0x1
 4830 01a4 50       		.byte	0x50
 4831 01a5 04000000 		.4byte	.LVL42
 4832 01a9 0C000000 		.4byte	.LFE53
 4833 01ad 0400     		.2byte	0x4
 4834 01af F3       		.byte	0xf3
 4835 01b0 01       		.uleb128 0x1
 4836 01b1 50       		.byte	0x50
 4837 01b2 9F       		.byte	0x9f
 4838 01b3 00000000 		.4byte	0
 4839 01b7 00000000 		.4byte	0
 4840              	.LLST14:
 4841 01bb 00000000 		.4byte	.LVL43
 4842 01bf 16000000 		.4byte	.LVL48
 4843 01c3 0100     		.2byte	0x1
 4844 01c5 50       		.byte	0x50
 4845 01c6 16000000 		.4byte	.LVL48
 4846 01ca 8C000000 		.4byte	.LVL57
 4847 01ce 0100     		.2byte	0x1
 4848 01d0 54       		.byte	0x54
 4849 01d1 8C000000 		.4byte	.LVL57
 4850 01d5 A4000000 		.4byte	.LFE54
 4851 01d9 0400     		.2byte	0x4
 4852 01db F3       		.byte	0xf3
 4853 01dc 01       		.uleb128 0x1
 4854 01dd 50       		.byte	0x50
 4855 01de 9F       		.byte	0x9f
 4856 01df 00000000 		.4byte	0
 4857 01e3 00000000 		.4byte	0
 4858              	.LLST15:
 4859 01e7 08000000 		.4byte	.LVL44
 4860 01eb 1A000000 		.4byte	.LVL49
 4861 01ef 0100     		.2byte	0x1
 4862 01f1 53       		.byte	0x53
 4863 01f2 00000000 		.4byte	0
 4864 01f6 00000000 		.4byte	0
 4865              	.LLST16:
 4866 01fa 14000000 		.4byte	.LVL47
 4867 01fe 8C000000 		.4byte	.LVL59
 4868 0202 0100     		.2byte	0x1
 4869 0204 57       		.byte	0x57
 4870 0205 00000000 		.4byte	0
 4871 0209 00000000 		.4byte	0
 4872              	.LLST17:
 4873 020d 0C000000 		.4byte	.LVL45
 4874 0211 8C000000 		.4byte	.LVL58
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 138


 4875 0215 0100     		.2byte	0x1
 4876 0217 56       		.byte	0x56
 4877 0218 00000000 		.4byte	0
 4878 021c 00000000 		.4byte	0
 4879              	.LLST18:
 4880 0220 10000000 		.4byte	.LVL46
 4881 0224 32000000 		.4byte	.LVL51
 4882 0228 0100     		.2byte	0x1
 4883 022a 55       		.byte	0x55
 4884 022b 4A000000 		.4byte	.LVL53
 4885 022f 54000000 		.4byte	.LVL54
 4886 0233 0100     		.2byte	0x1
 4887 0235 55       		.byte	0x55
 4888 0236 00000000 		.4byte	0
 4889 023a 00000000 		.4byte	0
 4890              	.LLST19:
 4891 023e 00000000 		.4byte	.LVL60
 4892 0242 06000000 		.4byte	.LVL62
 4893 0246 0100     		.2byte	0x1
 4894 0248 50       		.byte	0x50
 4895 0249 06000000 		.4byte	.LVL62
 4896 024d 1C000000 		.4byte	.LFE55
 4897 0251 0400     		.2byte	0x4
 4898 0253 F3       		.byte	0xf3
 4899 0254 01       		.uleb128 0x1
 4900 0255 50       		.byte	0x50
 4901 0256 9F       		.byte	0x9f
 4902 0257 00000000 		.4byte	0
 4903 025b 00000000 		.4byte	0
 4904              	.LLST20:
 4905 025f 02000000 		.4byte	.LVL61
 4906 0263 06000000 		.4byte	.LVL62
 4907 0267 0200     		.2byte	0x2
 4908 0269 30       		.byte	0x30
 4909 026a 9F       		.byte	0x9f
 4910 026b 06000000 		.4byte	.LVL62
 4911 026f 1A000000 		.4byte	.LVL66
 4912 0273 0100     		.2byte	0x1
 4913 0275 54       		.byte	0x54
 4914 0276 00000000 		.4byte	0
 4915 027a 00000000 		.4byte	0
 4916              	.LLST21:
 4917 027e 02000000 		.4byte	.LVL61
 4918 0282 06000000 		.4byte	.LVL62
 4919 0286 0200     		.2byte	0x2
 4920 0288 30       		.byte	0x30
 4921 0289 9F       		.byte	0x9f
 4922 028a 06000000 		.4byte	.LVL62
 4923 028e 1A000000 		.4byte	.LVL67
 4924 0292 0100     		.2byte	0x1
 4925 0294 55       		.byte	0x55
 4926 0295 1A000000 		.4byte	.LVL67
 4927 0299 1C000000 		.4byte	.LFE55
 4928 029d 0100     		.2byte	0x1
 4929 029f 50       		.byte	0x50
 4930 02a0 00000000 		.4byte	0
 4931 02a4 00000000 		.4byte	0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 139


 4932              	.LLST22:
 4933 02a8 02000000 		.4byte	.LVL68
 4934 02ac 08000000 		.4byte	.LVL69
 4935 02b0 0200     		.2byte	0x2
 4936 02b2 30       		.byte	0x30
 4937 02b3 9F       		.byte	0x9f
 4938 02b4 08000000 		.4byte	.LVL69
 4939 02b8 1C000000 		.4byte	.LVL73
 4940 02bc 0100     		.2byte	0x1
 4941 02be 54       		.byte	0x54
 4942 02bf 00000000 		.4byte	0
 4943 02c3 00000000 		.4byte	0
 4944              	.LLST23:
 4945 02c7 02000000 		.4byte	.LVL68
 4946 02cb 08000000 		.4byte	.LVL69
 4947 02cf 0200     		.2byte	0x2
 4948 02d1 30       		.byte	0x30
 4949 02d2 9F       		.byte	0x9f
 4950 02d3 08000000 		.4byte	.LVL69
 4951 02d7 1C000000 		.4byte	.LVL74
 4952 02db 0100     		.2byte	0x1
 4953 02dd 55       		.byte	0x55
 4954 02de 1C000000 		.4byte	.LVL74
 4955 02e2 1E000000 		.4byte	.LFE56
 4956 02e6 0100     		.2byte	0x1
 4957 02e8 50       		.byte	0x50
 4958 02e9 00000000 		.4byte	0
 4959 02ed 00000000 		.4byte	0
 4960              	.LLST24:
 4961 02f1 00000000 		.4byte	.LVL75
 4962 02f5 04000000 		.4byte	.LVL77
 4963 02f9 0100     		.2byte	0x1
 4964 02fb 50       		.byte	0x50
 4965 02fc 04000000 		.4byte	.LVL77
 4966 0300 1C000000 		.4byte	.LFE57
 4967 0304 0400     		.2byte	0x4
 4968 0306 F3       		.byte	0xf3
 4969 0307 01       		.uleb128 0x1
 4970 0308 50       		.byte	0x50
 4971 0309 9F       		.byte	0x9f
 4972 030a 00000000 		.4byte	0
 4973 030e 00000000 		.4byte	0
 4974              	.LLST25:
 4975 0312 02000000 		.4byte	.LVL76
 4976 0316 04000000 		.4byte	.LVL77
 4977 031a 0200     		.2byte	0x2
 4978 031c 30       		.byte	0x30
 4979 031d 9F       		.byte	0x9f
 4980 031e 04000000 		.4byte	.LVL77
 4981 0322 10000000 		.4byte	.LVL79
 4982 0326 0100     		.2byte	0x1
 4983 0328 54       		.byte	0x54
 4984 0329 12000000 		.4byte	.LVL80
 4985 032d 16000000 		.4byte	.LVL81
 4986 0331 0100     		.2byte	0x1
 4987 0333 54       		.byte	0x54
 4988 0334 00000000 		.4byte	0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 140


 4989 0338 00000000 		.4byte	0
 4990              	.LLST26:
 4991 033c 00000000 		.4byte	.LVL82
 4992 0340 04000000 		.4byte	.LVL84
 4993 0344 0100     		.2byte	0x1
 4994 0346 50       		.byte	0x50
 4995 0347 04000000 		.4byte	.LVL84
 4996 034b 1C000000 		.4byte	.LFE58
 4997 034f 0400     		.2byte	0x4
 4998 0351 F3       		.byte	0xf3
 4999 0352 01       		.uleb128 0x1
 5000 0353 50       		.byte	0x50
 5001 0354 9F       		.byte	0x9f
 5002 0355 00000000 		.4byte	0
 5003 0359 00000000 		.4byte	0
 5004              	.LLST27:
 5005 035d 02000000 		.4byte	.LVL83
 5006 0361 04000000 		.4byte	.LVL84
 5007 0365 0200     		.2byte	0x2
 5008 0367 30       		.byte	0x30
 5009 0368 9F       		.byte	0x9f
 5010 0369 04000000 		.4byte	.LVL84
 5011 036d 10000000 		.4byte	.LVL86
 5012 0371 0100     		.2byte	0x1
 5013 0373 54       		.byte	0x54
 5014 0374 12000000 		.4byte	.LVL87
 5015 0378 16000000 		.4byte	.LVL88
 5016 037c 0100     		.2byte	0x1
 5017 037e 54       		.byte	0x54
 5018 037f 00000000 		.4byte	0
 5019 0383 00000000 		.4byte	0
 5020              	.LLST28:
 5021 0387 00000000 		.4byte	.LVL89
 5022 038b 0C000000 		.4byte	.LVL92
 5023 038f 0100     		.2byte	0x1
 5024 0391 50       		.byte	0x50
 5025 0392 0C000000 		.4byte	.LVL92
 5026 0396 2C000000 		.4byte	.LFE59
 5027 039a 0400     		.2byte	0x4
 5028 039c F3       		.byte	0xf3
 5029 039d 01       		.uleb128 0x1
 5030 039e 50       		.byte	0x50
 5031 039f 9F       		.byte	0x9f
 5032 03a0 00000000 		.4byte	0
 5033 03a4 00000000 		.4byte	0
 5034              	.LLST29:
 5035 03a8 08000000 		.4byte	.LVL91
 5036 03ac 10000000 		.4byte	.LVL93
 5037 03b0 0200     		.2byte	0x2
 5038 03b2 30       		.byte	0x30
 5039 03b3 9F       		.byte	0x9f
 5040 03b4 10000000 		.4byte	.LVL93
 5041 03b8 20000000 		.4byte	.LVL96
 5042 03bc 0100     		.2byte	0x1
 5043 03be 53       		.byte	0x53
 5044 03bf 22000000 		.4byte	.LVL97
 5045 03c3 2C000000 		.4byte	.LFE59
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 141


 5046 03c7 0100     		.2byte	0x1
 5047 03c9 53       		.byte	0x53
 5048 03ca 00000000 		.4byte	0
 5049 03ce 00000000 		.4byte	0
 5050              	.LLST30:
 5051 03d2 02000000 		.4byte	.LVL90
 5052 03d6 10000000 		.4byte	.LVL93
 5053 03da 0300     		.2byte	0x3
 5054 03dc 09       		.byte	0x9
 5055 03dd FF       		.byte	0xff
 5056 03de 9F       		.byte	0x9f
 5057 03df 10000000 		.4byte	.LVL93
 5058 03e3 2C000000 		.4byte	.LFE59
 5059 03e7 0100     		.2byte	0x1
 5060 03e9 50       		.byte	0x50
 5061 03ea 00000000 		.4byte	0
 5062 03ee 00000000 		.4byte	0
 5063              	.LLST31:
 5064 03f2 02000000 		.4byte	.LVL90
 5065 03f6 10000000 		.4byte	.LVL93
 5066 03fa 0200     		.2byte	0x2
 5067 03fc 30       		.byte	0x30
 5068 03fd 9F       		.byte	0x9f
 5069 03fe 10000000 		.4byte	.LVL93
 5070 0402 1C000000 		.4byte	.LVL94
 5071 0406 0100     		.2byte	0x1
 5072 0408 56       		.byte	0x56
 5073 0409 1E000000 		.4byte	.LVL95
 5074 040d 26000000 		.4byte	.LVL99
 5075 0411 0100     		.2byte	0x1
 5076 0413 56       		.byte	0x56
 5077 0414 00000000 		.4byte	0
 5078 0418 00000000 		.4byte	0
 5079              	.LLST32:
 5080 041c 08000000 		.4byte	.LVL91
 5081 0420 26000000 		.4byte	.LVL98
 5082 0424 0100     		.2byte	0x1
 5083 0426 55       		.byte	0x55
 5084 0427 00000000 		.4byte	0
 5085 042b 00000000 		.4byte	0
 5086              	.LLST33:
 5087 042f 00000000 		.4byte	.LVL100
 5088 0433 0E000000 		.4byte	.LVL102
 5089 0437 0100     		.2byte	0x1
 5090 0439 50       		.byte	0x50
 5091 043a 0E000000 		.4byte	.LVL102
 5092 043e E4000000 		.4byte	.LFE60
 5093 0442 0400     		.2byte	0x4
 5094 0444 F3       		.byte	0xf3
 5095 0445 01       		.uleb128 0x1
 5096 0446 50       		.byte	0x50
 5097 0447 9F       		.byte	0x9f
 5098 0448 00000000 		.4byte	0
 5099 044c 00000000 		.4byte	0
 5100              	.LLST34:
 5101 0450 00000000 		.4byte	.LVL100
 5102 0454 14000000 		.4byte	.LVL104
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 142


 5103 0458 0100     		.2byte	0x1
 5104 045a 51       		.byte	0x51
 5105 045b 14000000 		.4byte	.LVL104
 5106 045f E4000000 		.4byte	.LFE60
 5107 0463 0400     		.2byte	0x4
 5108 0465 F3       		.byte	0xf3
 5109 0466 01       		.uleb128 0x1
 5110 0467 51       		.byte	0x51
 5111 0468 9F       		.byte	0x9f
 5112 0469 00000000 		.4byte	0
 5113 046d 00000000 		.4byte	0
 5114              	.LLST35:
 5115 0471 00000000 		.4byte	.LVL100
 5116 0475 2E000000 		.4byte	.LVL109
 5117 0479 0100     		.2byte	0x1
 5118 047b 52       		.byte	0x52
 5119 047c 2E000000 		.4byte	.LVL109
 5120 0480 E4000000 		.4byte	.LFE60
 5121 0484 0400     		.2byte	0x4
 5122 0486 F3       		.byte	0xf3
 5123 0487 01       		.uleb128 0x1
 5124 0488 52       		.byte	0x52
 5125 0489 9F       		.byte	0x9f
 5126 048a 00000000 		.4byte	0
 5127 048e 00000000 		.4byte	0
 5128              	.LLST36:
 5129 0492 00000000 		.4byte	.LVL100
 5130 0496 0C000000 		.4byte	.LVL101
 5131 049a 0100     		.2byte	0x1
 5132 049c 53       		.byte	0x53
 5133 049d 0C000000 		.4byte	.LVL101
 5134 04a1 E4000000 		.4byte	.LFE60
 5135 04a5 0400     		.2byte	0x4
 5136 04a7 F3       		.byte	0xf3
 5137 04a8 01       		.uleb128 0x1
 5138 04a9 53       		.byte	0x53
 5139 04aa 9F       		.byte	0x9f
 5140 04ab 00000000 		.4byte	0
 5141 04af 00000000 		.4byte	0
 5142              	.LLST37:
 5143 04b3 00000000 		.4byte	.LVL100
 5144 04b7 0C000000 		.4byte	.LVL101
 5145 04bb 0200     		.2byte	0x2
 5146 04bd 91       		.byte	0x91
 5147 04be 00       		.sleb128 0
 5148 04bf 0C000000 		.4byte	.LVL101
 5149 04c3 10000000 		.4byte	.LVL103
 5150 04c7 0200     		.2byte	0x2
 5151 04c9 73       		.byte	0x73
 5152 04ca 00       		.sleb128 0
 5153 04cb 10000000 		.4byte	.LVL103
 5154 04cf E4000000 		.4byte	.LFE60
 5155 04d3 0200     		.2byte	0x2
 5156 04d5 91       		.byte	0x91
 5157 04d6 00       		.sleb128 0
 5158 04d7 00000000 		.4byte	0
 5159 04db 00000000 		.4byte	0
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 143


 5160              	.LLST38:
 5161 04df 14000000 		.4byte	.LVL104
 5162 04e3 1C000000 		.4byte	.LVL105
 5163 04e7 0200     		.2byte	0x2
 5164 04e9 30       		.byte	0x30
 5165 04ea 9F       		.byte	0x9f
 5166 04eb 1C000000 		.4byte	.LVL105
 5167 04ef 1E000000 		.4byte	.LVL106
 5168 04f3 0100     		.2byte	0x1
 5169 04f5 56       		.byte	0x56
 5170 04f6 1E000000 		.4byte	.LVL106
 5171 04fa 20000000 		.4byte	.LVL107
 5172 04fe 0200     		.2byte	0x2
 5173 0500 30       		.byte	0x30
 5174 0501 9F       		.byte	0x9f
 5175 0502 20000000 		.4byte	.LVL107
 5176 0506 38000000 		.4byte	.LVL110
 5177 050a 0100     		.2byte	0x1
 5178 050c 56       		.byte	0x56
 5179 050d 44000000 		.4byte	.LVL111
 5180 0511 5E000000 		.4byte	.LVL114
 5181 0515 0100     		.2byte	0x1
 5182 0517 56       		.byte	0x56
 5183 0518 00000000 		.4byte	0
 5184 051c 00000000 		.4byte	0
 5185              	.LLST39:
 5186 0520 24000000 		.4byte	.LVL108
 5187 0524 CC000000 		.4byte	.LVL121
 5188 0528 0100     		.2byte	0x1
 5189 052a 55       		.byte	0x55
 5190 052b 00000000 		.4byte	0
 5191 052f 00000000 		.4byte	0
 5192              	.LLST40:
 5193 0533 B8000000 		.4byte	.LVL116
 5194 0537 BE000000 		.4byte	.LVL118
 5195 053b 0100     		.2byte	0x1
 5196 053d 50       		.byte	0x50
 5197 053e BE000000 		.4byte	.LVL118
 5198 0542 C1000000 		.4byte	.LVL119-1
 5199 0546 0E00     		.2byte	0xe
 5200 0548 72       		.byte	0x72
 5201 0549 00       		.sleb128 0
 5202 054a 03       		.byte	0x3
 5203 054b 34000000 		.4byte	CapSense_centroid.5541
 5204 054f 94       		.byte	0x94
 5205 0550 01       		.byte	0x1
 5206 0551 08       		.byte	0x8
 5207 0552 FF       		.byte	0xff
 5208 0553 1A       		.byte	0x1a
 5209 0554 1C       		.byte	0x1c
 5210 0555 9F       		.byte	0x9f
 5211 0556 00000000 		.4byte	0
 5212 055a 00000000 		.4byte	0
 5213              	.LLST41:
 5214 055e BC000000 		.4byte	.LVL117
 5215 0562 C1000000 		.4byte	.LVL119-1
 5216 0566 0100     		.2byte	0x1
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 144


 5217 0568 51       		.byte	0x51
 5218 0569 C6000000 		.4byte	.LVL120
 5219 056d D6000000 		.4byte	.LVL123
 5220 0571 0100     		.2byte	0x1
 5221 0573 50       		.byte	0x50
 5222 0574 D6000000 		.4byte	.LVL123
 5223 0578 D8000000 		.4byte	.LVL124
 5224 057c 0500     		.2byte	0x5
 5225 057e 70       		.byte	0x70
 5226 057f 80827E   		.sleb128 -32512
 5227 0582 9F       		.byte	0x9f
 5228 0583 00000000 		.4byte	0
 5229 0587 00000000 		.4byte	0
 5230              	.LLST42:
 5231 058b 14000000 		.4byte	.LVL104
 5232 058f 4E000000 		.4byte	.LVL112
 5233 0593 0100     		.2byte	0x1
 5234 0595 51       		.byte	0x51
 5235 0596 5C000000 		.4byte	.LVL113
 5236 059a 6A000000 		.4byte	.LVL115
 5237 059e 0100     		.2byte	0x1
 5238 05a0 51       		.byte	0x51
 5239 05a1 00000000 		.4byte	0
 5240 05a5 00000000 		.4byte	0
 5241              	.LLST43:
 5242 05a9 00000000 		.4byte	.LVL126
 5243 05ad 0E000000 		.4byte	.LVL128
 5244 05b1 0100     		.2byte	0x1
 5245 05b3 50       		.byte	0x50
 5246 05b4 0E000000 		.4byte	.LVL128
 5247 05b8 2E000000 		.4byte	.LVL134
 5248 05bc 0100     		.2byte	0x1
 5249 05be 54       		.byte	0x54
 5250 05bf 2E000000 		.4byte	.LVL134
 5251 05c3 40000000 		.4byte	.LFE62
 5252 05c7 0400     		.2byte	0x4
 5253 05c9 F3       		.byte	0xf3
 5254 05ca 01       		.uleb128 0x1
 5255 05cb 50       		.byte	0x50
 5256 05cc 9F       		.byte	0x9f
 5257 05cd 00000000 		.4byte	0
 5258 05d1 00000000 		.4byte	0
 5259              	.LLST44:
 5260 05d5 12000000 		.4byte	.LVL129
 5261 05d9 25000000 		.4byte	.LVL130-1
 5262 05dd 0100     		.2byte	0x1
 5263 05df 50       		.byte	0x50
 5264 05e0 2A000000 		.4byte	.LVL132
 5265 05e4 2C000000 		.4byte	.LVL133
 5266 05e8 0100     		.2byte	0x1
 5267 05ea 50       		.byte	0x50
 5268 05eb 00000000 		.4byte	0
 5269 05ef 00000000 		.4byte	0
 5270              	.LLST45:
 5271 05f3 28000000 		.4byte	.LVL131
 5272 05f7 2A000000 		.4byte	.LVL132
 5273 05fb 0100     		.2byte	0x1
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 145


 5274 05fd 50       		.byte	0x50
 5275 05fe 2C000000 		.4byte	.LVL133
 5276 0602 40000000 		.4byte	.LFE62
 5277 0606 0100     		.2byte	0x1
 5278 0608 50       		.byte	0x50
 5279 0609 00000000 		.4byte	0
 5280 060d 00000000 		.4byte	0
 5281              	.LLST46:
 5282 0611 00000000 		.4byte	.LVL135
 5283 0615 08000000 		.4byte	.LVL136
 5284 0619 0100     		.2byte	0x1
 5285 061b 50       		.byte	0x50
 5286 061c 08000000 		.4byte	.LVL136
 5287 0620 0A000000 		.4byte	.LVL137
 5288 0624 0400     		.2byte	0x4
 5289 0626 F3       		.byte	0xf3
 5290 0627 01       		.uleb128 0x1
 5291 0628 50       		.byte	0x50
 5292 0629 9F       		.byte	0x9f
 5293 062a 0A000000 		.4byte	.LVL137
 5294 062e 1A000000 		.4byte	.LVL139
 5295 0632 0100     		.2byte	0x1
 5296 0634 50       		.byte	0x50
 5297 0635 00000000 		.4byte	0
 5298 0639 00000000 		.4byte	0
 5299              	.LLST47:
 5300 063d 00000000 		.4byte	.LVL135
 5301 0641 0A000000 		.4byte	.LVL137
 5302 0645 0100     		.2byte	0x1
 5303 0647 51       		.byte	0x51
 5304 0648 0A000000 		.4byte	.LVL137
 5305 064c 1C000000 		.4byte	.LFE63
 5306 0650 0100     		.2byte	0x1
 5307 0652 51       		.byte	0x51
 5308 0653 00000000 		.4byte	0
 5309 0657 00000000 		.4byte	0
 5310              	.LLST48:
 5311 065b 00000000 		.4byte	.LVL140
 5312 065f 02000000 		.4byte	.LVL141
 5313 0663 0100     		.2byte	0x1
 5314 0665 50       		.byte	0x50
 5315 0666 02000000 		.4byte	.LVL141
 5316 066a 0C000000 		.4byte	.LFE64
 5317 066e 0400     		.2byte	0x4
 5318 0670 F3       		.byte	0xf3
 5319 0671 01       		.uleb128 0x1
 5320 0672 50       		.byte	0x50
 5321 0673 9F       		.byte	0x9f
 5322 0674 00000000 		.4byte	0
 5323 0678 00000000 		.4byte	0
 5324              	.LLST49:
 5325 067c 00000000 		.4byte	.LVL140
 5326 0680 04000000 		.4byte	.LVL142
 5327 0684 0100     		.2byte	0x1
 5328 0686 51       		.byte	0x51
 5329 0687 04000000 		.4byte	.LVL142
 5330 068b 0C000000 		.4byte	.LFE64
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 146


 5331 068f 0400     		.2byte	0x4
 5332 0691 F3       		.byte	0xf3
 5333 0692 01       		.uleb128 0x1
 5334 0693 51       		.byte	0x51
 5335 0694 9F       		.byte	0x9f
 5336 0695 00000000 		.4byte	0
 5337 0699 00000000 		.4byte	0
 5338              	.LLST50:
 5339 069d 02000000 		.4byte	.LVL141
 5340 06a1 0A000000 		.4byte	.LVL145
 5341 06a5 0100     		.2byte	0x1
 5342 06a7 50       		.byte	0x50
 5343 06a8 00000000 		.4byte	0
 5344 06ac 00000000 		.4byte	0
 5345              	.LLST51:
 5346 06b0 00000000 		.4byte	.LVL146
 5347 06b4 2A000000 		.4byte	.LVL149
 5348 06b8 0100     		.2byte	0x1
 5349 06ba 50       		.byte	0x50
 5350 06bb 2A000000 		.4byte	.LVL149
 5351 06bf DE000000 		.4byte	.LVL167
 5352 06c3 0100     		.2byte	0x1
 5353 06c5 54       		.byte	0x54
 5354 06c6 DE000000 		.4byte	.LVL167
 5355 06ca E6000000 		.4byte	.LVL168
 5356 06ce 0400     		.2byte	0x4
 5357 06d0 F3       		.byte	0xf3
 5358 06d1 01       		.uleb128 0x1
 5359 06d2 50       		.byte	0x50
 5360 06d3 9F       		.byte	0x9f
 5361 06d4 E6000000 		.4byte	.LVL168
 5362 06d8 EA000000 		.4byte	.LVL170
 5363 06dc 0100     		.2byte	0x1
 5364 06de 54       		.byte	0x54
 5365 06df EA000000 		.4byte	.LVL170
 5366 06e3 F0000000 		.4byte	.LVL171
 5367 06e7 0400     		.2byte	0x4
 5368 06e9 F3       		.byte	0xf3
 5369 06ea 01       		.uleb128 0x1
 5370 06eb 50       		.byte	0x50
 5371 06ec 9F       		.byte	0x9f
 5372 06ed F0000000 		.4byte	.LVL171
 5373 06f1 F4000000 		.4byte	.LVL172
 5374 06f5 0100     		.2byte	0x1
 5375 06f7 54       		.byte	0x54
 5376 06f8 F4000000 		.4byte	.LVL172
 5377 06fc 28010000 		.4byte	.LFE36
 5378 0700 0400     		.2byte	0x4
 5379 0702 F3       		.byte	0xf3
 5380 0703 01       		.uleb128 0x1
 5381 0704 50       		.byte	0x50
 5382 0705 9F       		.byte	0x9f
 5383 0706 00000000 		.4byte	0
 5384 070a 00000000 		.4byte	0
 5385              	.LLST52:
 5386 070e AC000000 		.4byte	.LVL159
 5387 0712 B2000000 		.4byte	.LVL160
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 147


 5388 0716 0100     		.2byte	0x1
 5389 0718 53       		.byte	0x53
 5390 0719 B2000000 		.4byte	.LVL160
 5391 071d B6000000 		.4byte	.LVL161
 5392 0721 0100     		.2byte	0x1
 5393 0723 5C       		.byte	0x5c
 5394 0724 B6000000 		.4byte	.LVL161
 5395 0728 B8000000 		.4byte	.LVL162
 5396 072c 0100     		.2byte	0x1
 5397 072e 53       		.byte	0x53
 5398 072f B8000000 		.4byte	.LVL162
 5399 0733 C8000000 		.4byte	.LVL164
 5400 0737 0100     		.2byte	0x1
 5401 0739 57       		.byte	0x57
 5402 073a 00000000 		.4byte	0
 5403 073e 00000000 		.4byte	0
 5404              	.LLST53:
 5405 0742 52000000 		.4byte	.LVL154
 5406 0746 58000000 		.4byte	.LVL155
 5407 074a 0200     		.2byte	0x2
 5408 074c 31       		.byte	0x31
 5409 074d 9F       		.byte	0x9f
 5410 074e 5C000000 		.4byte	.LVL156
 5411 0752 60000000 		.4byte	.LVL157
 5412 0756 0200     		.2byte	0x2
 5413 0758 30       		.byte	0x30
 5414 0759 9F       		.byte	0x9f
 5415 075a 60000000 		.4byte	.LVL157
 5416 075e D6000000 		.4byte	.LVL165
 5417 0762 0100     		.2byte	0x1
 5418 0764 58       		.byte	0x58
 5419 0765 D6000000 		.4byte	.LVL165
 5420 0769 DC000000 		.4byte	.LVL166
 5421 076d 0100     		.2byte	0x1
 5422 076f 53       		.byte	0x53
 5423 0770 DC000000 		.4byte	.LVL166
 5424 0774 E6000000 		.4byte	.LVL168
 5425 0778 0100     		.2byte	0x1
 5426 077a 58       		.byte	0x58
 5427 077b E6000000 		.4byte	.LVL168
 5428 077f E8000000 		.4byte	.LVL169
 5429 0783 0100     		.2byte	0x1
 5430 0785 53       		.byte	0x53
 5431 0786 E8000000 		.4byte	.LVL169
 5432 078a FC000000 		.4byte	.LVL174
 5433 078e 0100     		.2byte	0x1
 5434 0790 58       		.byte	0x58
 5435 0791 00000000 		.4byte	0
 5436 0795 00000000 		.4byte	0
 5437              	.LLST54:
 5438 0799 52000000 		.4byte	.LVL154
 5439 079d 58000000 		.4byte	.LVL155
 5440 07a1 0100     		.2byte	0x1
 5441 07a3 55       		.byte	0x55
 5442 07a4 5C000000 		.4byte	.LVL156
 5443 07a8 FC000000 		.4byte	.LVL173
 5444 07ac 0100     		.2byte	0x1
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 148


 5445 07ae 55       		.byte	0x55
 5446 07af 00000000 		.4byte	0
 5447 07b3 00000000 		.4byte	0
 5448              	.LLST55:
 5449 07b7 1A000000 		.4byte	.LVL148
 5450 07bb 30000000 		.4byte	.LVL151
 5451 07bf 0100     		.2byte	0x1
 5452 07c1 57       		.byte	0x57
 5453 07c2 30000000 		.4byte	.LVL151
 5454 07c6 34000000 		.4byte	.LVL152
 5455 07ca 0100     		.2byte	0x1
 5456 07cc 50       		.byte	0x50
 5457 07cd 34000000 		.4byte	.LVL152
 5458 07d1 B8000000 		.4byte	.LVL162
 5459 07d5 0100     		.2byte	0x1
 5460 07d7 57       		.byte	0x57
 5461 07d8 00000000 		.4byte	0
 5462 07dc 00000000 		.4byte	0
 5463              	.LLST56:
 5464 07e0 00000000 		.4byte	.LVL175
 5465 07e4 07000000 		.4byte	.LVL176-1
 5466 07e8 0100     		.2byte	0x1
 5467 07ea 50       		.byte	0x50
 5468 07eb 07000000 		.4byte	.LVL176-1
 5469 07ef 0E000000 		.4byte	.LVL178
 5470 07f3 0100     		.2byte	0x1
 5471 07f5 54       		.byte	0x54
 5472 07f6 0E000000 		.4byte	.LVL178
 5473 07fa 10000000 		.4byte	.LFE37
 5474 07fe 0400     		.2byte	0x4
 5475 0800 F3       		.byte	0xf3
 5476 0801 01       		.uleb128 0x1
 5477 0802 50       		.byte	0x50
 5478 0803 9F       		.byte	0x9f
 5479 0804 00000000 		.4byte	0
 5480 0808 00000000 		.4byte	0
 5481              	.LLST57:
 5482 080c 02000000 		.4byte	.LVL179
 5483 0810 06000000 		.4byte	.LVL180
 5484 0814 0200     		.2byte	0x2
 5485 0816 30       		.byte	0x30
 5486 0817 9F       		.byte	0x9f
 5487 0818 06000000 		.4byte	.LVL180
 5488 081c 1E000000 		.4byte	.LVL185
 5489 0820 0100     		.2byte	0x1
 5490 0822 54       		.byte	0x54
 5491 0823 00000000 		.4byte	0
 5492 0827 00000000 		.4byte	0
 5493              	.LLST58:
 5494 082b 0E000000 		.4byte	.LVL181
 5495 082f 14000000 		.4byte	.LVL182
 5496 0833 0100     		.2byte	0x1
 5497 0835 50       		.byte	0x50
 5498 0836 00000000 		.4byte	0
 5499 083a 00000000 		.4byte	0
 5500              	.LLST59:
 5501 083e 00000000 		.4byte	.LVL186
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 149


 5502 0842 06000000 		.4byte	.LVL188
 5503 0846 0100     		.2byte	0x1
 5504 0848 50       		.byte	0x50
 5505 0849 06000000 		.4byte	.LVL188
 5506 084d 24000000 		.4byte	.LFE39
 5507 0851 0400     		.2byte	0x4
 5508 0853 F3       		.byte	0xf3
 5509 0854 01       		.uleb128 0x1
 5510 0855 50       		.byte	0x50
 5511 0856 9F       		.byte	0x9f
 5512 0857 00000000 		.4byte	0
 5513 085b 00000000 		.4byte	0
 5514              	.LLST60:
 5515 085f 02000000 		.4byte	.LVL187
 5516 0863 06000000 		.4byte	.LVL188
 5517 0867 0200     		.2byte	0x2
 5518 0869 30       		.byte	0x30
 5519 086a 9F       		.byte	0x9f
 5520 086b 06000000 		.4byte	.LVL188
 5521 086f 1E000000 		.4byte	.LVL193
 5522 0873 0100     		.2byte	0x1
 5523 0875 54       		.byte	0x54
 5524 0876 00000000 		.4byte	0
 5525 087a 00000000 		.4byte	0
 5526              	.LLST61:
 5527 087e 0E000000 		.4byte	.LVL189
 5528 0882 14000000 		.4byte	.LVL190
 5529 0886 0100     		.2byte	0x1
 5530 0888 50       		.byte	0x50
 5531 0889 00000000 		.4byte	0
 5532 088d 00000000 		.4byte	0
 5533              	.LLST62:
 5534 0891 00000000 		.4byte	.LVL194
 5535 0895 14000000 		.4byte	.LVL196
 5536 0899 0100     		.2byte	0x1
 5537 089b 50       		.byte	0x50
 5538 089c 14000000 		.4byte	.LVL196
 5539 08a0 4E000000 		.4byte	.LVL204
 5540 08a4 0100     		.2byte	0x1
 5541 08a6 54       		.byte	0x54
 5542 08a7 4E000000 		.4byte	.LVL204
 5543 08ab 5A000000 		.4byte	.LVL206
 5544 08af 0400     		.2byte	0x4
 5545 08b1 F3       		.byte	0xf3
 5546 08b2 01       		.uleb128 0x1
 5547 08b3 50       		.byte	0x50
 5548 08b4 9F       		.byte	0x9f
 5549 08b5 5A000000 		.4byte	.LVL206
 5550 08b9 64000000 		.4byte	.LVL208
 5551 08bd 0100     		.2byte	0x1
 5552 08bf 54       		.byte	0x54
 5553 08c0 64000000 		.4byte	.LVL208
 5554 08c4 7C000000 		.4byte	.LFE61
 5555 08c8 0400     		.2byte	0x4
 5556 08ca F3       		.byte	0xf3
 5557 08cb 01       		.uleb128 0x1
 5558 08cc 50       		.byte	0x50
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 150


 5559 08cd 9F       		.byte	0x9f
 5560 08ce 00000000 		.4byte	0
 5561 08d2 00000000 		.4byte	0
 5562              	.LLST63:
 5563 08d6 34000000 		.4byte	.LVL200
 5564 08da 42000000 		.4byte	.LVL201
 5565 08de 0100     		.2byte	0x1
 5566 08e0 53       		.byte	0x53
 5567 08e1 42000000 		.4byte	.LVL201
 5568 08e5 46000000 		.4byte	.LVL202
 5569 08e9 0300     		.2byte	0x3
 5570 08eb 75       		.byte	0x75
 5571 08ec 01       		.sleb128 1
 5572 08ed 9F       		.byte	0x9f
 5573 08ee 4C000000 		.4byte	.LVL203
 5574 08f2 55000000 		.4byte	.LVL205-1
 5575 08f6 0100     		.2byte	0x1
 5576 08f8 53       		.byte	0x53
 5577 08f9 55000000 		.4byte	.LVL205-1
 5578 08fd 5A000000 		.4byte	.LVL206
 5579 0901 0300     		.2byte	0x3
 5580 0903 75       		.byte	0x75
 5581 0904 01       		.sleb128 1
 5582 0905 9F       		.byte	0x9f
 5583 0906 00000000 		.4byte	0
 5584 090a 00000000 		.4byte	0
 5585              	.LLST64:
 5586 090e 0C000000 		.4byte	.LVL195
 5587 0912 46000000 		.4byte	.LVL202
 5588 0916 0100     		.2byte	0x1
 5589 0918 55       		.byte	0x55
 5590 0919 4C000000 		.4byte	.LVL203
 5591 091d 5E000000 		.4byte	.LVL207
 5592 0921 0100     		.2byte	0x1
 5593 0923 55       		.byte	0x55
 5594 0924 00000000 		.4byte	0
 5595 0928 00000000 		.4byte	0
 5596              	.LLST65:
 5597 092c 18000000 		.4byte	.LVL197
 5598 0930 2B000000 		.4byte	.LVL198-1
 5599 0934 0100     		.2byte	0x1
 5600 0936 50       		.byte	0x50
 5601 0937 5A000000 		.4byte	.LVL206
 5602 093b 64000000 		.4byte	.LVL208
 5603 093f 0100     		.2byte	0x1
 5604 0941 50       		.byte	0x50
 5605 0942 00000000 		.4byte	0
 5606 0946 00000000 		.4byte	0
 5607              	.LLST66:
 5608 094a 30000000 		.4byte	.LVL199
 5609 094e 55000000 		.4byte	.LVL205-1
 5610 0952 0100     		.2byte	0x1
 5611 0954 50       		.byte	0x50
 5612 0955 56000000 		.4byte	.LVL205
 5613 0959 5A000000 		.4byte	.LVL206
 5614 095d 0100     		.2byte	0x1
 5615 095f 50       		.byte	0x50
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 151


 5616 0960 5A000000 		.4byte	.LVL206
 5617 0964 64000000 		.4byte	.LVL208
 5618 0968 0300     		.2byte	0x3
 5619 096a 09       		.byte	0x9
 5620 096b FF       		.byte	0xff
 5621 096c 9F       		.byte	0x9f
 5622 096d 64000000 		.4byte	.LVL208
 5623 0971 7C000000 		.4byte	.LFE61
 5624 0975 0100     		.2byte	0x1
 5625 0977 50       		.byte	0x50
 5626 0978 00000000 		.4byte	0
 5627 097c 00000000 		.4byte	0
 5628              	.LLST67:
 5629 0980 00000000 		.4byte	.LVL209
 5630 0984 04000000 		.4byte	.LVL210
 5631 0988 0100     		.2byte	0x1
 5632 098a 50       		.byte	0x50
 5633 098b 04000000 		.4byte	.LVL210
 5634 098f 0C000000 		.4byte	.LFE65
 5635 0993 0400     		.2byte	0x4
 5636 0995 F3       		.byte	0xf3
 5637 0996 01       		.uleb128 0x1
 5638 0997 50       		.byte	0x50
 5639 0998 9F       		.byte	0x9f
 5640 0999 00000000 		.4byte	0
 5641 099d 00000000 		.4byte	0
 5642              	.LLST68:
 5643 09a1 00000000 		.4byte	.LVL211
 5644 09a5 04000000 		.4byte	.LVL212
 5645 09a9 0100     		.2byte	0x1
 5646 09ab 50       		.byte	0x50
 5647 09ac 04000000 		.4byte	.LVL212
 5648 09b0 0C000000 		.4byte	.LFE66
 5649 09b4 0400     		.2byte	0x4
 5650 09b6 F3       		.byte	0xf3
 5651 09b7 01       		.uleb128 0x1
 5652 09b8 50       		.byte	0x50
 5653 09b9 9F       		.byte	0x9f
 5654 09ba 00000000 		.4byte	0
 5655 09be 00000000 		.4byte	0
 5656              	.LLST69:
 5657 09c2 00000000 		.4byte	.LVL213
 5658 09c6 04000000 		.4byte	.LVL214
 5659 09ca 0100     		.2byte	0x1
 5660 09cc 50       		.byte	0x50
 5661 09cd 04000000 		.4byte	.LVL214
 5662 09d1 0C000000 		.4byte	.LFE67
 5663 09d5 0400     		.2byte	0x4
 5664 09d7 F3       		.byte	0xf3
 5665 09d8 01       		.uleb128 0x1
 5666 09d9 50       		.byte	0x50
 5667 09da 9F       		.byte	0x9f
 5668 09db 00000000 		.4byte	0
 5669 09df 00000000 		.4byte	0
 5670              		.section	.debug_aranges,"",%progbits
 5671 0000 44010000 		.4byte	0x144
 5672 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 152


 5673 0006 00000000 		.4byte	.Ldebug_info0
 5674 000a 04       		.byte	0x4
 5675 000b 00       		.byte	0
 5676 000c 0000     		.2byte	0
 5677 000e 0000     		.2byte	0
 5678 0010 00000000 		.4byte	.LFB32
 5679 0014 28000000 		.4byte	.LFE32-.LFB32
 5680 0018 00000000 		.4byte	.LFB33
 5681 001c 18000000 		.4byte	.LFE33-.LFB33
 5682 0020 00000000 		.4byte	.LFB34
 5683 0024 14000000 		.4byte	.LFE34-.LFB34
 5684 0028 00000000 		.4byte	.LFB35
 5685 002c 30000000 		.4byte	.LFE35-.LFB35
 5686 0030 00000000 		.4byte	.LFB40
 5687 0034 0C000000 		.4byte	.LFE40-.LFB40
 5688 0038 00000000 		.4byte	.LFB41
 5689 003c 0C000000 		.4byte	.LFE41-.LFB41
 5690 0040 00000000 		.4byte	.LFB42
 5691 0044 10000000 		.4byte	.LFE42-.LFB42
 5692 0048 00000000 		.4byte	.LFB43
 5693 004c 10000000 		.4byte	.LFE43-.LFB43
 5694 0050 00000000 		.4byte	.LFB44
 5695 0054 0C000000 		.4byte	.LFE44-.LFB44
 5696 0058 00000000 		.4byte	.LFB45
 5697 005c 0C000000 		.4byte	.LFE45-.LFB45
 5698 0060 00000000 		.4byte	.LFB46
 5699 0064 0C000000 		.4byte	.LFE46-.LFB46
 5700 0068 00000000 		.4byte	.LFB47
 5701 006c 0C000000 		.4byte	.LFE47-.LFB47
 5702 0070 00000000 		.4byte	.LFB48
 5703 0074 0C000000 		.4byte	.LFE48-.LFB48
 5704 0078 00000000 		.4byte	.LFB49
 5705 007c 0C000000 		.4byte	.LFE49-.LFB49
 5706 0080 00000000 		.4byte	.LFB50
 5707 0084 0C000000 		.4byte	.LFE50-.LFB50
 5708 0088 00000000 		.4byte	.LFB51
 5709 008c 0C000000 		.4byte	.LFE51-.LFB51
 5710 0090 00000000 		.4byte	.LFB52
 5711 0094 0C000000 		.4byte	.LFE52-.LFB52
 5712 0098 00000000 		.4byte	.LFB53
 5713 009c 0C000000 		.4byte	.LFE53-.LFB53
 5714 00a0 00000000 		.4byte	.LFB54
 5715 00a4 A4000000 		.4byte	.LFE54-.LFB54
 5716 00a8 00000000 		.4byte	.LFB55
 5717 00ac 1C000000 		.4byte	.LFE55-.LFB55
 5718 00b0 00000000 		.4byte	.LFB56
 5719 00b4 1E000000 		.4byte	.LFE56-.LFB56
 5720 00b8 00000000 		.4byte	.LFB57
 5721 00bc 1C000000 		.4byte	.LFE57-.LFB57
 5722 00c0 00000000 		.4byte	.LFB58
 5723 00c4 1C000000 		.4byte	.LFE58-.LFB58
 5724 00c8 00000000 		.4byte	.LFB59
 5725 00cc 2C000000 		.4byte	.LFE59-.LFB59
 5726 00d0 00000000 		.4byte	.LFB60
 5727 00d4 E4000000 		.4byte	.LFE60-.LFB60
 5728 00d8 00000000 		.4byte	.LFB62
 5729 00dc 40000000 		.4byte	.LFE62-.LFB62
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 153


 5730 00e0 00000000 		.4byte	.LFB63
 5731 00e4 1C000000 		.4byte	.LFE63-.LFB63
 5732 00e8 00000000 		.4byte	.LFB64
 5733 00ec 0C000000 		.4byte	.LFE64-.LFB64
 5734 00f0 00000000 		.4byte	.LFB36
 5735 00f4 28010000 		.4byte	.LFE36-.LFB36
 5736 00f8 00000000 		.4byte	.LFB37
 5737 00fc 10000000 		.4byte	.LFE37-.LFB37
 5738 0100 00000000 		.4byte	.LFB38
 5739 0104 24000000 		.4byte	.LFE38-.LFB38
 5740 0108 00000000 		.4byte	.LFB39
 5741 010c 24000000 		.4byte	.LFE39-.LFB39
 5742 0110 00000000 		.4byte	.LFB61
 5743 0114 7C000000 		.4byte	.LFE61-.LFB61
 5744 0118 00000000 		.4byte	.LFB65
 5745 011c 0C000000 		.4byte	.LFE65-.LFB65
 5746 0120 00000000 		.4byte	.LFB66
 5747 0124 0C000000 		.4byte	.LFE66-.LFB66
 5748 0128 00000000 		.4byte	.LFB67
 5749 012c 0C000000 		.4byte	.LFE67-.LFB67
 5750 0130 00000000 		.4byte	.LFB68
 5751 0134 0C000000 		.4byte	.LFE68-.LFB68
 5752 0138 00000000 		.4byte	.LFB69
 5753 013c 0C000000 		.4byte	.LFE69-.LFB69
 5754 0140 00000000 		.4byte	0
 5755 0144 00000000 		.4byte	0
 5756              		.section	.debug_ranges,"",%progbits
 5757              	.Ldebug_ranges0:
 5758 0000 00000000 		.4byte	.LFB32
 5759 0004 28000000 		.4byte	.LFE32
 5760 0008 00000000 		.4byte	.LFB33
 5761 000c 18000000 		.4byte	.LFE33
 5762 0010 00000000 		.4byte	.LFB34
 5763 0014 14000000 		.4byte	.LFE34
 5764 0018 00000000 		.4byte	.LFB35
 5765 001c 30000000 		.4byte	.LFE35
 5766 0020 00000000 		.4byte	.LFB40
 5767 0024 0C000000 		.4byte	.LFE40
 5768 0028 00000000 		.4byte	.LFB41
 5769 002c 0C000000 		.4byte	.LFE41
 5770 0030 00000000 		.4byte	.LFB42
 5771 0034 10000000 		.4byte	.LFE42
 5772 0038 00000000 		.4byte	.LFB43
 5773 003c 10000000 		.4byte	.LFE43
 5774 0040 00000000 		.4byte	.LFB44
 5775 0044 0C000000 		.4byte	.LFE44
 5776 0048 00000000 		.4byte	.LFB45
 5777 004c 0C000000 		.4byte	.LFE45
 5778 0050 00000000 		.4byte	.LFB46
 5779 0054 0C000000 		.4byte	.LFE46
 5780 0058 00000000 		.4byte	.LFB47
 5781 005c 0C000000 		.4byte	.LFE47
 5782 0060 00000000 		.4byte	.LFB48
 5783 0064 0C000000 		.4byte	.LFE48
 5784 0068 00000000 		.4byte	.LFB49
 5785 006c 0C000000 		.4byte	.LFE49
 5786 0070 00000000 		.4byte	.LFB50
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 154


 5787 0074 0C000000 		.4byte	.LFE50
 5788 0078 00000000 		.4byte	.LFB51
 5789 007c 0C000000 		.4byte	.LFE51
 5790 0080 00000000 		.4byte	.LFB52
 5791 0084 0C000000 		.4byte	.LFE52
 5792 0088 00000000 		.4byte	.LFB53
 5793 008c 0C000000 		.4byte	.LFE53
 5794 0090 00000000 		.4byte	.LFB54
 5795 0094 A4000000 		.4byte	.LFE54
 5796 0098 00000000 		.4byte	.LFB55
 5797 009c 1C000000 		.4byte	.LFE55
 5798 00a0 00000000 		.4byte	.LFB56
 5799 00a4 1E000000 		.4byte	.LFE56
 5800 00a8 00000000 		.4byte	.LFB57
 5801 00ac 1C000000 		.4byte	.LFE57
 5802 00b0 00000000 		.4byte	.LFB58
 5803 00b4 1C000000 		.4byte	.LFE58
 5804 00b8 00000000 		.4byte	.LFB59
 5805 00bc 2C000000 		.4byte	.LFE59
 5806 00c0 00000000 		.4byte	.LFB60
 5807 00c4 E4000000 		.4byte	.LFE60
 5808 00c8 00000000 		.4byte	.LFB62
 5809 00cc 40000000 		.4byte	.LFE62
 5810 00d0 00000000 		.4byte	.LFB63
 5811 00d4 1C000000 		.4byte	.LFE63
 5812 00d8 00000000 		.4byte	.LFB64
 5813 00dc 0C000000 		.4byte	.LFE64
 5814 00e0 00000000 		.4byte	.LFB36
 5815 00e4 28010000 		.4byte	.LFE36
 5816 00e8 00000000 		.4byte	.LFB37
 5817 00ec 10000000 		.4byte	.LFE37
 5818 00f0 00000000 		.4byte	.LFB38
 5819 00f4 24000000 		.4byte	.LFE38
 5820 00f8 00000000 		.4byte	.LFB39
 5821 00fc 24000000 		.4byte	.LFE39
 5822 0100 00000000 		.4byte	.LFB61
 5823 0104 7C000000 		.4byte	.LFE61
 5824 0108 00000000 		.4byte	.LFB65
 5825 010c 0C000000 		.4byte	.LFE65
 5826 0110 00000000 		.4byte	.LFB66
 5827 0114 0C000000 		.4byte	.LFE66
 5828 0118 00000000 		.4byte	.LFB67
 5829 011c 0C000000 		.4byte	.LFE67
 5830 0120 00000000 		.4byte	.LFB68
 5831 0124 0C000000 		.4byte	.LFE68
 5832 0128 00000000 		.4byte	.LFB69
 5833 012c 0C000000 		.4byte	.LFE69
 5834 0130 00000000 		.4byte	0
 5835 0134 00000000 		.4byte	0
 5836              		.section	.debug_line,"",%progbits
 5837              	.Ldebug_line0:
 5838 0000 76040000 		.section	.debug_str,"MS",%progbits,1
 5838      02006A00 
 5838      00000201 
 5838      FB0E0D00 
 5838      01010101 
 5839              	.LASF131:
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 155


 5840 0000 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 5840      656E7365 
 5840      5F73656E 
 5840      736F7242 
 5840      6173656C 
 5841              	.LASF103:
 5842 001b 43617053 		.ascii	"CapSense_IIR4Filter\000"
 5842      656E7365 
 5842      5F494952 
 5842      3446696C 
 5842      74657200 
 5843              	.LASF78:
 5844 002f 43617053 		.ascii	"CapSense_debounceCounter\000"
 5844      656E7365 
 5844      5F646562 
 5844      6F756E63 
 5844      65436F75 
 5845              	.LASF33:
 5846 0048 7363616E 		.ascii	"scanSpeedTbl\000"
 5846      53706565 
 5846      6454626C 
 5846      00
 5847              	.LASF134:
 5848 0055 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 5848      656E7365 
 5848      5F6C6F77 
 5848      42617365 
 5848      6C696E65 
 5849              	.LASF104:
 5850 0072 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold\000"
 5850      656E7365 
 5850      5F557064 
 5850      61746542 
 5850      6173656C 
 5851              	.LASF36:
 5852 0095 6E756D62 		.ascii	"numberOfSensors\000"
 5852      65724F66 
 5852      53656E73 
 5852      6F727300 
 5853              	.LASF40:
 5854 00a5 70747247 		.ascii	"ptrGetBitValue\000"
 5854      65744269 
 5854      7456616C 
 5854      756500
 5855              	.LASF85:
 5856 00b4 43617053 		.ascii	"CapSense_DisableWidget\000"
 5856      656E7365 
 5856      5F446973 
 5856      61626C65 
 5856      57696467 
 5857              	.LASF110:
 5858 00cb 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 5858      656E7365 
 5858      5F557064 
 5858      61746545 
 5858      6E61626C 
 5859              	.LASF116:
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 156


 5860 00eb 706F7349 		.ascii	"posIndex\000"
 5860      6E646578 
 5860      00
 5861              	.LASF144:
 5862 00f4 43617053 		.ascii	"CapSense_config\000"
 5862      656E7365 
 5862      5F636F6E 
 5862      66696700 
 5863              	.LASF55:
 5864 0104 69735365 		.ascii	"isSensorEnabled\000"
 5864      6E736F72 
 5864      456E6162 
 5864      6C656400 
 5865              	.LASF81:
 5866 0114 6E756D4F 		.ascii	"numOfSensors\000"
 5866      6653656E 
 5866      736F7273 
 5866      00
 5867              	.LASF42:
 5868 0121 43617053 		.ascii	"CapSense_CONFIG_TYPE_POINTERS_P4_v2_60\000"
 5868      656E7365 
 5868      5F434F4E 
 5868      4649475F 
 5868      54595045 
 5869              	.LASF8:
 5870 0148 756E7369 		.ascii	"unsigned int\000"
 5870      676E6564 
 5870      20696E74 
 5870      00
 5871              	.LASF45:
 5872 0155 746F7461 		.ascii	"totalSensorsNum\000"
 5872      6C53656E 
 5872      736F7273 
 5872      4E756D00 
 5873              	.LASF96:
 5874 0165 706F734E 		.ascii	"posNext\000"
 5874      65787400 
 5875              	.LASF12:
 5876 016d 696E7431 		.ascii	"int16\000"
 5876      3600
 5877              	.LASF30:
 5878 0173 73616D70 		.ascii	"sampleMaxTbl\000"
 5878      6C654D61 
 5878      7854626C 
 5878      00
 5879              	.LASF54:
 5880 0180 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 5880      656E7365 
 5880      5F496E69 
 5880      7469616C 
 5880      697A6545 
 5881              	.LASF126:
 5882 01a4 43617053 		.ascii	"CapSense_posFiltersData\000"
 5882      656E7365 
 5882      5F706F73 
 5882      46696C74 
 5882      65727344 
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 157


 5883              	.LASF28:
 5884 01bc 7369676E 		.ascii	"signRegisterTbl\000"
 5884      52656769 
 5884      73746572 
 5884      54626C00 
 5885              	.LASF140:
 5886 01cc 43617053 		.ascii	"CapSense_debounce\000"
 5886      656E7365 
 5886      5F646562 
 5886      6F756E63 
 5886      6500
 5887              	.LASF51:
 5888 01de 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 5888      656E7365 
 5888      5F496E69 
 5888      7469616C 
 5888      697A6553 
 5889              	.LASF95:
 5890 0200 706F7350 		.ascii	"posPrev\000"
 5890      72657600 
 5891              	.LASF147:
 5892 0208 43617053 		.ascii	"CapSense_IsBusy\000"
 5892      656E7365 
 5892      5F497342 
 5892      75737900 
 5893              	.LASF56:
 5894 0218 43617053 		.ascii	"CapSense_SetBaselineData\000"
 5894      656E7365 
 5894      5F536574 
 5894      42617365 
 5894      6C696E65 
 5895              	.LASF35:
 5896 0231 72617744 		.ascii	"rawDataIndex\000"
 5896      61746149 
 5896      6E646578 
 5896      00
 5897              	.LASF44:
 5898 023e 746F7461 		.ascii	"totalWidgetsNum\000"
 5898      6C576964 
 5898      67657473 
 5898      4E756D00 
 5899              	.LASF60:
 5900 024e 43617053 		.ascii	"CapSense_SetDiffCountData\000"
 5900      656E7365 
 5900      5F536574 
 5900      44696666 
 5900      436F756E 
 5901              	.LASF132:
 5902 0268 43617053 		.ascii	"CapSense_sensorSignal\000"
 5902      656E7365 
 5902      5F73656E 
 5902      736F7253 
 5902      69676E61 
 5903              	.LASF141:
 5904 027e 43617053 		.ascii	"CapSense_rawDataIndex\000"
 5904      656E7365 
 5904      5F726177 
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 158


 5904      44617461 
 5904      496E6465 
 5905              	.LASF68:
 5906 0294 43617053 		.ascii	"CapSense_SetNoiseThreshold\000"
 5906      656E7365 
 5906      5F536574 
 5906      4E6F6973 
 5906      65546872 
 5907              	.LASF111:
 5908 02af 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 5908      656E7365 
 5908      5F557064 
 5908      61746557 
 5908      69646765 
 5909              	.LASF139:
 5910 02cd 43617053 		.ascii	"CapSense_hysteresis\000"
 5910      656E7365 
 5910      5F687973 
 5910      74657265 
 5910      73697300 
 5911              	.LASF14:
 5912 02e1 666C6F61 		.ascii	"float\000"
 5912      7400
 5913              	.LASF13:
 5914 02e7 696E7433 		.ascii	"int32\000"
 5914      3200
 5915              	.LASF88:
 5916 02ed 636F756E 		.ascii	"count\000"
 5916      7400
 5917              	.LASF25:
 5918 02f3 7265736F 		.ascii	"resolutionsTbl\000"
 5918      6C757469 
 5918      6F6E7354 
 5918      626C00
 5919              	.LASF118:
 5920 0302 706F7346 		.ascii	"posFiltersMask\000"
 5920      696C7465 
 5920      72734D61 
 5920      736B00
 5921              	.LASF64:
 5922 0311 43617053 		.ascii	"CapSense_GetNoiseThreshold\000"
 5922      656E7365 
 5922      5F476574 
 5922      4E6F6973 
 5922      65546872 
 5923              	.LASF27:
 5924 032c 72756E6E 		.ascii	"runningDifferenceTbl\000"
 5924      696E6744 
 5924      69666665 
 5924      72656E63 
 5924      6554626C 
 5925              	.LASF7:
 5926 0341 6C6F6E67 		.ascii	"long long unsigned int\000"
 5926      206C6F6E 
 5926      6720756E 
 5926      7369676E 
 5926      65642069 
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 159


 5927              	.LASF128:
 5928 0358 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 5928      656E7365 
 5928      5F73656E 
 5928      736F7245 
 5928      6E61626C 
 5929              	.LASF63:
 5930 0372 77696467 		.ascii	"widget\000"
 5930      657400
 5931              	.LASF125:
 5932 0379 43617053 		.ascii	"CapSense_posFiltersMask\000"
 5932      656E7365 
 5932      5F706F73 
 5932      46696C74 
 5932      6572734D 
 5933              	.LASF136:
 5934 0391 43617053 		.ascii	"CapSense_fingerThreshold\000"
 5934      656E7365 
 5934      5F66696E 
 5934      67657254 
 5934      68726573 
 5935              	.LASF49:
 5936 03aa 43617053 		.ascii	"CapSense_CONFIG_TYPE_P4_v2_60\000"
 5936      656E7365 
 5936      5F434F4E 
 5936      4649475F 
 5936      54595045 
 5937              	.LASF129:
 5938 03c8 43617053 		.ascii	"CapSense_widgetNumber\000"
 5938      656E7365 
 5938      5F776964 
 5938      6765744E 
 5938      756D6265 
 5939              	.LASF67:
 5940 03de 43617053 		.ascii	"CapSense_SetFingerThreshold\000"
 5940      656E7365 
 5940      5F536574 
 5940      46696E67 
 5940      65725468 
 5941              	.LASF123:
 5942 03fa 43617053 		.ascii	"CapSense_DisableRawDataFilters\000"
 5942      656E7365 
 5942      5F446973 
 5942      61626C65 
 5942      52617744 
 5943              	.LASF61:
 5944 0419 76616C75 		.ascii	"value\000"
 5944      6500
 5945              	.LASF65:
 5946 041f 43617053 		.ascii	"CapSense_GetFingerHysteresis\000"
 5946      656E7365 
 5946      5F476574 
 5946      46696E67 
 5946      65724879 
 5947              	.LASF153:
 5948 043c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5948      43313120 
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 160


 5948      352E342E 
 5948      31203230 
 5948      31363036 
 5949 046f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5949      20726576 
 5949      6973696F 
 5949      6E203233 
 5949      37373135 
 5950 04a2 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 5950      66756E63 
 5950      74696F6E 
 5950      2D736563 
 5950      74696F6E 
 5951              	.LASF59:
 5952 04ca 43617053 		.ascii	"CapSense_GetDiffCountData\000"
 5952      656E7365 
 5952      5F476574 
 5952      44696666 
 5952      436F756E 
 5953              	.LASF106:
 5954 04e4 7369676E 		.ascii	"sign\000"
 5954      00
 5955              	.LASF87:
 5956 04e9 6F666673 		.ascii	"offset\000"
 5956      657400
 5957              	.LASF26:
 5958 04f0 6E6F6973 		.ascii	"noiseEnvelopeTbl\000"
 5958      65456E76 
 5958      656C6F70 
 5958      6554626C 
 5958      00
 5959              	.LASF105:
 5960 0501 63616C63 		.ascii	"calc\000"
 5960      00
 5961              	.LASF39:
 5962 0506 70747252 		.ascii	"ptrReadSensorRaw\000"
 5962      65616453 
 5962      656E736F 
 5962      72526177 
 5962      00
 5963              	.LASF77:
 5964 0517 68797374 		.ascii	"hysteresis\000"
 5964      65726573 
 5964      697300
 5965              	.LASF146:
 5966 0522 43617053 		.ascii	"CapSense_ScanSensor\000"
 5966      656E7365 
 5966      5F536361 
 5966      6E53656E 
 5966      736F7200 
 5967              	.LASF108:
 5968 0536 66696C74 		.ascii	"filteredRawData\000"
 5968      65726564 
 5968      52617744 
 5968      61746100 
 5969              	.LASF112:
 5970 0546 73656E73 		.ascii	"sensorsPerWidget\000"
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 161


 5970      6F727350 
 5970      65725769 
 5970      64676574 
 5970      00
 5971              	.LASF83:
 5972 0557 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 5972      656E7365 
 5972      5F436865 
 5972      636B4973 
 5972      416E7957 
 5973              	.LASF142:
 5974 0577 43617053 		.ascii	"CapSense_numberOfSensors\000"
 5974      656E7365 
 5974      5F6E756D 
 5974      6265724F 
 5974      6653656E 
 5975              	.LASF138:
 5976 0590 43617053 		.ascii	"CapSense_negativeNoiseThreshold\000"
 5976      656E7365 
 5976      5F6E6567 
 5976      61746976 
 5976      654E6F69 
 5977              	.LASF43:
 5978 05b0 746F7461 		.ascii	"totalScanslotsNum\000"
 5978      6C536361 
 5978      6E736C6F 
 5978      74734E75 
 5978      6D00
 5979              	.LASF151:
 5980 05c2 4D656173 		.ascii	"MeasureNoiseEnvelope_P4_v2_60\000"
 5980      7572654E 
 5980      6F697365 
 5980      456E7665 
 5980      6C6F7065 
 5981              	.LASF52:
 5982 05e0 73656E73 		.ascii	"sensor\000"
 5982      6F7200
 5983              	.LASF46:
 5984 05e7 73656E73 		.ascii	"sensetivitySeed\000"
 5984      65746976 
 5984      69747953 
 5984      65656400 
 5985              	.LASF84:
 5986 05f7 43617053 		.ascii	"CapSense_EnableWidget\000"
 5986      656E7365 
 5986      5F456E61 
 5986      626C6557 
 5986      69646765 
 5987              	.LASF16:
 5988 060d 63686172 		.ascii	"char\000"
 5988      00
 5989              	.LASF66:
 5990 0612 43617053 		.ascii	"CapSense_GetNegativeNoiseThreshold\000"
 5990      656E7365 
 5990      5F476574 
 5990      4E656761 
 5990      74697665 
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 162


 5991              	.LASF34:
 5992 0635 70726573 		.ascii	"prescalerTable\000"
 5992      63616C65 
 5992      72546162 
 5992      6C6500
 5993              	.LASF10:
 5994 0644 75696E74 		.ascii	"uint16\000"
 5994      313600
 5995              	.LASF57:
 5996 064b 64617461 		.ascii	"data\000"
 5996      00
 5997              	.LASF19:
 5998 0650 69646163 		.ascii	"idac1LevelsTbl\000"
 5998      314C6576 
 5998      656C7354 
 5998      626C00
 5999              	.LASF93:
 6000 065f 7265736F 		.ascii	"resolution\000"
 6000      6C757469 
 6000      6F6E00
 6001              	.LASF80:
 6002 066a 72617749 		.ascii	"rawIndex\000"
 6002      6E646578 
 6002      00
 6003              	.LASF152:
 6004 0673 43617053 		.ascii	"CapSense_UpdateThresholds\000"
 6004      656E7365 
 6004      5F557064 
 6004      61746554 
 6004      68726573 
 6005              	.LASF97:
 6006 068d 43617053 		.ascii	"CapSense_centroid\000"
 6006      656E7365 
 6006      5F63656E 
 6006      74726F69 
 6006      6400
 6007              	.LASF148:
 6008 069f 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 6008      656E7365 
 6008      5F536361 
 6008      6E456E61 
 6008      626C6564 
 6009              	.LASF6:
 6010 06bb 6C6F6E67 		.ascii	"long long int\000"
 6010      206C6F6E 
 6010      6720696E 
 6010      7400
 6011              	.LASF119:
 6012 06c9 43617053 		.ascii	"CapSense_GetWidgetNumber\000"
 6012      656E7365 
 6012      5F476574 
 6012      57696467 
 6012      65744E75 
 6013              	.LASF74:
 6014 06e2 6465626F 		.ascii	"debounce\000"
 6014      756E6365 
 6014      00
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 163


 6015              	.LASF38:
 6016 06eb 70747250 		.ascii	"ptrPreScan\000"
 6016      72655363 
 6016      616E00
 6017              	.LASF73:
 6018 06f6 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 6018      656E7365 
 6018      5F436865 
 6018      636B4973 
 6018      53656E73 
 6019              	.LASF37:
 6020 0713 70747247 		.ascii	"ptrGetRaw\000"
 6020      65745261 
 6020      7700
 6021              	.LASF109:
 6022 071d 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 6022      656E7365 
 6022      5F557064 
 6022      61746553 
 6022      656E736F 
 6023              	.LASF50:
 6024 073b 43617053 		.ascii	"CapSense_BaseInit\000"
 6024      656E7365 
 6024      5F426173 
 6024      65496E69 
 6024      7400
 6025              	.LASF92:
 6026 074d 43617053 		.ascii	"CapSense_CalcCentroid\000"
 6026      656E7365 
 6026      5F43616C 
 6026      6343656E 
 6026      74726F69 
 6027              	.LASF29:
 6028 0763 73616D70 		.ascii	"sampleMinTbl\000"
 6028      6C654D69 
 6028      6E54626C 
 6028      00
 6029              	.LASF127:
 6030 0770 43617053 		.ascii	"CapSense_sensorRaw\000"
 6030      656E7365 
 6030      5F73656E 
 6030      736F7252 
 6030      617700
 6031              	.LASF120:
 6032 0783 43617053 		.ascii	"CapSense_GetLowBaselineReset\000"
 6032      656E7365 
 6032      5F476574 
 6032      4C6F7742 
 6032      6173656C 
 6033              	.LASF70:
 6034 07a0 43617053 		.ascii	"CapSense_SetNegativeNoiseThreshold\000"
 6034      656E7365 
 6034      5F536574 
 6034      4E656761 
 6034      74697665 
 6035              	.LASF11:
 6036 07c3 75696E74 		.ascii	"uint32\000"
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 164


 6036      333200
 6037              	.LASF117:
 6038 07ca 66697273 		.ascii	"firstTimeIndex\000"
 6038      7454696D 
 6038      65496E64 
 6038      657800
 6039              	.LASF91:
 6040 07d9 73746172 		.ascii	"startOfSlider\000"
 6040      744F6653 
 6040      6C696465 
 6040      7200
 6041              	.LASF69:
 6042 07e7 43617053 		.ascii	"CapSense_SetFingerHysteresis\000"
 6042      656E7365 
 6042      5F536574 
 6042      46696E67 
 6042      65724879 
 6043              	.LASF62:
 6044 0804 43617053 		.ascii	"CapSense_GetFingerThreshold\000"
 6044      656E7365 
 6044      5F476574 
 6044      46696E67 
 6044      65725468 
 6045              	.LASF99:
 6046 0820 6E756D65 		.ascii	"numerator\000"
 6046      7261746F 
 6046      7200
 6047              	.LASF18:
 6048 082a 6C6F6E67 		.ascii	"long double\000"
 6048      20646F75 
 6048      626C6500 
 6049              	.LASF114:
 6050 0836 6C617374 		.ascii	"lastSensor\000"
 6050      53656E73 
 6050      6F7200
 6051              	.LASF47:
 6052 0841 6866636C 		.ascii	"hfclkFreq_MHz\000"
 6052      6B467265 
 6052      715F4D48 
 6052      7A00
 6053              	.LASF115:
 6054 084f 43617053 		.ascii	"CapSense_GetCentroidPos\000"
 6054      656E7365 
 6054      5F476574 
 6054      43656E74 
 6054      726F6964 
 6055              	.LASF20:
 6056 0867 69646163 		.ascii	"idac2LevelsTbl\000"
 6056      324C6576 
 6056      656C7354 
 6056      626C00
 6057              	.LASF2:
 6058 0876 73686F72 		.ascii	"short int\000"
 6058      7420696E 
 6058      7400
 6059              	.LASF4:
 6060 0880 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 165


 6060      20696E74 
 6060      00
 6061              	.LASF113:
 6062 0889 66697273 		.ascii	"firstSensor\000"
 6062      7453656E 
 6062      736F7200 
 6063              	.LASF90:
 6064 0895 74656D70 		.ascii	"temp\000"
 6064      00
 6065              	.LASF86:
 6066 089a 43617053 		.ascii	"CapSense_FindMaximum\000"
 6066      656E7365 
 6066      5F46696E 
 6066      644D6178 
 6066      696D756D 
 6067              	.LASF24:
 6068 08af 77696467 		.ascii	"widgetNubmersTbl\000"
 6068      65744E75 
 6068      626D6572 
 6068      7354626C 
 6068      00
 6069              	.LASF122:
 6070 08c0 43617053 		.ascii	"CapSense_EnableRawDataFilters\000"
 6070      656E7365 
 6070      5F456E61 
 6070      626C6552 
 6070      61774461 
 6071              	.LASF135:
 6072 08de 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 6072      656E7365 
 6072      5F6C6F77 
 6072      42617365 
 6072      6C696E65 
 6073              	.LASF100:
 6074 08f8 64656E6F 		.ascii	"denominator\000"
 6074      6D696E61 
 6074      746F7200 
 6075              	.LASF32:
 6076 0904 6B56616C 		.ascii	"kValueTbl\000"
 6076      75655462 
 6076      6C00
 6077              	.LASF130:
 6078 090e 43617053 		.ascii	"CapSense_sensorBaseline\000"
 6078      656E7365 
 6078      5F73656E 
 6078      736F7242 
 6078      6173656C 
 6079              	.LASF89:
 6080 0926 6D617869 		.ascii	"maximum\000"
 6080      6D756D00 
 6081              	.LASF17:
 6082 092e 73697A65 		.ascii	"sizetype\000"
 6082      74797065 
 6082      00
 6083              	.LASF5:
 6084 0937 6C6F6E67 		.ascii	"long unsigned int\000"
 6084      20756E73 
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 166


 6084      69676E65 
 6084      6420696E 
 6084      7400
 6085              	.LASF48:
 6086 0949 706F696E 		.ascii	"pointers\000"
 6086      74657273 
 6086      00
 6087              	.LASF94:
 6088 0952 6E6F6973 		.ascii	"noiseThreshold\000"
 6088      65546872 
 6088      6573686F 
 6088      6C6400
 6089              	.LASF31:
 6090 0961 70726576 		.ascii	"previousSampleTbl\000"
 6090      696F7573 
 6090      53616D70 
 6090      6C655462 
 6090      6C00
 6091              	.LASF71:
 6092 0973 43617053 		.ascii	"CapSense_SetDebounce\000"
 6092      656E7365 
 6092      5F536574 
 6092      4465626F 
 6092      756E6365 
 6093              	.LASF76:
 6094 0988 66696E67 		.ascii	"fingerThreshold\000"
 6094      65725468 
 6094      72657368 
 6094      6F6C6400 
 6095              	.LASF22:
 6096 0998 63686172 		.ascii	"chargeDivTbl\000"
 6096      67654469 
 6096      7654626C 
 6096      00
 6097              	.LASF1:
 6098 09a5 756E7369 		.ascii	"unsigned char\000"
 6098      676E6564 
 6098      20636861 
 6098      7200
 6099              	.LASF137:
 6100 09b3 43617053 		.ascii	"CapSense_noiseThreshold\000"
 6100      656E7365 
 6100      5F6E6F69 
 6100      73655468 
 6100      72657368 
 6101              	.LASF75:
 6102 09cb 6465626F 		.ascii	"debounceIndex\000"
 6102      756E6365 
 6102      496E6465 
 6102      7800
 6103              	.LASF53:
 6104 09d9 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 6104      656E7365 
 6104      5F496E69 
 6104      7469616C 
 6104      697A6541 
 6105              	.LASF58:
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 167


 6106 09f9 43617053 		.ascii	"CapSense_GetBaselineData\000"
 6106      656E7365 
 6106      5F476574 
 6106      42617365 
 6106      6C696E65 
 6107              	.LASF72:
 6108 0a12 43617053 		.ascii	"CapSense_SetLowBaselineReset\000"
 6108      656E7365 
 6108      5F536574 
 6108      4C6F7742 
 6108      6173656C 
 6109              	.LASF21:
 6110 0a2f 73656E73 		.ascii	"sensetivityTbl\000"
 6110      65746976 
 6110      69747954 
 6110      626C00
 6111              	.LASF150:
 6112 0a3e 43617053 		.ascii	"CapSense_SetBitValue\000"
 6112      656E7365 
 6112      5F536574 
 6112      42697456 
 6112      616C7565 
 6113              	.LASF124:
 6114 0a53 43617053 		.ascii	"CapSense_centroidMult\000"
 6114      656E7365 
 6114      5F63656E 
 6114      74726F69 
 6114      644D756C 
 6115              	.LASF154:
 6116 0a69 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_CSHL.c\000"
 6116      72617465 
 6116      645F536F 
 6116      75726365 
 6116      5C50536F 
 6117              	.LASF149:
 6118 0a90 43617053 		.ascii	"CapSense_GetBitValue\000"
 6118      656E7365 
 6118      5F476574 
 6118      42697456 
 6118      616C7565 
 6119              	.LASF82:
 6120 0aa5 73746174 		.ascii	"state\000"
 6120      6500
 6121              	.LASF145:
 6122 0aab 43617053 		.ascii	"CapSense_enableRawFilters\000"
 6122      656E7365 
 6122      5F656E61 
 6122      626C6552 
 6122      61774669 
 6123              	.LASF155:
 6124 0ac5 433A5C55 		.ascii	"C:\\Users\\srhi\\Desktop\\PSOC\\L65_Buzzer_capsense"
 6124      73657273 
 6124      5C737268 
 6124      695C4465 
 6124      736B746F 
 6125 0af3 5F736C69 		.ascii	"_slider.cydsn\000"
 6125      6465722E 
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 168


 6125      63796473 
 6125      6E00
 6126              	.LASF23:
 6127 0b01 6D6F6444 		.ascii	"modDivTbl\000"
 6127      69765462 
 6127      6C00
 6128              	.LASF0:
 6129 0b0b 7369676E 		.ascii	"signed char\000"
 6129      65642063 
 6129      68617200 
 6130              	.LASF3:
 6131 0b17 73686F72 		.ascii	"short unsigned int\000"
 6131      7420756E 
 6131      7369676E 
 6131      65642069 
 6131      6E7400
 6132              	.LASF101:
 6133 0b2a 43617053 		.ascii	"CapSense_GetRadialCentroidPos\000"
 6133      656E7365 
 6133      5F476574 
 6133      52616469 
 6133      616C4365 
 6134              	.LASF41:
 6135 0b48 70747253 		.ascii	"ptrSetBitValue\000"
 6135      65744269 
 6135      7456616C 
 6135      756500
 6136              	.LASF102:
 6137 0b57 43617053 		.ascii	"CapSense_MedianFilter\000"
 6137      656E7365 
 6137      5F4D6564 
 6137      69616E46 
 6137      696C7465 
 6138              	.LASF107:
 6139 0b6d 74656D70 		.ascii	"tempRaw\000"
 6139      52617700 
 6140              	.LASF121:
 6141 0b75 43617053 		.ascii	"CapSense_GetDebounce\000"
 6141      656E7365 
 6141      5F476574 
 6141      4465626F 
 6141      756E6365 
 6142              	.LASF79:
 6143 0b8a 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 6143      656E7365 
 6143      5F436865 
 6143      636B4973 
 6143      57696467 
 6144              	.LASF9:
 6145 0ba7 75696E74 		.ascii	"uint8\000"
 6145      3800
 6146              	.LASF15:
 6147 0bad 646F7562 		.ascii	"double\000"
 6147      6C6500
 6148              	.LASF143:
 6149 0bb4 43617053 		.ascii	"CapSense_rawFilterData1\000"
 6149      656E7365 
ARM GAS  C:\Users\srhi\AppData\Local\Temp\ccVBDiiK.s 			page 169


 6149      5F726177 
 6149      46696C74 
 6149      65724461 
 6150              	.LASF98:
 6151 0bcc 706F7369 		.ascii	"position\000"
 6151      74696F6E 
 6151      00
 6152              	.LASF133:
 6153 0bd5 43617053 		.ascii	"CapSense_sensorOnMask\000"
 6153      656E7365 
 6153      5F73656E 
 6153      736F724F 
 6153      6E4D6173 
 6154              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
